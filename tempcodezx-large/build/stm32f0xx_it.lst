ARM GAS  C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	NMI_Handler:
  25              	.LFB40:
  26              		.file 1 "Core/Src/stm32f0xx_it.c"
   1:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f0xx_it.c **** /**
   3:Core/Src/stm32f0xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   5:Core/Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f0xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f0xx_it.c ****   * @attention
   8:Core/Src/stm32f0xx_it.c ****   *
   9:Core/Src/stm32f0xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f0xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f0xx_it.c ****   *
  12:Core/Src/stm32f0xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f0xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f0xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f0xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f0xx_it.c ****   *
  17:Core/Src/stm32f0xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f0xx_it.c ****   */
  19:Core/Src/stm32f0xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f0xx_it.c **** 
  21:Core/Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f0xx_it.c **** #include "main.h"
  23:Core/Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  24:Core/Src/stm32f0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f0xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f0xx_it.c **** 
  28:Core/Src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f0xx_it.c **** #include "control.h"
  31:Core/Src/stm32f0xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f0xx_it.c **** 
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s 			page 2


  33:Core/Src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f0xx_it.c **** 
  36:Core/Src/stm32f0xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f0xx_it.c **** 
  38:Core/Src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f0xx_it.c **** 
  41:Core/Src/stm32f0xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f0xx_it.c **** 
  43:Core/Src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f0xx_it.c **** 
  46:Core/Src/stm32f0xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f0xx_it.c **** 
  48:Core/Src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f0xx_it.c **** 
  51:Core/Src/stm32f0xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f0xx_it.c **** 
  53:Core/Src/stm32f0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f0xx_it.c **** 
  56:Core/Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f0xx_it.c **** 
  58:Core/Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_adc;
  60:Core/Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  61:Core/Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  62:Core/Src/stm32f0xx_it.c **** extern UART_HandleTypeDef huart1;
  63:Core/Src/stm32f0xx_it.c **** extern UART_HandleTypeDef huart2;
  64:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN EV */
  65:Core/Src/stm32f0xx_it.c **** 
  66:Core/Src/stm32f0xx_it.c **** /* USER CODE END EV */
  67:Core/Src/stm32f0xx_it.c **** 
  68:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f0xx_it.c **** /*           Cortex-M0 Processor Interruption and Exception Handlers          */
  70:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
  71:Core/Src/stm32f0xx_it.c **** /**
  72:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Core/Src/stm32f0xx_it.c ****   */
  74:Core/Src/stm32f0xx_it.c **** void NMI_Handler(void)
  75:Core/Src/stm32f0xx_it.c **** {
  27              		.loc 1 75 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  76:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f0xx_it.c **** 
  78:Core/Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32f0xx_it.c **** 
  81:Core/Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Core/Src/stm32f0xx_it.c **** }
  32              		.loc 1 82 1 view .LVU1
  33              		@ sp needed
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s 			page 3


  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE40:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  45              	HardFault_Handler:
  46              	.LFB41:
  83:Core/Src/stm32f0xx_it.c **** 
  84:Core/Src/stm32f0xx_it.c **** /**
  85:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Core/Src/stm32f0xx_it.c ****   */
  87:Core/Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  88:Core/Src/stm32f0xx_it.c **** {
  47              		.loc 1 88 1 view -0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  89:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Core/Src/stm32f0xx_it.c **** 
  91:Core/Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Core/Src/stm32f0xx_it.c ****   while (1)
  54              		.loc 1 92 3 discriminator 1 view .LVU3
  93:Core/Src/stm32f0xx_it.c ****   {
  94:Core/Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  95:Core/Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f0xx_it.c ****   }
  55              		.loc 1 96 3 discriminator 1 view .LVU4
  92:Core/Src/stm32f0xx_it.c ****   {
  56              		.loc 1 92 9 discriminator 1 view .LVU5
  57 0000 FEE7     		b	.L3
  58              		.cfi_endproc
  59              	.LFE41:
  61              		.section	.text.SVC_Handler,"ax",%progbits
  62              		.align	1
  63              		.global	SVC_Handler
  64              		.syntax unified
  65              		.code	16
  66              		.thumb_func
  68              	SVC_Handler:
  69              	.LFB42:
  97:Core/Src/stm32f0xx_it.c **** }
  98:Core/Src/stm32f0xx_it.c **** 
  99:Core/Src/stm32f0xx_it.c **** /**
 100:Core/Src/stm32f0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 101:Core/Src/stm32f0xx_it.c ****   */
 102:Core/Src/stm32f0xx_it.c **** void SVC_Handler(void)
 103:Core/Src/stm32f0xx_it.c **** {
  70              		.loc 1 103 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s 			page 4


  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
 104:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 105:Core/Src/stm32f0xx_it.c **** 
 106:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 107:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 108:Core/Src/stm32f0xx_it.c **** 
 109:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 110:Core/Src/stm32f0xx_it.c **** }
  75              		.loc 1 110 1 view .LVU7
  76              		@ sp needed
  77 0000 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE42:
  81              		.section	.text.PendSV_Handler,"ax",%progbits
  82              		.align	1
  83              		.global	PendSV_Handler
  84              		.syntax unified
  85              		.code	16
  86              		.thumb_func
  88              	PendSV_Handler:
  89              	.LFB43:
 111:Core/Src/stm32f0xx_it.c **** 
 112:Core/Src/stm32f0xx_it.c **** /**
 113:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Pendable request for system service.
 114:Core/Src/stm32f0xx_it.c ****   */
 115:Core/Src/stm32f0xx_it.c **** void PendSV_Handler(void)
 116:Core/Src/stm32f0xx_it.c **** {
  90              		.loc 1 116 1 view -0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
 117:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 118:Core/Src/stm32f0xx_it.c **** 
 119:Core/Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 120:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 121:Core/Src/stm32f0xx_it.c **** 
 122:Core/Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 123:Core/Src/stm32f0xx_it.c **** }
  95              		.loc 1 123 1 view .LVU9
  96              		@ sp needed
  97 0000 7047     		bx	lr
  98              		.cfi_endproc
  99              	.LFE43:
 101              		.section	.text.SysTick_Handler,"ax",%progbits
 102              		.align	1
 103              		.global	SysTick_Handler
 104              		.syntax unified
 105              		.code	16
 106              		.thumb_func
 108              	SysTick_Handler:
 109              	.LFB44:
 124:Core/Src/stm32f0xx_it.c **** 
 125:Core/Src/stm32f0xx_it.c **** /**
 126:Core/Src/stm32f0xx_it.c ****   * @brief This function handles System tick timer.
 127:Core/Src/stm32f0xx_it.c ****   */
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s 			page 5


 128:Core/Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 129:Core/Src/stm32f0xx_it.c **** {
 110              		.loc 1 129 1 view -0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114 0000 10B5     		push	{r4, lr}
 115              	.LCFI0:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 130:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 131:Core/Src/stm32f0xx_it.c **** 
 132:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 133:Core/Src/stm32f0xx_it.c ****   HAL_IncTick();
 119              		.loc 1 133 3 view .LVU11
 120 0002 FFF7FEFF 		bl	HAL_IncTick
 121              	.LVL0:
 134:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 135:Core/Src/stm32f0xx_it.c ****   sysms++;
 122              		.loc 1 135 3 view .LVU12
 123              		.loc 1 135 8 is_stmt 0 view .LVU13
 124 0006 1D4A     		ldr	r2, .L10
 125 0008 1368     		ldr	r3, [r2]
 126 000a 0133     		adds	r3, r3, #1
 127 000c 1360     		str	r3, [r2]
 136:Core/Src/stm32f0xx_it.c ****   readKeyTime++;
 128              		.loc 1 136 3 is_stmt 1 view .LVU14
 129              		.loc 1 136 14 is_stmt 0 view .LVU15
 130 000e 1C4A     		ldr	r2, .L10+4
 131 0010 1368     		ldr	r3, [r2]
 132 0012 0133     		adds	r3, r3, #1
 133 0014 1360     		str	r3, [r2]
 137:Core/Src/stm32f0xx_it.c ****   one1000msCnt++;
 134              		.loc 1 137 3 is_stmt 1 view .LVU16
 135              		.loc 1 137 15 is_stmt 0 view .LVU17
 136 0016 1B4A     		ldr	r2, .L10+8
 137 0018 1368     		ldr	r3, [r2]
 138 001a 0133     		adds	r3, r3, #1
 139 001c 1360     		str	r3, [r2]
 138:Core/Src/stm32f0xx_it.c ****   extern unsigned  int sec_time;
 140              		.loc 1 138 3 is_stmt 1 view .LVU18
 139:Core/Src/stm32f0xx_it.c ****   sec_time++;
 141              		.loc 1 139 3 view .LVU19
 142              		.loc 1 139 11 is_stmt 0 view .LVU20
 143 001e 1A4A     		ldr	r2, .L10+12
 144 0020 1368     		ldr	r3, [r2]
 145 0022 0133     		adds	r3, r3, #1
 146 0024 1360     		str	r3, [r2]
 140:Core/Src/stm32f0xx_it.c ****   extern unsigned int LogTime;
 147              		.loc 1 140 3 is_stmt 1 view .LVU21
 141:Core/Src/stm32f0xx_it.c ****   LogTime++;
 148              		.loc 1 141 3 view .LVU22
 149              		.loc 1 141 10 is_stmt 0 view .LVU23
 150 0026 194A     		ldr	r2, .L10+16
 151 0028 1368     		ldr	r3, [r2]
 152 002a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s 			page 6


 153 002c 1360     		str	r3, [r2]
 142:Core/Src/stm32f0xx_it.c ****   extern void u2MsProcess(void);
 154              		.loc 1 142 3 is_stmt 1 view .LVU24
 143:Core/Src/stm32f0xx_it.c ****   u2MsProcess();
 155              		.loc 1 143 3 view .LVU25
 156 002e FFF7FEFF 		bl	u2MsProcess
 157              	.LVL1:
 144:Core/Src/stm32f0xx_it.c ****   extern unsigned char JDQFLAG;
 158              		.loc 1 144 3 view .LVU26
 145:Core/Src/stm32f0xx_it.c ****   extern unsigned char JDQCHAN;
 159              		.loc 1 145 3 view .LVU27
 146:Core/Src/stm32f0xx_it.c ****   extern unsigned char JDQSTAT;
 160              		.loc 1 146 3 view .LVU28
 147:Core/Src/stm32f0xx_it.c ****   extern unsigned int  JDQTIME;
 161              		.loc 1 147 3 view .LVU29
 148:Core/Src/stm32f0xx_it.c ****   if(JDQSTAT==1||JDQSTAT==2||JDQSTAT==3)JDQTIME++;//???????
 162              		.loc 1 148 3 view .LVU30
 163              		.loc 1 148 28 is_stmt 0 view .LVU31
 164 0032 174B     		ldr	r3, .L10+20
 165 0034 1B78     		ldrb	r3, [r3]
 166 0036 013B     		subs	r3, r3, #1
 167 0038 DBB2     		uxtb	r3, r3
 168              		.loc 1 148 5 view .LVU32
 169 003a 022B     		cmp	r3, #2
 170 003c 03D8     		bhi	.L7
 171              		.loc 1 148 41 is_stmt 1 discriminator 1 view .LVU33
 172              		.loc 1 148 48 is_stmt 0 discriminator 1 view .LVU34
 173 003e 154A     		ldr	r2, .L10+24
 174 0040 1368     		ldr	r3, [r2]
 175 0042 0133     		adds	r3, r3, #1
 176 0044 1360     		str	r3, [r2]
 177              	.L7:
 149:Core/Src/stm32f0xx_it.c ****   static unsigned int stms=0;
 178              		.loc 1 149 3 is_stmt 1 view .LVU35
 150:Core/Src/stm32f0xx_it.c ****   if(++stms>60000)
 179              		.loc 1 150 3 view .LVU36
 180              		.loc 1 150 6 is_stmt 0 view .LVU37
 181 0046 144A     		ldr	r2, .L10+28
 182 0048 1368     		ldr	r3, [r2]
 183 004a 0133     		adds	r3, r3, #1
 184              		.loc 1 150 5 view .LVU38
 185 004c 1360     		str	r3, [r2]
 186 004e 134A     		ldr	r2, .L10+32
 187 0050 9342     		cmp	r3, r2
 188 0052 06D9     		bls	.L8
 151:Core/Src/stm32f0xx_it.c ****   {
 152:Core/Src/stm32f0xx_it.c ****     stms=0;
 189              		.loc 1 152 5 is_stmt 1 view .LVU39
 190              		.loc 1 152 9 is_stmt 0 view .LVU40
 191 0054 104B     		ldr	r3, .L10+28
 192 0056 0022     		movs	r2, #0
 193 0058 1A60     		str	r2, [r3]
 153:Core/Src/stm32f0xx_it.c ****     oneMinuteCnt++;
 194              		.loc 1 153 5 is_stmt 1 view .LVU41
 195              		.loc 1 153 17 is_stmt 0 view .LVU42
 196 005a 114A     		ldr	r2, .L10+36
 197 005c 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s 			page 7


 198 005e 0133     		adds	r3, r3, #1
 199 0060 1360     		str	r3, [r2]
 200              	.L8:
 154:Core/Src/stm32f0xx_it.c ****   }
 155:Core/Src/stm32f0xx_it.c ****   if(willBeepTime>0)willBeepTime--;
 201              		.loc 1 155 3 is_stmt 1 view .LVU43
 202              		.loc 1 155 18 is_stmt 0 view .LVU44
 203 0062 104B     		ldr	r3, .L10+40
 204 0064 1B68     		ldr	r3, [r3]
 205              		.loc 1 155 5 view .LVU45
 206 0066 002B     		cmp	r3, #0
 207 0068 02D0     		beq	.L9
 208              		.loc 1 155 21 is_stmt 1 discriminator 1 view .LVU46
 209              		.loc 1 155 33 is_stmt 0 discriminator 1 view .LVU47
 210 006a 013B     		subs	r3, r3, #1
 211 006c 0D4A     		ldr	r2, .L10+40
 212 006e 1360     		str	r3, [r2]
 213              	.L9:
 156:Core/Src/stm32f0xx_it.c ****   extern unsigned int timedelaycnt;
 214              		.loc 1 156 3 is_stmt 1 view .LVU48
 157:Core/Src/stm32f0xx_it.c ****   timedelaycnt++;
 215              		.loc 1 157 3 view .LVU49
 216              		.loc 1 157 15 is_stmt 0 view .LVU50
 217 0070 0D4A     		ldr	r2, .L10+44
 218 0072 1368     		ldr	r3, [r2]
 219 0074 0133     		adds	r3, r3, #1
 220 0076 1360     		str	r3, [r2]
 158:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 159:Core/Src/stm32f0xx_it.c **** }
 221              		.loc 1 159 1 view .LVU51
 222              		@ sp needed
 223 0078 10BD     		pop	{r4, pc}
 224              	.L11:
 225 007a C046     		.align	2
 226              	.L10:
 227 007c 00000000 		.word	sysms
 228 0080 00000000 		.word	readKeyTime
 229 0084 00000000 		.word	one1000msCnt
 230 0088 00000000 		.word	sec_time
 231 008c 00000000 		.word	LogTime
 232 0090 00000000 		.word	JDQSTAT
 233 0094 00000000 		.word	JDQTIME
 234 0098 00000000 		.word	.LANCHOR0
 235 009c 60EA0000 		.word	60000
 236 00a0 00000000 		.word	oneMinuteCnt
 237 00a4 00000000 		.word	willBeepTime
 238 00a8 00000000 		.word	timedelaycnt
 239              		.cfi_endproc
 240              	.LFE44:
 242              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 243              		.align	1
 244              		.global	DMA1_Channel1_IRQHandler
 245              		.syntax unified
 246              		.code	16
 247              		.thumb_func
 249              	DMA1_Channel1_IRQHandler:
 250              	.LFB45:
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s 			page 8


 160:Core/Src/stm32f0xx_it.c **** 
 161:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
 162:Core/Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 163:Core/Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 164:Core/Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 165:Core/Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 166:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
 167:Core/Src/stm32f0xx_it.c **** 
 168:Core/Src/stm32f0xx_it.c **** /**
 169:Core/Src/stm32f0xx_it.c ****   * @brief This function handles DMA1 channel 1 interrupt.
 170:Core/Src/stm32f0xx_it.c ****   */
 171:Core/Src/stm32f0xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 172:Core/Src/stm32f0xx_it.c **** {
 251              		.loc 1 172 1 is_stmt 1 view -0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255 0000 10B5     		push	{r4, lr}
 256              	.LCFI1:
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 4, -8
 259              		.cfi_offset 14, -4
 173:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 174:Core/Src/stm32f0xx_it.c **** 
 175:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 176:Core/Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc);
 260              		.loc 1 176 3 view .LVU53
 261 0002 0248     		ldr	r0, .L13
 262 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 263              	.LVL2:
 177:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 178:Core/Src/stm32f0xx_it.c **** 
 179:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 180:Core/Src/stm32f0xx_it.c **** }
 264              		.loc 1 180 1 is_stmt 0 view .LVU54
 265              		@ sp needed
 266 0008 10BD     		pop	{r4, pc}
 267              	.L14:
 268 000a C046     		.align	2
 269              	.L13:
 270 000c 00000000 		.word	hdma_adc
 271              		.cfi_endproc
 272              	.LFE45:
 274              		.section	.text.DMA1_Channel2_3_IRQHandler,"ax",%progbits
 275              		.align	1
 276              		.global	DMA1_Channel2_3_IRQHandler
 277              		.syntax unified
 278              		.code	16
 279              		.thumb_func
 281              	DMA1_Channel2_3_IRQHandler:
 282              	.LFB46:
 181:Core/Src/stm32f0xx_it.c **** 
 182:Core/Src/stm32f0xx_it.c **** /**
 183:Core/Src/stm32f0xx_it.c ****   * @brief This function handles DMA1 channel 2 and 3 interrupts.
 184:Core/Src/stm32f0xx_it.c ****   */
 185:Core/Src/stm32f0xx_it.c **** void DMA1_Channel2_3_IRQHandler(void)
 186:Core/Src/stm32f0xx_it.c **** {
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s 			page 9


 283              		.loc 1 186 1 is_stmt 1 view -0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287 0000 10B5     		push	{r4, lr}
 288              	.LCFI2:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 4, -8
 291              		.cfi_offset 14, -4
 187:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_3_IRQn 0 */
 188:Core/Src/stm32f0xx_it.c **** 
 189:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel2_3_IRQn 0 */
 190:Core/Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 292              		.loc 1 190 3 view .LVU56
 293 0002 0248     		ldr	r0, .L16
 294 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 295              	.LVL3:
 191:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_3_IRQn 1 */
 192:Core/Src/stm32f0xx_it.c **** 
 193:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel2_3_IRQn 1 */
 194:Core/Src/stm32f0xx_it.c **** }
 296              		.loc 1 194 1 is_stmt 0 view .LVU57
 297              		@ sp needed
 298 0008 10BD     		pop	{r4, pc}
 299              	.L17:
 300 000a C046     		.align	2
 301              	.L16:
 302 000c 00000000 		.word	hdma_usart1_rx
 303              		.cfi_endproc
 304              	.LFE46:
 306              		.section	.text.DMA1_Channel4_5_IRQHandler,"ax",%progbits
 307              		.align	1
 308              		.global	DMA1_Channel4_5_IRQHandler
 309              		.syntax unified
 310              		.code	16
 311              		.thumb_func
 313              	DMA1_Channel4_5_IRQHandler:
 314              	.LFB47:
 195:Core/Src/stm32f0xx_it.c **** 
 196:Core/Src/stm32f0xx_it.c **** /**
 197:Core/Src/stm32f0xx_it.c ****   * @brief This function handles DMA1 channel 4 and 5 interrupts.
 198:Core/Src/stm32f0xx_it.c ****   */
 199:Core/Src/stm32f0xx_it.c **** void DMA1_Channel4_5_IRQHandler(void)
 200:Core/Src/stm32f0xx_it.c **** {
 315              		.loc 1 200 1 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319 0000 10B5     		push	{r4, lr}
 320              	.LCFI3:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 4, -8
 323              		.cfi_offset 14, -4
 201:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_5_IRQn 0 */
 202:Core/Src/stm32f0xx_it.c **** 
 203:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel4_5_IRQn 0 */
 204:Core/Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s 			page 10


 324              		.loc 1 204 3 view .LVU59
 325 0002 0248     		ldr	r0, .L19
 326 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 327              	.LVL4:
 205:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_5_IRQn 1 */
 206:Core/Src/stm32f0xx_it.c **** 
 207:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel4_5_IRQn 1 */
 208:Core/Src/stm32f0xx_it.c **** }
 328              		.loc 1 208 1 is_stmt 0 view .LVU60
 329              		@ sp needed
 330 0008 10BD     		pop	{r4, pc}
 331              	.L20:
 332 000a C046     		.align	2
 333              	.L19:
 334 000c 00000000 		.word	hdma_usart2_rx
 335              		.cfi_endproc
 336              	.LFE47:
 338              		.section	.text.USART1_IRQHandler,"ax",%progbits
 339              		.align	1
 340              		.global	USART1_IRQHandler
 341              		.syntax unified
 342              		.code	16
 343              		.thumb_func
 345              	USART1_IRQHandler:
 346              	.LFB48:
 209:Core/Src/stm32f0xx_it.c **** 
 210:Core/Src/stm32f0xx_it.c **** /**
 211:Core/Src/stm32f0xx_it.c ****   * @brief This function handles USART1 global interrupt.
 212:Core/Src/stm32f0xx_it.c ****   */
 213:Core/Src/stm32f0xx_it.c **** void USART1_IRQHandler(void)
 214:Core/Src/stm32f0xx_it.c **** {
 347              		.loc 1 214 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351 0000 10B5     		push	{r4, lr}
 352              	.LCFI4:
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 4, -8
 355              		.cfi_offset 14, -4
 215:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 216:Core/Src/stm32f0xx_it.c **** 
 217:Core/Src/stm32f0xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 218:Core/Src/stm32f0xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 356              		.loc 1 218 3 view .LVU62
 357 0002 0248     		ldr	r0, .L22
 358 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 359              	.LVL5:
 219:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 220:Core/Src/stm32f0xx_it.c **** 
 221:Core/Src/stm32f0xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 222:Core/Src/stm32f0xx_it.c **** }
 360              		.loc 1 222 1 is_stmt 0 view .LVU63
 361              		@ sp needed
 362 0008 10BD     		pop	{r4, pc}
 363              	.L23:
 364 000a C046     		.align	2
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s 			page 11


 365              	.L22:
 366 000c 00000000 		.word	huart1
 367              		.cfi_endproc
 368              	.LFE48:
 370              		.section	.text.USART2_IRQHandler,"ax",%progbits
 371              		.align	1
 372              		.global	USART2_IRQHandler
 373              		.syntax unified
 374              		.code	16
 375              		.thumb_func
 377              	USART2_IRQHandler:
 378              	.LFB49:
 223:Core/Src/stm32f0xx_it.c **** 
 224:Core/Src/stm32f0xx_it.c **** /**
 225:Core/Src/stm32f0xx_it.c ****   * @brief This function handles USART2 global interrupt.
 226:Core/Src/stm32f0xx_it.c ****   */
 227:Core/Src/stm32f0xx_it.c **** void USART2_IRQHandler(void)
 228:Core/Src/stm32f0xx_it.c **** {
 379              		.loc 1 228 1 is_stmt 1 view -0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 10B5     		push	{r4, lr}
 384              	.LCFI5:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 4, -8
 387              		.cfi_offset 14, -4
 229:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 230:Core/Src/stm32f0xx_it.c **** 
 231:Core/Src/stm32f0xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 232:Core/Src/stm32f0xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 388              		.loc 1 232 3 view .LVU65
 389 0002 0348     		ldr	r0, .L25
 390 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 391              	.LVL6:
 233:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 234:Core/Src/stm32f0xx_it.c ****   extern void u2RxIt(void);
 392              		.loc 1 234 3 view .LVU66
 235:Core/Src/stm32f0xx_it.c ****   u2RxIt();
 393              		.loc 1 235 3 view .LVU67
 394 0008 FFF7FEFF 		bl	u2RxIt
 395              	.LVL7:
 236:Core/Src/stm32f0xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 237:Core/Src/stm32f0xx_it.c **** }
 396              		.loc 1 237 1 is_stmt 0 view .LVU68
 397              		@ sp needed
 398 000c 10BD     		pop	{r4, pc}
 399              	.L26:
 400 000e C046     		.align	2
 401              	.L25:
 402 0010 00000000 		.word	huart2
 403              		.cfi_endproc
 404              	.LFE49:
 406              		.section	.bss.stms.0,"aw",%nobits
 407              		.align	2
 408              		.set	.LANCHOR0,. + 0
 411              	stms.0:
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s 			page 12


 412 0000 00000000 		.space	4
 413              		.text
 414              	.Letext0:
 415              		.file 2 "c:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_defa
 416              		.file 3 "c:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h
 417              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 418              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 419              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 420              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 421              		.file 8 "Core/Inc/control.h"
 422              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_it.c
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:18     .text.NMI_Handler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:39     .text.HardFault_Handler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:62     .text.SVC_Handler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:68     .text.SVC_Handler:00000000 SVC_Handler
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:82     .text.PendSV_Handler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:88     .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:102    .text.SysTick_Handler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:108    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:227    .text.SysTick_Handler:0000007c $d
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:243    .text.DMA1_Channel1_IRQHandler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:249    .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:270    .text.DMA1_Channel1_IRQHandler:0000000c $d
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:275    .text.DMA1_Channel2_3_IRQHandler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:281    .text.DMA1_Channel2_3_IRQHandler:00000000 DMA1_Channel2_3_IRQHandler
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:302    .text.DMA1_Channel2_3_IRQHandler:0000000c $d
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:307    .text.DMA1_Channel4_5_IRQHandler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:313    .text.DMA1_Channel4_5_IRQHandler:00000000 DMA1_Channel4_5_IRQHandler
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:334    .text.DMA1_Channel4_5_IRQHandler:0000000c $d
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:339    .text.USART1_IRQHandler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:345    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:366    .text.USART1_IRQHandler:0000000c $d
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:371    .text.USART2_IRQHandler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:377    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:402    .text.USART2_IRQHandler:00000010 $d
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:407    .bss.stms.0:00000000 $d
C:\Users\57298\AppData\Local\Temp\ccg5R3e4.s:411    .bss.stms.0:00000000 stms.0

UNDEFINED SYMBOLS
HAL_IncTick
u2MsProcess
sysms
readKeyTime
one1000msCnt
sec_time
LogTime
JDQSTAT
JDQTIME
oneMinuteCnt
willBeepTime
timedelaycnt
HAL_DMA_IRQHandler
hdma_adc
hdma_usart1_rx
hdma_usart2_rx
HAL_UART_IRQHandler
huart1
u2RxIt
huart2
