ARM GAS  C:\Users\57298\AppData\Local\Temp\ccX3T3Ev.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_hal_iwdg.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_IWDG_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_IWDG_Init
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	HAL_IWDG_Init:
  25              	.LVL0:
  26              	.LFB40:
  27              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @file    stm32f0xx_hal_iwdg.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @brief   IWDG HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *          functionalities of the Independent Watchdog (IWDG) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *           + Initialization and Start functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *           + IO operation functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   ******************************************************************************
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @attention
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * Copyright (c) 2016 STMicroelectronics.
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * All rights reserved.
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * This software is licensed under terms that can be found in the LICENSE file
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * in the root directory of this software component.
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   ******************************************************************************
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   @verbatim
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   ==============================================================================
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****                     ##### IWDG Generic features #####
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   ==============================================================================
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   [..]
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     (+) The IWDG can be started by either software or hardware (configurable
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         through option byte).
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     (+) The IWDG is clocked by the Low-Speed Internal clock (LSI) and thus stays
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         active even if the main clock fails.
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccX3T3Ev.s 			page 2


  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     (+) Once the IWDG is started, the LSI is forced ON and both cannot be
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         disabled. The counter starts counting down from the reset value (0xFFF).
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         When it reaches the end of count value (0x000) a reset signal is
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         generated (IWDG reset).
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     (+) Whenever the key value 0x0000 AAAA is written in the IWDG_KR register,
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         the IWDG_RLR value is reloaded into the counter and the watchdog reset
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         is prevented.
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     (+) The IWDG is implemented in the VDD voltage domain that is still functional
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         in STOP and STANDBY mode (IWDG reset can wake up the CPU from STANDBY).
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         IWDGRST flag in RCC_CSR register can be used to inform when an IWDG
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         reset occurs.
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     (+) Debug mode: When the microcontroller enters debug mode (core halted),
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         the IWDG counter either continues to work normally or stops, depending
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         on DBG_IWDG_STOP configuration bit in DBG module, accessible through
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         __HAL_DBGMCU_FREEZE_IWDG() and __HAL_DBGMCU_UNFREEZE_IWDG() macros.
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     [..] Min-max timeout value @32KHz (LSI): ~125us / ~32.7s
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          The IWDG timeout may vary due to LSI clock frequency dispersion.
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          STM32F0xx devices provide the capability to measure the LSI clock
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          frequency (LSI clock is internally connected to TIM16 CH1 input capture).
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          The measured value can be used to have an IWDG timeout with an
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          acceptable accuracy.
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     [..] Default timeout value (necessary for IWDG_SR status register update):
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          Constant LSI_VALUE is defined based on the nominal LSI clock frequency.
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          This frequency being subject to variations as mentioned above, the
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          default timeout value (defined through constant HAL_IWDG_DEFAULT_TIMEOUT
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          below) may become too short or too long.
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          In such cases, this default timeout value can be tuned by redefining
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          the constant LSI_VALUE at user-application level (based, for instance,
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          on the measured LSI clock frequency as explained above).
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****                      ##### How to use this driver #####
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   ==============================================================================
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   [..]
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     (#) Use IWDG using HAL_IWDG_Init() function to :
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (++) Enable instance by writing Start keyword in IWDG_KEY register. LSI
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****            clock is forced ON and IWDG counter starts counting down.
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (++) Enable write access to configuration registers:
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****           IWDG_PR, IWDG_RLR and IWDG_WINR.
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (++) Configure the IWDG prescaler and counter reload value. This reload
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****            value will be loaded in the IWDG counter each time the watchdog is
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****            reloaded, then the IWDG will start counting down from this value.
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (++) Depending on window parameter:
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         (+++) If Window Init parameter is same as Window register value,
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****              nothing more is done but reload counter value in order to exit
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****              function with exact time base.
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         (+++) Else modify Window register. This will automatically reload
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****              watchdog counter.
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (++) Wait for status flags to be reset.
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     (#) Then the application program must refresh the IWDG counter at regular
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         intervals during normal operation to prevent an MCU reset, using
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccX3T3Ev.s 			page 3


  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         HAL_IWDG_Refresh() function.
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****      *** IWDG HAL driver macros list ***
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****      ====================================
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****      [..]
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****        Below the list of most used macros in IWDG HAL driver:
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (+) __HAL_IWDG_START: Enable the IWDG peripheral
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (+) __HAL_IWDG_RELOAD_COUNTER: Reloads IWDG counter with value defined in
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****           the reload register
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   @endverbatim
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /* Includes ------------------------------------------------------------------*/
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** #include "stm32f0xx_hal.h"
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /** @addtogroup STM32F0xx_HAL_Driver
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @{
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** #ifdef HAL_IWDG_MODULE_ENABLED
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /** @addtogroup IWDG
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @brief IWDG HAL module driver.
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @{
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /* Private typedef -----------------------------------------------------------*/
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /* Private define ------------------------------------------------------------*/
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /** @defgroup IWDG_Private_Defines IWDG Private Defines
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @{
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /* Status register needs up to 5 LSI clock periods divided by the clock
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****    prescaler to be updated. The number of LSI clock periods is upper-rounded to
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****    6 for the timeout value calculation.
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****    The timeout value is calculated using the highest prescaler (256) and
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****    the LSI_VALUE constant. The value of this constant can be changed by the user
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****    to take into account possible LSI clock period variations.
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****    The timeout value is multiplied by 1000 to be converted in milliseconds.
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****    LSI startup time is also considered here by adding LSI_STARTUP_TIME
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****    converted in milliseconds. */
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** #define HAL_IWDG_DEFAULT_TIMEOUT        (((6UL * 256UL * 1000UL) / LSI_VALUE) + ((LSI_STARTUP_TIME 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** #define IWDG_KERNEL_UPDATE_FLAGS        (IWDG_SR_WVU | IWDG_SR_RVU | IWDG_SR_PVU)
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /**
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @}
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /* Private macro -------------------------------------------------------------*/
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /* Private variables ---------------------------------------------------------*/
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /* Private function prototypes -----------------------------------------------*/
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /* Exported functions --------------------------------------------------------*/
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /** @addtogroup IWDG_Exported_Functions
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @{
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /** @addtogroup IWDG_Exported_Functions_Group1
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *  @brief    Initialization and Start functions.
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccX3T3Ev.s 			page 4


 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** @verbatim
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****  ===============================================================================
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****           ##### Initialization and Start functions #####
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****  ===============================================================================
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****  [..]  This section provides functions allowing to:
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (+) Initialize the IWDG according to the specified parameters in the
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****           IWDG_InitTypeDef of associated handle.
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (+) Manage Window option.
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (+) Once initialization is performed in HAL_IWDG_Init function, Watchdog
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****           is reloaded in order to exit function with correct time base.
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** @endverbatim
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @{
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /**
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @brief  Initialize the IWDG according to the specified parameters in the
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *         IWDG_InitTypeDef and start watchdog. Before exiting function,
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *         watchdog is refreshed in order to have correct time base.
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @param  hiwdg  pointer to a IWDG_HandleTypeDef structure that contains
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *                the configuration information for the specified IWDG module.
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @retval HAL status
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** HAL_StatusTypeDef HAL_IWDG_Init(IWDG_HandleTypeDef *hiwdg)
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** {
  28              		.loc 1 171 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 171 1 is_stmt 0 view .LVU1
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  40 0002 041E     		subs	r4, r0, #0
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   uint32_t tickstart;
  41              		.loc 1 172 3 is_stmt 1 view .LVU2
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Check the IWDG handle allocation */
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   if (hiwdg == NULL)
  42              		.loc 1 175 3 view .LVU3
  43              		.loc 1 175 6 is_stmt 0 view .LVU4
  44 0004 28D0     		beq	.L6
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   {
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     return HAL_ERROR;
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   }
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Check the parameters */
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   assert_param(IS_IWDG_ALL_INSTANCE(hiwdg->Instance));
  45              		.loc 1 181 3 is_stmt 1 view .LVU5
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   assert_param(IS_IWDG_PRESCALER(hiwdg->Init.Prescaler));
  46              		.loc 1 182 3 view .LVU6
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   assert_param(IS_IWDG_RELOAD(hiwdg->Init.Reload));
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccX3T3Ev.s 			page 5


  47              		.loc 1 183 3 view .LVU7
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   assert_param(IS_IWDG_WINDOW(hiwdg->Init.Window));
  48              		.loc 1 184 3 view .LVU8
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Enable IWDG. LSI is turned on automatically */
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   __HAL_IWDG_START(hiwdg);
  49              		.loc 1 187 3 view .LVU9
  50 0006 0368     		ldr	r3, [r0]
  51 0008 144A     		ldr	r2, .L9
  52 000a 1A60     		str	r2, [r3]
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Enable write access to IWDG_PR, IWDG_RLR and IWDG_WINR registers by writing
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   0x5555 in KR */
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   IWDG_ENABLE_WRITE_ACCESS(hiwdg);
  53              		.loc 1 191 3 view .LVU10
  54 000c 0368     		ldr	r3, [r0]
  55 000e 144A     		ldr	r2, .L9+4
  56 0010 1A60     		str	r2, [r3]
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Write to IWDG registers the Prescaler & Reload values to work with */
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   hiwdg->Instance->PR = hiwdg->Init.Prescaler;
  57              		.loc 1 194 3 view .LVU11
  58              		.loc 1 194 8 is_stmt 0 view .LVU12
  59 0012 0368     		ldr	r3, [r0]
  60              		.loc 1 194 23 view .LVU13
  61 0014 4268     		ldr	r2, [r0, #4]
  62 0016 5A60     		str	r2, [r3, #4]
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   hiwdg->Instance->RLR = hiwdg->Init.Reload;
  63              		.loc 1 195 3 is_stmt 1 view .LVU14
  64              		.loc 1 195 8 is_stmt 0 view .LVU15
  65 0018 0368     		ldr	r3, [r0]
  66              		.loc 1 195 24 view .LVU16
  67 001a 8268     		ldr	r2, [r0, #8]
  68 001c 9A60     		str	r2, [r3, #8]
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Check pending flag, if previous update not done, return timeout */
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   tickstart = HAL_GetTick();
  69              		.loc 1 198 3 is_stmt 1 view .LVU17
  70              		.loc 1 198 15 is_stmt 0 view .LVU18
  71 001e FFF7FEFF 		bl	HAL_GetTick
  72              	.LVL1:
  73              		.loc 1 198 15 view .LVU19
  74 0022 0500     		movs	r5, r0
  75              	.LVL2:
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Wait for register to be updated */
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   while ((hiwdg->Instance->SR & IWDG_KERNEL_UPDATE_FLAGS) != 0x00u)
  76              		.loc 1 201 3 is_stmt 1 view .LVU20
  77              	.L3:
  78              		.loc 1 201 9 view .LVU21
  79              		.loc 1 201 16 is_stmt 0 view .LVU22
  80 0024 2368     		ldr	r3, [r4]
  81              		.loc 1 201 26 view .LVU23
  82 0026 DA68     		ldr	r2, [r3, #12]
  83              		.loc 1 201 9 view .LVU24
  84 0028 5207     		lsls	r2, r2, #29
  85 002a 0AD0     		beq	.L8
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccX3T3Ev.s 			page 6


 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   {
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     if ((HAL_GetTick() - tickstart) > HAL_IWDG_DEFAULT_TIMEOUT)
  86              		.loc 1 203 5 is_stmt 1 view .LVU25
  87              		.loc 1 203 10 is_stmt 0 view .LVU26
  88 002c FFF7FEFF 		bl	HAL_GetTick
  89              	.LVL3:
  90              		.loc 1 203 24 view .LVU27
  91 0030 401B     		subs	r0, r0, r5
  92              		.loc 1 203 8 view .LVU28
  93 0032 2728     		cmp	r0, #39
  94 0034 F6D9     		bls	.L3
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     {
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       if ((hiwdg->Instance->SR & IWDG_KERNEL_UPDATE_FLAGS) != 0x00u)
  95              		.loc 1 205 7 is_stmt 1 view .LVU29
  96              		.loc 1 205 17 is_stmt 0 view .LVU30
  97 0036 2368     		ldr	r3, [r4]
  98              		.loc 1 205 27 view .LVU31
  99 0038 DB68     		ldr	r3, [r3, #12]
 100              		.loc 1 205 10 view .LVU32
 101 003a 5B07     		lsls	r3, r3, #29
 102 003c F2D0     		beq	.L3
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       {
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         return HAL_TIMEOUT;
 103              		.loc 1 207 16 view .LVU33
 104 003e 0320     		movs	r0, #3
 105 0040 0BE0     		b	.L2
 106              	.L8:
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       }
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     }
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   }
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* If window parameter is different than current value, modify window
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   register */
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   if (hiwdg->Instance->WINR != hiwdg->Init.Window)
 107              		.loc 1 214 3 is_stmt 1 view .LVU34
 108              		.loc 1 214 22 is_stmt 0 view .LVU35
 109 0042 1969     		ldr	r1, [r3, #16]
 110              		.loc 1 214 43 view .LVU36
 111 0044 E268     		ldr	r2, [r4, #12]
 112              		.loc 1 214 6 view .LVU37
 113 0046 9142     		cmp	r1, r2
 114 0048 02D0     		beq	.L5
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   {
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     /* Write to IWDG WINR the IWDG_Window value to compare with. In any case,
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     even if window feature is disabled, Watchdog will be reloaded by writing
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     windows register */
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     hiwdg->Instance->WINR = hiwdg->Init.Window;
 115              		.loc 1 219 5 is_stmt 1 view .LVU38
 116              		.loc 1 219 27 is_stmt 0 view .LVU39
 117 004a 1A61     		str	r2, [r3, #16]
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   }
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   else
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   {
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     /* Reload IWDG counter with value defined in the reload register */
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     __HAL_IWDG_RELOAD_COUNTER(hiwdg);
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   }
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccX3T3Ev.s 			page 7


 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Return function status */
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   return HAL_OK;
 118              		.loc 1 228 10 view .LVU40
 119 004c 0020     		movs	r0, #0
 120 004e 04E0     		b	.L2
 121              	.L5:
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   }
 122              		.loc 1 224 5 is_stmt 1 view .LVU41
 123 0050 044A     		ldr	r2, .L9+8
 124 0052 1A60     		str	r2, [r3]
 125              		.loc 1 228 10 is_stmt 0 view .LVU42
 126 0054 0020     		movs	r0, #0
 127 0056 00E0     		b	.L2
 128              	.LVL4:
 129              	.L6:
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   }
 130              		.loc 1 177 12 view .LVU43
 131 0058 0120     		movs	r0, #1
 132              	.LVL5:
 133              	.L2:
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** }
 134              		.loc 1 229 1 view .LVU44
 135              		@ sp needed
 136              	.LVL6:
 137              		.loc 1 229 1 view .LVU45
 138 005a 70BD     		pop	{r4, r5, r6, pc}
 139              	.L10:
 140              		.align	2
 141              	.L9:
 142 005c CCCC0000 		.word	52428
 143 0060 55550000 		.word	21845
 144 0064 AAAA0000 		.word	43690
 145              		.cfi_endproc
 146              	.LFE40:
 148              		.section	.text.HAL_IWDG_Refresh,"ax",%progbits
 149              		.align	1
 150              		.global	HAL_IWDG_Refresh
 151              		.syntax unified
 152              		.code	16
 153              		.thumb_func
 155              	HAL_IWDG_Refresh:
 156              	.LVL7:
 157              	.LFB41:
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /**
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @}
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /** @addtogroup IWDG_Exported_Functions_Group2
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *  @brief   IO operation functions
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** @verbatim
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****  ===============================================================================
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****                       ##### IO operation functions #####
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****  ===============================================================================
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccX3T3Ev.s 			page 8


 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****  [..]  This section provides functions allowing to:
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (+) Refresh the IWDG.
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** @endverbatim
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @{
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /**
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @brief  Refresh the IWDG.
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @param  hiwdg  pointer to a IWDG_HandleTypeDef structure that contains
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *                the configuration information for the specified IWDG module.
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @retval HAL status
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** HAL_StatusTypeDef HAL_IWDG_Refresh(IWDG_HandleTypeDef *hiwdg)
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** {
 158              		.loc 1 258 1 is_stmt 1 view -0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Reload IWDG counter with value defined in the reload register */
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   __HAL_IWDG_RELOAD_COUNTER(hiwdg);
 163              		.loc 1 260 3 view .LVU47
 164 0000 0368     		ldr	r3, [r0]
 165 0002 024A     		ldr	r2, .L12
 166 0004 1A60     		str	r2, [r3]
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Return function status */
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   return HAL_OK;
 167              		.loc 1 263 3 view .LVU48
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** }
 168              		.loc 1 264 1 is_stmt 0 view .LVU49
 169 0006 0020     		movs	r0, #0
 170              	.LVL8:
 171              		.loc 1 264 1 view .LVU50
 172              		@ sp needed
 173 0008 7047     		bx	lr
 174              	.L13:
 175 000a C046     		.align	2
 176              	.L12:
 177 000c AAAA0000 		.word	43690
 178              		.cfi_endproc
 179              	.LFE41:
 181              		.text
 182              	.Letext0:
 183              		.file 2 "c:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_defa
 184              		.file 3 "c:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h
 185              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 186              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 187              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_iwdg.h"
 188              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccX3T3Ev.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_iwdg.c
C:\Users\57298\AppData\Local\Temp\ccX3T3Ev.s:18     .text.HAL_IWDG_Init:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccX3T3Ev.s:24     .text.HAL_IWDG_Init:00000000 HAL_IWDG_Init
C:\Users\57298\AppData\Local\Temp\ccX3T3Ev.s:142    .text.HAL_IWDG_Init:0000005c $d
C:\Users\57298\AppData\Local\Temp\ccX3T3Ev.s:149    .text.HAL_IWDG_Refresh:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccX3T3Ev.s:155    .text.HAL_IWDG_Refresh:00000000 HAL_IWDG_Refresh
C:\Users\57298\AppData\Local\Temp\ccX3T3Ev.s:177    .text.HAL_IWDG_Refresh:0000000c $d

UNDEFINED SYMBOLS
HAL_GetTick
