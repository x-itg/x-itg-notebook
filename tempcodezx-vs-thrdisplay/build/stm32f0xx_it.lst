ARM GAS  C:\Users\57298\AppData\Local\Temp\cckXSWzF.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	NMI_Handler:
  25              	.LFB43:
  26              		.file 1 "Core/Src/stm32f0xx_it.c"
   1:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f0xx_it.c **** /**
   3:Core/Src/stm32f0xx_it.c ****  ******************************************************************************
   4:Core/Src/stm32f0xx_it.c ****  * @file    stm32f0xx_it.c
   5:Core/Src/stm32f0xx_it.c ****  * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f0xx_it.c ****  ******************************************************************************
   7:Core/Src/stm32f0xx_it.c ****  * @attention
   8:Core/Src/stm32f0xx_it.c ****  *
   9:Core/Src/stm32f0xx_it.c ****  * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f0xx_it.c ****  * All rights reserved.</center></h2>
  11:Core/Src/stm32f0xx_it.c ****  *
  12:Core/Src/stm32f0xx_it.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f0xx_it.c ****  * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f0xx_it.c ****  * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f0xx_it.c ****  *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f0xx_it.c ****  *
  17:Core/Src/stm32f0xx_it.c ****  ******************************************************************************
  18:Core/Src/stm32f0xx_it.c ****  */
  19:Core/Src/stm32f0xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f0xx_it.c **** 
  21:Core/Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f0xx_it.c **** #include "main.h"
  23:Core/Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  24:Core/Src/stm32f0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f0xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f0xx_it.c **** 
  28:Core/Src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f0xx_it.c **** #include "control.h"
  31:Core/Src/stm32f0xx_it.c **** #include "u2com.h"
  32:Core/Src/stm32f0xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\57298\AppData\Local\Temp\cckXSWzF.s 			page 2


  33:Core/Src/stm32f0xx_it.c **** 
  34:Core/Src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PD */
  36:Core/Src/stm32f0xx_it.c **** 
  37:Core/Src/stm32f0xx_it.c **** /* USER CODE END PD */
  38:Core/Src/stm32f0xx_it.c **** 
  39:Core/Src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PM */
  41:Core/Src/stm32f0xx_it.c **** 
  42:Core/Src/stm32f0xx_it.c **** /* USER CODE END PM */
  43:Core/Src/stm32f0xx_it.c **** 
  44:Core/Src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PV */
  46:Core/Src/stm32f0xx_it.c **** 
  47:Core/Src/stm32f0xx_it.c **** /* USER CODE END PV */
  48:Core/Src/stm32f0xx_it.c **** 
  49:Core/Src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/stm32f0xx_it.c **** 
  52:Core/Src/stm32f0xx_it.c **** /* USER CODE END PFP */
  53:Core/Src/stm32f0xx_it.c **** 
  54:Core/Src/stm32f0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/stm32f0xx_it.c **** 
  57:Core/Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  58:Core/Src/stm32f0xx_it.c **** 
  59:Core/Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Core/Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_adc;
  61:Core/Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  62:Core/Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  63:Core/Src/stm32f0xx_it.c **** extern UART_HandleTypeDef huart1;
  64:Core/Src/stm32f0xx_it.c **** extern UART_HandleTypeDef huart2;
  65:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN EV */
  66:Core/Src/stm32f0xx_it.c **** 
  67:Core/Src/stm32f0xx_it.c **** /* USER CODE END EV */
  68:Core/Src/stm32f0xx_it.c **** 
  69:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32f0xx_it.c **** /*           Cortex-M0 Processor Interruption and Exception Handlers          */
  71:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32f0xx_it.c **** /**
  73:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  74:Core/Src/stm32f0xx_it.c ****   */
  75:Core/Src/stm32f0xx_it.c **** void NMI_Handler(void)
  76:Core/Src/stm32f0xx_it.c **** {
  27              		.loc 1 76 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  77:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32f0xx_it.c **** 
  79:Core/Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  80:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  81:Core/Src/stm32f0xx_it.c **** 
  82:Core/Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32f0xx_it.c **** }
  32              		.loc 1 83 1 view .LVU1
ARM GAS  C:\Users\57298\AppData\Local\Temp\cckXSWzF.s 			page 3


  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE43:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  45              	HardFault_Handler:
  46              	.LFB44:
  84:Core/Src/stm32f0xx_it.c **** 
  85:Core/Src/stm32f0xx_it.c **** /**
  86:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:Core/Src/stm32f0xx_it.c ****   */
  88:Core/Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  89:Core/Src/stm32f0xx_it.c **** {
  47              		.loc 1 89 1 view -0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  90:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Core/Src/stm32f0xx_it.c **** 
  92:Core/Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Core/Src/stm32f0xx_it.c ****   while (1)
  54              		.loc 1 93 3 discriminator 1 view .LVU3
  94:Core/Src/stm32f0xx_it.c ****   {
  95:Core/Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f0xx_it.c ****   }
  55              		.loc 1 97 3 discriminator 1 view .LVU4
  93:Core/Src/stm32f0xx_it.c ****   {
  56              		.loc 1 93 9 discriminator 1 view .LVU5
  57 0000 FEE7     		b	.L3
  58              		.cfi_endproc
  59              	.LFE44:
  61              		.section	.text.SVC_Handler,"ax",%progbits
  62              		.align	1
  63              		.global	SVC_Handler
  64              		.syntax unified
  65              		.code	16
  66              		.thumb_func
  68              	SVC_Handler:
  69              	.LFB45:
  98:Core/Src/stm32f0xx_it.c **** }
  99:Core/Src/stm32f0xx_it.c **** 
 100:Core/Src/stm32f0xx_it.c **** /**
 101:Core/Src/stm32f0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 102:Core/Src/stm32f0xx_it.c ****   */
 103:Core/Src/stm32f0xx_it.c **** void SVC_Handler(void)
 104:Core/Src/stm32f0xx_it.c **** {
  70              		.loc 1 104 1 view -0
  71              		.cfi_startproc
ARM GAS  C:\Users\57298\AppData\Local\Temp\cckXSWzF.s 			page 4


  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
 105:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 106:Core/Src/stm32f0xx_it.c **** 
 107:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 108:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 109:Core/Src/stm32f0xx_it.c **** 
 110:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 111:Core/Src/stm32f0xx_it.c **** }
  75              		.loc 1 111 1 view .LVU7
  76              		@ sp needed
  77 0000 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE45:
  81              		.section	.text.PendSV_Handler,"ax",%progbits
  82              		.align	1
  83              		.global	PendSV_Handler
  84              		.syntax unified
  85              		.code	16
  86              		.thumb_func
  88              	PendSV_Handler:
  89              	.LFB46:
 112:Core/Src/stm32f0xx_it.c **** 
 113:Core/Src/stm32f0xx_it.c **** /**
 114:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Pendable request for system service.
 115:Core/Src/stm32f0xx_it.c ****   */
 116:Core/Src/stm32f0xx_it.c **** void PendSV_Handler(void)
 117:Core/Src/stm32f0xx_it.c **** {
  90              		.loc 1 117 1 view -0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
 118:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 119:Core/Src/stm32f0xx_it.c **** 
 120:Core/Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 121:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 122:Core/Src/stm32f0xx_it.c **** 
 123:Core/Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 124:Core/Src/stm32f0xx_it.c **** }
  95              		.loc 1 124 1 view .LVU9
  96              		@ sp needed
  97 0000 7047     		bx	lr
  98              		.cfi_endproc
  99              	.LFE46:
 101              		.section	.text.SysTick_Handler,"ax",%progbits
 102              		.align	1
 103              		.global	SysTick_Handler
 104              		.syntax unified
 105              		.code	16
 106              		.thumb_func
 108              	SysTick_Handler:
 109              	.LFB47:
 125:Core/Src/stm32f0xx_it.c **** 
 126:Core/Src/stm32f0xx_it.c **** /**
 127:Core/Src/stm32f0xx_it.c ****   * @brief This function handles System tick timer.
ARM GAS  C:\Users\57298\AppData\Local\Temp\cckXSWzF.s 			page 5


 128:Core/Src/stm32f0xx_it.c ****   */
 129:Core/Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 130:Core/Src/stm32f0xx_it.c **** {
 110              		.loc 1 130 1 view -0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114 0000 10B5     		push	{r4, lr}
 115              	.LCFI0:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 131:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 132:Core/Src/stm32f0xx_it.c **** 
 133:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 134:Core/Src/stm32f0xx_it.c ****   HAL_IncTick();
 119              		.loc 1 134 3 view .LVU11
 120 0002 FFF7FEFF 		bl	HAL_IncTick
 121              	.LVL0:
 135:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 136:Core/Src/stm32f0xx_it.c ****   sysms++;
 122              		.loc 1 136 3 view .LVU12
 123              		.loc 1 136 8 is_stmt 0 view .LVU13
 124 0006 184A     		ldr	r2, .L10
 125 0008 1368     		ldr	r3, [r2]
 126 000a 0133     		adds	r3, r3, #1
 127 000c 1360     		str	r3, [r2]
 137:Core/Src/stm32f0xx_it.c ****   readKeyTime++;
 128              		.loc 1 137 3 is_stmt 1 view .LVU14
 129              		.loc 1 137 14 is_stmt 0 view .LVU15
 130 000e 174A     		ldr	r2, .L10+4
 131 0010 1368     		ldr	r3, [r2]
 132 0012 0133     		adds	r3, r3, #1
 133 0014 1360     		str	r3, [r2]
 138:Core/Src/stm32f0xx_it.c ****   one1000msCnt++;
 134              		.loc 1 138 3 is_stmt 1 view .LVU16
 135              		.loc 1 138 15 is_stmt 0 view .LVU17
 136 0016 164A     		ldr	r2, .L10+8
 137 0018 1368     		ldr	r3, [r2]
 138 001a 0133     		adds	r3, r3, #1
 139 001c 1360     		str	r3, [r2]
 139:Core/Src/stm32f0xx_it.c ****   extern unsigned int LogTime;
 140              		.loc 1 139 3 is_stmt 1 view .LVU18
 140:Core/Src/stm32f0xx_it.c ****   LogTime++;
 141              		.loc 1 140 3 view .LVU19
 142              		.loc 1 140 10 is_stmt 0 view .LVU20
 143 001e 154A     		ldr	r2, .L10+12
 144 0020 1368     		ldr	r3, [r2]
 145 0022 0133     		adds	r3, r3, #1
 146 0024 1360     		str	r3, [r2]
 141:Core/Src/stm32f0xx_it.c **** 
 142:Core/Src/stm32f0xx_it.c ****   extern unsigned char JDQFLAG;
 147              		.loc 1 142 3 is_stmt 1 view .LVU21
 143:Core/Src/stm32f0xx_it.c ****   extern unsigned char JDQCHAN;
 148              		.loc 1 143 3 view .LVU22
 144:Core/Src/stm32f0xx_it.c ****   extern unsigned char JDQSTAT;
 149              		.loc 1 144 3 view .LVU23
ARM GAS  C:\Users\57298\AppData\Local\Temp\cckXSWzF.s 			page 6


 145:Core/Src/stm32f0xx_it.c ****   extern unsigned int JDQTIME;
 150              		.loc 1 145 3 view .LVU24
 146:Core/Src/stm32f0xx_it.c ****   if (JDQSTAT == 1 || JDQSTAT == 2 || JDQSTAT == 3)
 151              		.loc 1 146 3 view .LVU25
 152              		.loc 1 146 36 is_stmt 0 view .LVU26
 153 0026 144B     		ldr	r3, .L10+16
 154 0028 1B78     		ldrb	r3, [r3]
 155 002a 013B     		subs	r3, r3, #1
 156 002c DBB2     		uxtb	r3, r3
 157              		.loc 1 146 6 view .LVU27
 158 002e 022B     		cmp	r3, #2
 159 0030 03D8     		bhi	.L7
 147:Core/Src/stm32f0xx_it.c ****     JDQTIME++;
 160              		.loc 1 147 5 is_stmt 1 view .LVU28
 161              		.loc 1 147 12 is_stmt 0 view .LVU29
 162 0032 124A     		ldr	r2, .L10+20
 163 0034 1368     		ldr	r3, [r2]
 164 0036 0133     		adds	r3, r3, #1
 165 0038 1360     		str	r3, [r2]
 166              	.L7:
 148:Core/Src/stm32f0xx_it.c ****   static unsigned int stms = 0;
 167              		.loc 1 148 3 is_stmt 1 view .LVU30
 149:Core/Src/stm32f0xx_it.c ****   if (++stms > 60000)
 168              		.loc 1 149 3 view .LVU31
 169              		.loc 1 149 7 is_stmt 0 view .LVU32
 170 003a 114A     		ldr	r2, .L10+24
 171 003c 1368     		ldr	r3, [r2]
 172 003e 0133     		adds	r3, r3, #1
 173              		.loc 1 149 6 view .LVU33
 174 0040 1360     		str	r3, [r2]
 175 0042 104A     		ldr	r2, .L10+28
 176 0044 9342     		cmp	r3, r2
 177 0046 06D9     		bls	.L8
 150:Core/Src/stm32f0xx_it.c ****   {
 151:Core/Src/stm32f0xx_it.c ****     stms = 0;
 178              		.loc 1 151 5 is_stmt 1 view .LVU34
 179              		.loc 1 151 10 is_stmt 0 view .LVU35
 180 0048 0D4B     		ldr	r3, .L10+24
 181 004a 0022     		movs	r2, #0
 182 004c 1A60     		str	r2, [r3]
 152:Core/Src/stm32f0xx_it.c ****     oneMinuteCnt++;
 183              		.loc 1 152 5 is_stmt 1 view .LVU36
 184              		.loc 1 152 17 is_stmt 0 view .LVU37
 185 004e 0E4A     		ldr	r2, .L10+32
 186 0050 1368     		ldr	r3, [r2]
 187 0052 0133     		adds	r3, r3, #1
 188 0054 1360     		str	r3, [r2]
 189              	.L8:
 153:Core/Src/stm32f0xx_it.c ****   }
 154:Core/Src/stm32f0xx_it.c ****   if (willBeepTime > 0)
 190              		.loc 1 154 3 is_stmt 1 view .LVU38
 191              		.loc 1 154 20 is_stmt 0 view .LVU39
 192 0056 0D4B     		ldr	r3, .L10+36
 193 0058 1B68     		ldr	r3, [r3]
 194              		.loc 1 154 6 view .LVU40
 195 005a 002B     		cmp	r3, #0
 196 005c 02D0     		beq	.L6
ARM GAS  C:\Users\57298\AppData\Local\Temp\cckXSWzF.s 			page 7


 155:Core/Src/stm32f0xx_it.c ****     willBeepTime--;
 197              		.loc 1 155 5 is_stmt 1 view .LVU41
 198              		.loc 1 155 17 is_stmt 0 view .LVU42
 199 005e 013B     		subs	r3, r3, #1
 200 0060 0A4A     		ldr	r2, .L10+36
 201 0062 1360     		str	r3, [r2]
 202              	.L6:
 156:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 157:Core/Src/stm32f0xx_it.c **** }
 203              		.loc 1 157 1 view .LVU43
 204              		@ sp needed
 205 0064 10BD     		pop	{r4, pc}
 206              	.L11:
 207 0066 C046     		.align	2
 208              	.L10:
 209 0068 00000000 		.word	sysms
 210 006c 00000000 		.word	readKeyTime
 211 0070 00000000 		.word	one1000msCnt
 212 0074 00000000 		.word	LogTime
 213 0078 00000000 		.word	JDQSTAT
 214 007c 00000000 		.word	JDQTIME
 215 0080 00000000 		.word	.LANCHOR0
 216 0084 60EA0000 		.word	60000
 217 0088 00000000 		.word	oneMinuteCnt
 218 008c 00000000 		.word	willBeepTime
 219              		.cfi_endproc
 220              	.LFE47:
 222              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 223              		.align	1
 224              		.global	DMA1_Channel1_IRQHandler
 225              		.syntax unified
 226              		.code	16
 227              		.thumb_func
 229              	DMA1_Channel1_IRQHandler:
 230              	.LFB48:
 158:Core/Src/stm32f0xx_it.c **** 
 159:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
 160:Core/Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 161:Core/Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 162:Core/Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 163:Core/Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 164:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
 165:Core/Src/stm32f0xx_it.c **** 
 166:Core/Src/stm32f0xx_it.c **** /**
 167:Core/Src/stm32f0xx_it.c ****   * @brief This function handles DMA1 channel 1 interrupt.
 168:Core/Src/stm32f0xx_it.c ****   */
 169:Core/Src/stm32f0xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 170:Core/Src/stm32f0xx_it.c **** {
 231              		.loc 1 170 1 is_stmt 1 view -0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235 0000 10B5     		push	{r4, lr}
 236              	.LCFI1:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 4, -8
 239              		.cfi_offset 14, -4
ARM GAS  C:\Users\57298\AppData\Local\Temp\cckXSWzF.s 			page 8


 171:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 172:Core/Src/stm32f0xx_it.c **** 
 173:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 174:Core/Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc);
 240              		.loc 1 174 3 view .LVU45
 241 0002 0248     		ldr	r0, .L13
 242 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 243              	.LVL1:
 175:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 176:Core/Src/stm32f0xx_it.c **** 
 177:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 178:Core/Src/stm32f0xx_it.c **** }
 244              		.loc 1 178 1 is_stmt 0 view .LVU46
 245              		@ sp needed
 246 0008 10BD     		pop	{r4, pc}
 247              	.L14:
 248 000a C046     		.align	2
 249              	.L13:
 250 000c 00000000 		.word	hdma_adc
 251              		.cfi_endproc
 252              	.LFE48:
 254              		.section	.text.DMA1_Channel2_3_IRQHandler,"ax",%progbits
 255              		.align	1
 256              		.global	DMA1_Channel2_3_IRQHandler
 257              		.syntax unified
 258              		.code	16
 259              		.thumb_func
 261              	DMA1_Channel2_3_IRQHandler:
 262              	.LFB49:
 179:Core/Src/stm32f0xx_it.c **** 
 180:Core/Src/stm32f0xx_it.c **** /**
 181:Core/Src/stm32f0xx_it.c ****   * @brief This function handles DMA1 channel 2 and 3 interrupts.
 182:Core/Src/stm32f0xx_it.c ****   */
 183:Core/Src/stm32f0xx_it.c **** void DMA1_Channel2_3_IRQHandler(void)
 184:Core/Src/stm32f0xx_it.c **** {
 263              		.loc 1 184 1 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267 0000 10B5     		push	{r4, lr}
 268              	.LCFI2:
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 4, -8
 271              		.cfi_offset 14, -4
 185:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_3_IRQn 0 */
 186:Core/Src/stm32f0xx_it.c **** 
 187:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel2_3_IRQn 0 */
 188:Core/Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 272              		.loc 1 188 3 view .LVU48
 273 0002 0248     		ldr	r0, .L16
 274 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 275              	.LVL2:
 189:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_3_IRQn 1 */
 190:Core/Src/stm32f0xx_it.c **** 
 191:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel2_3_IRQn 1 */
 192:Core/Src/stm32f0xx_it.c **** }
 276              		.loc 1 192 1 is_stmt 0 view .LVU49
ARM GAS  C:\Users\57298\AppData\Local\Temp\cckXSWzF.s 			page 9


 277              		@ sp needed
 278 0008 10BD     		pop	{r4, pc}
 279              	.L17:
 280 000a C046     		.align	2
 281              	.L16:
 282 000c 00000000 		.word	hdma_usart1_rx
 283              		.cfi_endproc
 284              	.LFE49:
 286              		.section	.text.DMA1_Channel4_5_IRQHandler,"ax",%progbits
 287              		.align	1
 288              		.global	DMA1_Channel4_5_IRQHandler
 289              		.syntax unified
 290              		.code	16
 291              		.thumb_func
 293              	DMA1_Channel4_5_IRQHandler:
 294              	.LFB50:
 193:Core/Src/stm32f0xx_it.c **** 
 194:Core/Src/stm32f0xx_it.c **** /**
 195:Core/Src/stm32f0xx_it.c ****   * @brief This function handles DMA1 channel 4 and 5 interrupts.
 196:Core/Src/stm32f0xx_it.c ****   */
 197:Core/Src/stm32f0xx_it.c **** void DMA1_Channel4_5_IRQHandler(void)
 198:Core/Src/stm32f0xx_it.c **** {
 295              		.loc 1 198 1 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299 0000 10B5     		push	{r4, lr}
 300              	.LCFI3:
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 4, -8
 303              		.cfi_offset 14, -4
 199:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_5_IRQn 0 */
 200:Core/Src/stm32f0xx_it.c **** 
 201:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel4_5_IRQn 0 */
 202:Core/Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
 304              		.loc 1 202 3 view .LVU51
 305 0002 0248     		ldr	r0, .L19
 306 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 307              	.LVL3:
 203:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_5_IRQn 1 */
 204:Core/Src/stm32f0xx_it.c **** 
 205:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel4_5_IRQn 1 */
 206:Core/Src/stm32f0xx_it.c **** }
 308              		.loc 1 206 1 is_stmt 0 view .LVU52
 309              		@ sp needed
 310 0008 10BD     		pop	{r4, pc}
 311              	.L20:
 312 000a C046     		.align	2
 313              	.L19:
 314 000c 00000000 		.word	hdma_usart2_rx
 315              		.cfi_endproc
 316              	.LFE50:
 318              		.section	.text.USART1_IRQHandler,"ax",%progbits
 319              		.align	1
 320              		.global	USART1_IRQHandler
 321              		.syntax unified
 322              		.code	16
ARM GAS  C:\Users\57298\AppData\Local\Temp\cckXSWzF.s 			page 10


 323              		.thumb_func
 325              	USART1_IRQHandler:
 326              	.LFB51:
 207:Core/Src/stm32f0xx_it.c **** 
 208:Core/Src/stm32f0xx_it.c **** /**
 209:Core/Src/stm32f0xx_it.c ****   * @brief This function handles USART1 global interrupt.
 210:Core/Src/stm32f0xx_it.c ****   */
 211:Core/Src/stm32f0xx_it.c **** void USART1_IRQHandler(void)
 212:Core/Src/stm32f0xx_it.c **** {
 327              		.loc 1 212 1 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331 0000 10B5     		push	{r4, lr}
 332              	.LCFI4:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 4, -8
 335              		.cfi_offset 14, -4
 213:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 214:Core/Src/stm32f0xx_it.c **** 
 215:Core/Src/stm32f0xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 216:Core/Src/stm32f0xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 336              		.loc 1 216 3 view .LVU54
 337 0002 0248     		ldr	r0, .L22
 338 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 339              	.LVL4:
 217:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 218:Core/Src/stm32f0xx_it.c **** 
 219:Core/Src/stm32f0xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 220:Core/Src/stm32f0xx_it.c **** }
 340              		.loc 1 220 1 is_stmt 0 view .LVU55
 341              		@ sp needed
 342 0008 10BD     		pop	{r4, pc}
 343              	.L23:
 344 000a C046     		.align	2
 345              	.L22:
 346 000c 00000000 		.word	huart1
 347              		.cfi_endproc
 348              	.LFE51:
 350              		.section	.text.USART2_IRQHandler,"ax",%progbits
 351              		.align	1
 352              		.global	USART2_IRQHandler
 353              		.syntax unified
 354              		.code	16
 355              		.thumb_func
 357              	USART2_IRQHandler:
 358              	.LFB52:
 221:Core/Src/stm32f0xx_it.c **** 
 222:Core/Src/stm32f0xx_it.c **** /**
 223:Core/Src/stm32f0xx_it.c ****   * @brief This function handles USART2 global interrupt.
 224:Core/Src/stm32f0xx_it.c ****   */
 225:Core/Src/stm32f0xx_it.c **** void USART2_IRQHandler(void)
 226:Core/Src/stm32f0xx_it.c **** {
 359              		.loc 1 226 1 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\57298\AppData\Local\Temp\cckXSWzF.s 			page 11


 363 0000 10B5     		push	{r4, lr}
 364              	.LCFI5:
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 4, -8
 367              		.cfi_offset 14, -4
 227:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 228:Core/Src/stm32f0xx_it.c **** 
 229:Core/Src/stm32f0xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 230:Core/Src/stm32f0xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 368              		.loc 1 230 3 view .LVU57
 369 0002 044C     		ldr	r4, .L25
 370 0004 2000     		movs	r0, r4
 371 0006 FFF7FEFF 		bl	HAL_UART_IRQHandler
 372              	.LVL5:
 231:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 232:Core/Src/stm32f0xx_it.c **** 
 233:Core/Src/stm32f0xx_it.c ****   u2RxIt(&huart2);
 373              		.loc 1 233 3 view .LVU58
 374 000a 2000     		movs	r0, r4
 375 000c FFF7FEFF 		bl	u2RxIt
 376              	.LVL6:
 234:Core/Src/stm32f0xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 235:Core/Src/stm32f0xx_it.c **** }
 377              		.loc 1 235 1 is_stmt 0 view .LVU59
 378              		@ sp needed
 379 0010 10BD     		pop	{r4, pc}
 380              	.L26:
 381 0012 C046     		.align	2
 382              	.L25:
 383 0014 00000000 		.word	huart2
 384              		.cfi_endproc
 385              	.LFE52:
 387              		.section	.bss.stms.0,"aw",%nobits
 388              		.align	2
 389              		.set	.LANCHOR0,. + 0
 392              	stms.0:
 393 0000 00000000 		.space	4
 394              		.text
 395              	.Letext0:
 396              		.file 2 "c:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_defa
 397              		.file 3 "c:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h
 398              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 399              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 400              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 401              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 402              		.file 8 "Core/Inc/control.h"
 403              		.file 9 "Core/Inc/param.h"
 404              		.file 10 "Core/Inc/u2com.h"
 405              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  C:\Users\57298\AppData\Local\Temp\cckXSWzF.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_it.c
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:18     .text.NMI_Handler:00000000 $t
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:39     .text.HardFault_Handler:00000000 $t
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:62     .text.SVC_Handler:00000000 $t
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:68     .text.SVC_Handler:00000000 SVC_Handler
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:82     .text.PendSV_Handler:00000000 $t
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:88     .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:102    .text.SysTick_Handler:00000000 $t
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:108    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:209    .text.SysTick_Handler:00000068 $d
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:223    .text.DMA1_Channel1_IRQHandler:00000000 $t
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:229    .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:250    .text.DMA1_Channel1_IRQHandler:0000000c $d
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:255    .text.DMA1_Channel2_3_IRQHandler:00000000 $t
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:261    .text.DMA1_Channel2_3_IRQHandler:00000000 DMA1_Channel2_3_IRQHandler
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:282    .text.DMA1_Channel2_3_IRQHandler:0000000c $d
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:287    .text.DMA1_Channel4_5_IRQHandler:00000000 $t
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:293    .text.DMA1_Channel4_5_IRQHandler:00000000 DMA1_Channel4_5_IRQHandler
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:314    .text.DMA1_Channel4_5_IRQHandler:0000000c $d
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:319    .text.USART1_IRQHandler:00000000 $t
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:325    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:346    .text.USART1_IRQHandler:0000000c $d
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:351    .text.USART2_IRQHandler:00000000 $t
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:357    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:383    .text.USART2_IRQHandler:00000014 $d
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:388    .bss.stms.0:00000000 $d
C:\Users\57298\AppData\Local\Temp\cckXSWzF.s:392    .bss.stms.0:00000000 stms.0

UNDEFINED SYMBOLS
HAL_IncTick
sysms
readKeyTime
one1000msCnt
LogTime
JDQSTAT
JDQTIME
oneMinuteCnt
willBeepTime
HAL_DMA_IRQHandler
hdma_adc
hdma_usart1_rx
hdma_usart2_rx
HAL_UART_IRQHandler
huart1
u2RxIt
huart2
