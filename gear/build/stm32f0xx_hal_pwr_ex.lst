ARM GAS  C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_hal_pwr_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_PWR_ConfigPVD,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_PWR_ConfigPVD
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	HAL_PWR_ConfigPVD:
  25              	.LFB40:
  26              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @file    stm32f0xx_hal_pwr_ex.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @brief   Extended PWR HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   *           + Extended Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   *           + Extended Peripheral Control functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   *         
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   ******************************************************************************
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @attention
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   *
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * Copyright (c) 2016 STMicroelectronics.
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * All rights reserved.
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   *
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * in the root directory of this software component.
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   *
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   ******************************************************************************
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   */
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /* Includes ------------------------------------------------------------------*/
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** #include "stm32f0xx_hal.h"
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /** @addtogroup STM32F0xx_HAL_Driver
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @{
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   */
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /** @defgroup PWREx PWREx
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @brief    PWREx HAL module driver
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s 			page 2


  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @{
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   */
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** #ifdef HAL_PWR_MODULE_ENABLED
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /* Private typedef -----------------------------------------------------------*/
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /* Private define ------------------------------------------------------------*/
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /** @defgroup PWREx_Private_Constants PWREx Private Constants
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @{
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   */
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** #define PVD_MODE_IT               (0x00010000U)
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** #define PVD_MODE_EVT              (0x00020000U)
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** #define PVD_RISING_EDGE           (0x00000001U)
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** #define PVD_FALLING_EDGE          (0x00000002U)
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /**
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @}
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****  
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /* Private macro -------------------------------------------------------------*/
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /* Private variables ---------------------------------------------------------*/
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /* Private function prototypes -----------------------------------------------*/
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /* Exported functions ---------------------------------------------------------*/
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions PWREx Exported Functions
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @{
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   */
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group1 Peripheral Extended Control Functions
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   *  @brief   Extended Peripheral Control functions
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   *
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** @verbatim
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****  ===============================================================================
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****                  ##### Peripheral extended control functions #####
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****  ===============================================================================
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     *** PVD configuration ***
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     =========================
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     [..]
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****       (+) The PVD is used to monitor the VDD power supply by comparing it to a
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****           threshold selected by the PVD Level (PLS[2:0] bits in the PWR_CR).
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****       (+) A PVDO flag is available to indicate if VDD/VDDA is higher or lower
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****           than the PVD threshold. This event is internally connected to the EXTI
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****           line16 and can generate an interrupt if enabled. This is done through
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****           HAL_PWR_ConfigPVD(), HAL_PWR_EnablePVD() functions.
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****       (+) The PVD is stopped in Standby mode.
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****       -@- PVD is not available on STM32F030x4/x6/x8
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     *** VDDIO2 Monitor Configuration ***
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     ====================================
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     [..]
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****       (+) VDDIO2 monitor is used to monitor the VDDIO2 power supply by comparing it 
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****           to VREFInt Voltage
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****       (+) This monitor is internally connected to the EXTI line31
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****           and can generate an interrupt if enabled. This is done through
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****           HAL_PWREx_EnableVddio2Monitor() function.
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****       -@- VDDIO2 is available on STM32F07x/09x/04x
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s 			page 3


  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****                     
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** @endverbatim
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @{
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   */
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** #if defined (STM32F031x6) || defined (STM32F051x8) || \
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     defined (STM32F071xB) || defined (STM32F091xC) || \
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     defined (STM32F042x6) || defined (STM32F072xB)
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /**
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @brief Configures the voltage threshold detected by the Power Voltage Detector(PVD).
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @param sConfigPVD pointer to an PWR_PVDTypeDef structure that contains the configuration
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   *        information for the PVD.
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   *         more details about the voltage threshold corresponding to each
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   *         detection level.
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @retval None
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   */
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** void HAL_PWR_ConfigPVD(PWR_PVDTypeDef *sConfigPVD)
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** {
  27              		.loc 1 108 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   /* Check the parameters */
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVD_LEVEL(sConfigPVD->PVDLevel));
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   /* Set PLS[7:5] bits according to PVDLevel value */
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR, PWR_CR_PLS, sConfigPVD->PVDLevel);
  43              		.loc 1 114 3
  44 0008 2B4B     		ldr	r3, .L7
  45 000a 1B68     		ldr	r3, [r3]
  46 000c E022     		movs	r2, #224
  47 000e 9343     		bics	r3, r2
  48 0010 1900     		movs	r1, r3
  49 0012 7B68     		ldr	r3, [r7, #4]
  50 0014 1A68     		ldr	r2, [r3]
  51 0016 284B     		ldr	r3, .L7
  52 0018 0A43     		orrs	r2, r1
  53 001a 1A60     		str	r2, [r3]
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   __HAL_PWR_PVD_EXTI_DISABLE_EVENT();
  54              		.loc 1 117 3
  55 001c 274B     		ldr	r3, .L7+4
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s 			page 4


  56 001e 5A68     		ldr	r2, [r3, #4]
  57 0020 264B     		ldr	r3, .L7+4
  58 0022 2749     		ldr	r1, .L7+8
  59 0024 0A40     		ands	r2, r1
  60 0026 5A60     		str	r2, [r3, #4]
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   __HAL_PWR_PVD_EXTI_DISABLE_IT();
  61              		.loc 1 118 3
  62 0028 244B     		ldr	r3, .L7+4
  63 002a 1A68     		ldr	r2, [r3]
  64 002c 234B     		ldr	r3, .L7+4
  65 002e 2449     		ldr	r1, .L7+8
  66 0030 0A40     		ands	r2, r1
  67 0032 1A60     		str	r2, [r3]
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   __HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE();__HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE();
  68              		.loc 1 119 3
  69 0034 214B     		ldr	r3, .L7+4
  70 0036 9A68     		ldr	r2, [r3, #8]
  71 0038 204B     		ldr	r3, .L7+4
  72 003a 2149     		ldr	r1, .L7+8
  73 003c 0A40     		ands	r2, r1
  74 003e 9A60     		str	r2, [r3, #8]
  75              		.loc 1 119 44
  76 0040 1E4B     		ldr	r3, .L7+4
  77 0042 DA68     		ldr	r2, [r3, #12]
  78 0044 1D4B     		ldr	r3, .L7+4
  79 0046 1E49     		ldr	r1, .L7+8
  80 0048 0A40     		ands	r2, r1
  81 004a DA60     		str	r2, [r3, #12]
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   /* Configure interrupt mode */
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   if((sConfigPVD->Mode & PVD_MODE_IT) == PVD_MODE_IT)
  82              		.loc 1 122 17
  83 004c 7B68     		ldr	r3, [r7, #4]
  84 004e 5A68     		ldr	r2, [r3, #4]
  85              		.loc 1 122 24
  86 0050 8023     		movs	r3, #128
  87 0052 5B02     		lsls	r3, r3, #9
  88 0054 1340     		ands	r3, r2
  89              		.loc 1 122 5
  90 0056 06D0     		beq	.L2
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   {
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     __HAL_PWR_PVD_EXTI_ENABLE_IT();
  91              		.loc 1 124 5
  92 0058 184B     		ldr	r3, .L7+4
  93 005a 1A68     		ldr	r2, [r3]
  94 005c 174B     		ldr	r3, .L7+4
  95 005e 8021     		movs	r1, #128
  96 0060 4902     		lsls	r1, r1, #9
  97 0062 0A43     		orrs	r2, r1
  98 0064 1A60     		str	r2, [r3]
  99              	.L2:
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   }
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   /* Configure event mode */
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   if((sConfigPVD->Mode & PVD_MODE_EVT) == PVD_MODE_EVT)
 100              		.loc 1 128 17
 101 0066 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s 			page 5


 102 0068 5A68     		ldr	r2, [r3, #4]
 103              		.loc 1 128 24
 104 006a 8023     		movs	r3, #128
 105 006c 9B02     		lsls	r3, r3, #10
 106 006e 1340     		ands	r3, r2
 107              		.loc 1 128 5
 108 0070 06D0     		beq	.L3
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   {
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     __HAL_PWR_PVD_EXTI_ENABLE_EVENT();
 109              		.loc 1 130 5
 110 0072 124B     		ldr	r3, .L7+4
 111 0074 5A68     		ldr	r2, [r3, #4]
 112 0076 114B     		ldr	r3, .L7+4
 113 0078 8021     		movs	r1, #128
 114 007a 4902     		lsls	r1, r1, #9
 115 007c 0A43     		orrs	r2, r1
 116 007e 5A60     		str	r2, [r3, #4]
 117              	.L3:
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   }
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   /* Configure the edge */
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   if((sConfigPVD->Mode & PVD_RISING_EDGE) == PVD_RISING_EDGE)
 118              		.loc 1 134 17
 119 0080 7B68     		ldr	r3, [r7, #4]
 120 0082 5B68     		ldr	r3, [r3, #4]
 121              		.loc 1 134 24
 122 0084 0122     		movs	r2, #1
 123 0086 1340     		ands	r3, r2
 124              		.loc 1 134 5
 125 0088 06D0     		beq	.L4
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   {
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     __HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE();
 126              		.loc 1 136 5
 127 008a 0C4B     		ldr	r3, .L7+4
 128 008c 9A68     		ldr	r2, [r3, #8]
 129 008e 0B4B     		ldr	r3, .L7+4
 130 0090 8021     		movs	r1, #128
 131 0092 4902     		lsls	r1, r1, #9
 132 0094 0A43     		orrs	r2, r1
 133 0096 9A60     		str	r2, [r3, #8]
 134              	.L4:
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   }
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   if((sConfigPVD->Mode & PVD_FALLING_EDGE) == PVD_FALLING_EDGE)
 135              		.loc 1 139 17
 136 0098 7B68     		ldr	r3, [r7, #4]
 137 009a 5B68     		ldr	r3, [r3, #4]
 138              		.loc 1 139 24
 139 009c 0222     		movs	r2, #2
 140 009e 1340     		ands	r3, r2
 141              		.loc 1 139 5
 142 00a0 06D0     		beq	.L6
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   {
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     __HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE();
 143              		.loc 1 141 5
 144 00a2 064B     		ldr	r3, .L7+4
 145 00a4 DA68     		ldr	r2, [r3, #12]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s 			page 6


 146 00a6 054B     		ldr	r3, .L7+4
 147 00a8 8021     		movs	r1, #128
 148 00aa 4902     		lsls	r1, r1, #9
 149 00ac 0A43     		orrs	r2, r1
 150 00ae DA60     		str	r2, [r3, #12]
 151              	.L6:
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   }
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** }
 152              		.loc 1 143 1
 153 00b0 C046     		nop
 154 00b2 BD46     		mov	sp, r7
 155 00b4 02B0     		add	sp, sp, #8
 156              		@ sp needed
 157 00b6 80BD     		pop	{r7, pc}
 158              	.L8:
 159              		.align	2
 160              	.L7:
 161 00b8 00700040 		.word	1073770496
 162 00bc 00040140 		.word	1073808384
 163 00c0 FFFFFEFF 		.word	-65537
 164              		.cfi_endproc
 165              	.LFE40:
 167              		.section	.text.HAL_PWR_EnablePVD,"ax",%progbits
 168              		.align	1
 169              		.global	HAL_PWR_EnablePVD
 170              		.syntax unified
 171              		.code	16
 172              		.thumb_func
 174              	HAL_PWR_EnablePVD:
 175              	.LFB41:
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /**
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @brief Enables the Power Voltage Detector(PVD).
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @retval None
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   */
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** void HAL_PWR_EnablePVD(void)
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** {
 176              		.loc 1 150 1
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180 0000 80B5     		push	{r7, lr}
 181              	.LCFI3:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0002 00AF     		add	r7, sp, #0
 186              	.LCFI4:
 187              		.cfi_def_cfa_register 7
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   PWR->CR |= (uint32_t)PWR_CR_PVDE;
 188              		.loc 1 151 11
 189 0004 044B     		ldr	r3, .L10
 190 0006 1A68     		ldr	r2, [r3]
 191 0008 034B     		ldr	r3, .L10
 192 000a 1021     		movs	r1, #16
 193 000c 0A43     		orrs	r2, r1
 194 000e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s 			page 7


 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** }
 195              		.loc 1 152 1
 196 0010 C046     		nop
 197 0012 BD46     		mov	sp, r7
 198              		@ sp needed
 199 0014 80BD     		pop	{r7, pc}
 200              	.L11:
 201 0016 C046     		.align	2
 202              	.L10:
 203 0018 00700040 		.word	1073770496
 204              		.cfi_endproc
 205              	.LFE41:
 207              		.section	.text.HAL_PWR_DisablePVD,"ax",%progbits
 208              		.align	1
 209              		.global	HAL_PWR_DisablePVD
 210              		.syntax unified
 211              		.code	16
 212              		.thumb_func
 214              	HAL_PWR_DisablePVD:
 215              	.LFB42:
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /**
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @brief Disables the Power Voltage Detector(PVD).
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @retval None
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   */
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** void HAL_PWR_DisablePVD(void)
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** {
 216              		.loc 1 159 1
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220 0000 80B5     		push	{r7, lr}
 221              	.LCFI5:
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 7, -8
 224              		.cfi_offset 14, -4
 225 0002 00AF     		add	r7, sp, #0
 226              	.LCFI6:
 227              		.cfi_def_cfa_register 7
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   PWR->CR &= ~((uint32_t)PWR_CR_PVDE);
 228              		.loc 1 160 11
 229 0004 044B     		ldr	r3, .L13
 230 0006 1A68     		ldr	r2, [r3]
 231 0008 034B     		ldr	r3, .L13
 232 000a 1021     		movs	r1, #16
 233 000c 8A43     		bics	r2, r1
 234 000e 1A60     		str	r2, [r3]
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** }
 235              		.loc 1 161 1
 236 0010 C046     		nop
 237 0012 BD46     		mov	sp, r7
 238              		@ sp needed
 239 0014 80BD     		pop	{r7, pc}
 240              	.L14:
 241 0016 C046     		.align	2
 242              	.L13:
 243 0018 00700040 		.word	1073770496
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s 			page 8


 244              		.cfi_endproc
 245              	.LFE42:
 247              		.section	.text.HAL_PWR_PVD_IRQHandler,"ax",%progbits
 248              		.align	1
 249              		.global	HAL_PWR_PVD_IRQHandler
 250              		.syntax unified
 251              		.code	16
 252              		.thumb_func
 254              	HAL_PWR_PVD_IRQHandler:
 255              	.LFB43:
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /**
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @brief This function handles the PWR PVD interrupt request.
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @note This API should be called under the  PVD_IRQHandler() or PVD_VDDIO2_IRQHandler().
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @retval None
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   */
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** void HAL_PWR_PVD_IRQHandler(void)
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** {
 256              		.loc 1 169 1
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 1, uses_anonymous_args = 0
 260 0000 80B5     		push	{r7, lr}
 261              	.LCFI7:
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 7, -8
 264              		.cfi_offset 14, -4
 265 0002 00AF     		add	r7, sp, #0
 266              	.LCFI8:
 267              		.cfi_def_cfa_register 7
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   /* Check PWR exti flag */
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != RESET)
 268              		.loc 1 171 6
 269 0004 074B     		ldr	r3, .L18
 270 0006 5A69     		ldr	r2, [r3, #20]
 271 0008 8023     		movs	r3, #128
 272 000a 5B02     		lsls	r3, r3, #9
 273 000c 1340     		ands	r3, r2
 274              		.loc 1 171 5
 275 000e 05D0     		beq	.L17
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   {
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     /* PWR PVD interrupt user callback */
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     HAL_PWR_PVDCallback();
 276              		.loc 1 174 5
 277 0010 FFF7FEFF 		bl	HAL_PWR_PVDCallback
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     /* Clear PWR Exti pending bit */
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
 278              		.loc 1 177 5
 279 0014 034B     		ldr	r3, .L18
 280 0016 8022     		movs	r2, #128
 281 0018 5202     		lsls	r2, r2, #9
 282 001a 5A61     		str	r2, [r3, #20]
 283              	.L17:
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   }
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** }
 284              		.loc 1 179 1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s 			page 9


 285 001c C046     		nop
 286 001e BD46     		mov	sp, r7
 287              		@ sp needed
 288 0020 80BD     		pop	{r7, pc}
 289              	.L19:
 290 0022 C046     		.align	2
 291              	.L18:
 292 0024 00040140 		.word	1073808384
 293              		.cfi_endproc
 294              	.LFE43:
 296              		.section	.text.HAL_PWR_PVDCallback,"ax",%progbits
 297              		.align	1
 298              		.weak	HAL_PWR_PVDCallback
 299              		.syntax unified
 300              		.code	16
 301              		.thumb_func
 303              	HAL_PWR_PVDCallback:
 304              	.LFB44:
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** 
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** /**
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @brief PWR PVD interrupt callback
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   * @retval None
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   */
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** __weak void HAL_PWR_PVDCallback(void)
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** {
 305              		.loc 1 186 1
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309 0000 80B5     		push	{r7, lr}
 310              	.LCFI9:
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 7, -8
 313              		.cfi_offset 14, -4
 314 0002 00AF     		add	r7, sp, #0
 315              	.LCFI10:
 316              		.cfi_def_cfa_register 7
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****             the HAL_PWR_PVDCallback could be implemented in the user file
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c ****    */
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_pwr_ex.c **** }
 317              		.loc 1 190 1
 318 0004 C046     		nop
 319 0006 BD46     		mov	sp, r7
 320              		@ sp needed
 321 0008 80BD     		pop	{r7, pc}
 322              		.cfi_endproc
 323              	.LFE44:
 325              		.text
 326              	.Letext0:
 327              		.file 2 "c:\\program files (x86)\\openocdarmgccbuildtools\\gcc-arm-none-eabi-10.3-2021.10-win32\\a
 328              		.file 3 "c:\\program files (x86)\\openocdarmgccbuildtools\\gcc-arm-none-eabi-10.3-2021.10-win32\\a
 329              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f031x6.h"
 330              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pwr_ex.h"
 331              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_pwr_ex.c
C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s:18     .text.HAL_PWR_ConfigPVD:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s:24     .text.HAL_PWR_ConfigPVD:00000000 HAL_PWR_ConfigPVD
C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s:161    .text.HAL_PWR_ConfigPVD:000000b8 $d
C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s:168    .text.HAL_PWR_EnablePVD:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s:174    .text.HAL_PWR_EnablePVD:00000000 HAL_PWR_EnablePVD
C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s:203    .text.HAL_PWR_EnablePVD:00000018 $d
C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s:208    .text.HAL_PWR_DisablePVD:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s:214    .text.HAL_PWR_DisablePVD:00000000 HAL_PWR_DisablePVD
C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s:243    .text.HAL_PWR_DisablePVD:00000018 $d
C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s:248    .text.HAL_PWR_PVD_IRQHandler:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s:254    .text.HAL_PWR_PVD_IRQHandler:00000000 HAL_PWR_PVD_IRQHandler
C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s:303    .text.HAL_PWR_PVDCallback:00000000 HAL_PWR_PVDCallback
C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s:292    .text.HAL_PWR_PVD_IRQHandler:00000024 $d
C:\Users\mason\AppData\Local\Temp\ccpGrKdm.s:297    .text.HAL_PWR_PVDCallback:00000000 $t

NO UNDEFINED SYMBOLS
