ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	HAL_UART_Init:
  25              	.LFB40:
  26              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @file    stm32f0xx_hal_uart.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @attention
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * Copyright (c) 2016 STMicroelectronics.
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * All rights reserved.
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * in the root directory of this software component.
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @verbatim
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                         ##### How to use this driver #####
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   [..]
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 2


  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART pins configuration:
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART interrupts handling:
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 inside the transmit and receive processes.
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_UART_Init() API.
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ##### Callback registration #####
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ==================================
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 3


  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Use Function HAL_UART_RegisterCallback() to register a user callback.
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Function HAL_UART_RegisterCallback() allows to register following callbacks:
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and a pointer to the user callback function.
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     weak (surcharged) function.
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and the Callback ID.
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This function allows to reset following callbacks:
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the HAL_UART_Init()
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     or HAL_UART_Init() function.
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 4


 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     not defined, the callback registration feature is not available
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @endverbatim
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #include "stm32f0xx_hal.h"
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup STM32F0xx_HAL_Driver
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART UART
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief HAL UART module driver
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | U
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                       USART_CR1_OVER8)) /*!< UART or USART CR1 fields of parameters
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE |\
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                       USART_CR3_ONEBIT)) /*!< UART or USART CR3 fields of parameter
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 5


 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Exported Constants --------------------------------------------------------*/
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** ===============================================================================
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in asynchronous mode.
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Baud Rate
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Word Length
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Stop Bit
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Hardware flow control
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Receiver/transmitter modes
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Over Sampling Method
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) One-Bit Sampling Method
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) data logical level inversion
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX and TX pins swap
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX overrun detection disabling
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA disabling on RX error
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) MSB first on communication line
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) auto Baud rate detection
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     are available in reference manual).
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 6


 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   following table.
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   Table 1. UART frame format.
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  27              		.loc 1 290 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
  43              		.loc 1 292 6
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 01D1     		bne	.L2
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
  47              		.loc 1 294 12
  48 000e 0123     		movs	r3, #1
  49 0010 44E0     		b	.L3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 7


  50              	.L2:
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  51              		.loc 1 308 12
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 DB6F     		ldr	r3, [r3, #124]
  54              		.loc 1 308 6
  55 0016 002B     		cmp	r3, #0
  56 0018 07D1     		bne	.L4
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  57              		.loc 1 311 17
  58 001a 7B68     		ldr	r3, [r7, #4]
  59 001c 7822     		movs	r2, #120
  60 001e 0021     		movs	r1, #0
  61 0020 9954     		strb	r1, [r3, r2]
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware */
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  62              		.loc 1 325 5
  63 0022 7B68     		ldr	r3, [r7, #4]
  64 0024 1800     		movs	r0, r3
  65 0026 FFF7FEFF 		bl	HAL_UART_MspInit
  66              	.L4:
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  67              		.loc 1 329 17
  68 002a 7B68     		ldr	r3, [r7, #4]
  69 002c 2422     		movs	r2, #36
  70 002e DA67     		str	r2, [r3, #124]
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 8


 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  71              		.loc 1 331 3
  72 0030 7B68     		ldr	r3, [r7, #4]
  73 0032 1B68     		ldr	r3, [r3]
  74 0034 1A68     		ldr	r2, [r3]
  75 0036 7B68     		ldr	r3, [r7, #4]
  76 0038 1B68     		ldr	r3, [r3]
  77 003a 0121     		movs	r1, #1
  78 003c 8A43     		bics	r2, r1
  79 003e 1A60     		str	r2, [r3]
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  80              		.loc 1 334 7
  81 0040 7B68     		ldr	r3, [r7, #4]
  82 0042 1800     		movs	r0, r3
  83 0044 FFF7FEFF 		bl	UART_SetConfig
  84 0048 0300     		movs	r3, r0
  85              		.loc 1 334 6
  86 004a 012B     		cmp	r3, #1
  87 004c 01D1     		bne	.L5
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
  88              		.loc 1 336 12
  89 004e 0123     		movs	r3, #1
  90 0050 24E0     		b	.L3
  91              	.L5:
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  92              		.loc 1 339 26
  93 0052 7B68     		ldr	r3, [r7, #4]
  94 0054 5B6A     		ldr	r3, [r3, #36]
  95              		.loc 1 339 6
  96 0056 002B     		cmp	r3, #0
  97 0058 03D0     		beq	.L6
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
  98              		.loc 1 341 5
  99 005a 7B68     		ldr	r3, [r7, #4]
 100 005c 1800     		movs	r0, r3
 101 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 102              	.L6:
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 103              		.loc 1 348 3
 104 0062 7B68     		ldr	r3, [r7, #4]
 105 0064 1B68     		ldr	r3, [r3]
 106 0066 5A68     		ldr	r2, [r3, #4]
 107 0068 7B68     		ldr	r3, [r7, #4]
 108 006a 1B68     		ldr	r3, [r3]
 109 006c 0D49     		ldr	r1, .L7
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 9


 110 006e 0A40     		ands	r2, r1
 111 0070 5A60     		str	r2, [r3, #4]
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 112              		.loc 1 354 3
 113 0072 7B68     		ldr	r3, [r7, #4]
 114 0074 1B68     		ldr	r3, [r3]
 115 0076 9A68     		ldr	r2, [r3, #8]
 116 0078 7B68     		ldr	r3, [r7, #4]
 117 007a 1B68     		ldr	r3, [r3]
 118 007c 2A21     		movs	r1, #42
 119 007e 8A43     		bics	r2, r1
 120 0080 9A60     		str	r2, [r3, #8]
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN*/
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_SCEN */
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 121              		.loc 1 366 3
 122 0082 7B68     		ldr	r3, [r7, #4]
 123 0084 1B68     		ldr	r3, [r3]
 124 0086 1A68     		ldr	r2, [r3]
 125 0088 7B68     		ldr	r3, [r7, #4]
 126 008a 1B68     		ldr	r3, [r3]
 127 008c 0121     		movs	r1, #1
 128 008e 0A43     		orrs	r2, r1
 129 0090 1A60     		str	r2, [r3]
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 130              		.loc 1 369 11
 131 0092 7B68     		ldr	r3, [r7, #4]
 132 0094 1800     		movs	r0, r3
 133 0096 FFF7FEFF 		bl	UART_CheckIdleState
 134 009a 0300     		movs	r3, r0
 135              	.L3:
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 136              		.loc 1 370 1
 137 009c 1800     		movs	r0, r3
 138 009e BD46     		mov	sp, r7
 139 00a0 02B0     		add	sp, sp, #8
 140              		@ sp needed
 141 00a2 80BD     		pop	{r7, pc}
 142              	.L8:
 143              		.align	2
 144              	.L7:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 10


 145 00a4 FFB7FFFF 		.word	-18433
 146              		.cfi_endproc
 147              	.LFE40:
 149              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 150              		.align	1
 151              		.global	HAL_HalfDuplex_Init
 152              		.syntax unified
 153              		.code	16
 154              		.thumb_func
 156              	HAL_HalfDuplex_Init:
 157              	.LFB41:
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 158              		.loc 1 379 1
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 8
 161              		@ frame_needed = 1, uses_anonymous_args = 0
 162 0000 80B5     		push	{r7, lr}
 163              	.LCFI3:
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 82B0     		sub	sp, sp, #8
 168              	.LCFI4:
 169              		.cfi_def_cfa_offset 16
 170 0004 00AF     		add	r7, sp, #0
 171              	.LCFI5:
 172              		.cfi_def_cfa_register 7
 173 0006 7860     		str	r0, [r7, #4]
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 174              		.loc 1 381 6
 175 0008 7B68     		ldr	r3, [r7, #4]
 176 000a 002B     		cmp	r3, #0
 177 000c 01D1     		bne	.L10
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 178              		.loc 1 383 12
 179 000e 0123     		movs	r3, #1
 180 0010 4CE0     		b	.L11
 181              	.L10:
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART instance */
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 182              		.loc 1 389 12
 183 0012 7B68     		ldr	r3, [r7, #4]
 184 0014 DB6F     		ldr	r3, [r3, #124]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 11


 185              		.loc 1 389 6
 186 0016 002B     		cmp	r3, #0
 187 0018 07D1     		bne	.L12
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 188              		.loc 1 392 17
 189 001a 7B68     		ldr	r3, [r7, #4]
 190 001c 7822     		movs	r2, #120
 191 001e 0021     		movs	r1, #0
 192 0020 9954     		strb	r1, [r3, r2]
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware */
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 193              		.loc 1 406 5
 194 0022 7B68     		ldr	r3, [r7, #4]
 195 0024 1800     		movs	r0, r3
 196 0026 FFF7FEFF 		bl	HAL_UART_MspInit
 197              	.L12:
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 198              		.loc 1 410 17
 199 002a 7B68     		ldr	r3, [r7, #4]
 200 002c 2422     		movs	r2, #36
 201 002e DA67     		str	r2, [r3, #124]
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 202              		.loc 1 412 3
 203 0030 7B68     		ldr	r3, [r7, #4]
 204 0032 1B68     		ldr	r3, [r3]
 205 0034 1A68     		ldr	r2, [r3]
 206 0036 7B68     		ldr	r3, [r7, #4]
 207 0038 1B68     		ldr	r3, [r3]
 208 003a 0121     		movs	r1, #1
 209 003c 8A43     		bics	r2, r1
 210 003e 1A60     		str	r2, [r3]
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 211              		.loc 1 415 7
 212 0040 7B68     		ldr	r3, [r7, #4]
 213 0042 1800     		movs	r0, r3
 214 0044 FFF7FEFF 		bl	UART_SetConfig
 215 0048 0300     		movs	r3, r0
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 12


 216              		.loc 1 415 6
 217 004a 012B     		cmp	r3, #1
 218 004c 01D1     		bne	.L13
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 219              		.loc 1 417 12
 220 004e 0123     		movs	r3, #1
 221 0050 2CE0     		b	.L11
 222              	.L13:
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 223              		.loc 1 420 26
 224 0052 7B68     		ldr	r3, [r7, #4]
 225 0054 5B6A     		ldr	r3, [r3, #36]
 226              		.loc 1 420 6
 227 0056 002B     		cmp	r3, #0
 228 0058 03D0     		beq	.L14
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 229              		.loc 1 422 5
 230 005a 7B68     		ldr	r3, [r7, #4]
 231 005c 1800     		movs	r0, r3
 232 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 233              	.L14:
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported) and IREN (if IrDA is supported) bits in the USART_CR3 register
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 234              		.loc 1 429 3
 235 0062 7B68     		ldr	r3, [r7, #4]
 236 0064 1B68     		ldr	r3, [r3]
 237 0066 5A68     		ldr	r2, [r3, #4]
 238 0068 7B68     		ldr	r3, [r7, #4]
 239 006a 1B68     		ldr	r3, [r3]
 240 006c 1149     		ldr	r1, .L15
 241 006e 0A40     		ands	r2, r1
 242 0070 5A60     		str	r2, [r3, #4]
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 243              		.loc 1 435 3
 244 0072 7B68     		ldr	r3, [r7, #4]
 245 0074 1B68     		ldr	r3, [r3]
 246 0076 9A68     		ldr	r2, [r3, #8]
 247 0078 7B68     		ldr	r3, [r7, #4]
 248 007a 1B68     		ldr	r3, [r3]
 249 007c 2221     		movs	r1, #34
 250 007e 8A43     		bics	r2, r1
 251 0080 9A60     		str	r2, [r3, #8]
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 13


 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_SCEN */
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 252              		.loc 1 446 3
 253 0082 7B68     		ldr	r3, [r7, #4]
 254 0084 1B68     		ldr	r3, [r3]
 255 0086 9A68     		ldr	r2, [r3, #8]
 256 0088 7B68     		ldr	r3, [r7, #4]
 257 008a 1B68     		ldr	r3, [r3]
 258 008c 0821     		movs	r1, #8
 259 008e 0A43     		orrs	r2, r1
 260 0090 9A60     		str	r2, [r3, #8]
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 261              		.loc 1 448 3
 262 0092 7B68     		ldr	r3, [r7, #4]
 263 0094 1B68     		ldr	r3, [r3]
 264 0096 1A68     		ldr	r2, [r3]
 265 0098 7B68     		ldr	r3, [r7, #4]
 266 009a 1B68     		ldr	r3, [r3]
 267 009c 0121     		movs	r1, #1
 268 009e 0A43     		orrs	r2, r1
 269 00a0 1A60     		str	r2, [r3]
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 270              		.loc 1 451 11
 271 00a2 7B68     		ldr	r3, [r7, #4]
 272 00a4 1800     		movs	r0, r3
 273 00a6 FFF7FEFF 		bl	UART_CheckIdleState
 274 00aa 0300     		movs	r3, r0
 275              	.L11:
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 276              		.loc 1 452 1
 277 00ac 1800     		movs	r0, r3
 278 00ae BD46     		mov	sp, r7
 279 00b0 02B0     		add	sp, sp, #8
 280              		@ sp needed
 281 00b2 80BD     		pop	{r7, pc}
 282              	.L16:
 283              		.align	2
 284              	.L15:
 285 00b4 FFB7FFFF 		.word	-18433
 286              		.cfi_endproc
 287              	.LFE41:
 289              		.section	.text.HAL_LIN_Init,"ax",%progbits
 290              		.align	1
 291              		.global	HAL_LIN_Init
 292              		.syntax unified
 293              		.code	16
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 14


 294              		.thumb_func
 296              	HAL_LIN_Init:
 297              	.LFB42:
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if   defined(USART_CR2_LINEN)
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart             UART handle.
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 298              		.loc 1 467 1
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 8
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302 0000 80B5     		push	{r7, lr}
 303              	.LCFI6:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 7, -8
 306              		.cfi_offset 14, -4
 307 0002 82B0     		sub	sp, sp, #8
 308              	.LCFI7:
 309              		.cfi_def_cfa_offset 16
 310 0004 00AF     		add	r7, sp, #0
 311              	.LCFI8:
 312              		.cfi_def_cfa_register 7
 313 0006 7860     		str	r0, [r7, #4]
 314 0008 3960     		str	r1, [r7]
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 315              		.loc 1 469 6
 316 000a 7B68     		ldr	r3, [r7, #4]
 317 000c 002B     		cmp	r3, #0
 318 000e 01D1     		bne	.L18
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 319              		.loc 1 471 12
 320 0010 0123     		movs	r3, #1
 321 0012 66E0     		b	.L19
 322              	.L18:
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the LIN UART instance */
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the Break detection length parameter */
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 323              		.loc 1 480 18
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 15


 324 0014 7B68     		ldr	r3, [r7, #4]
 325 0016 DA69     		ldr	r2, [r3, #28]
 326              		.loc 1 480 6
 327 0018 8023     		movs	r3, #128
 328 001a 1B02     		lsls	r3, r3, #8
 329 001c 9A42     		cmp	r2, r3
 330 001e 01D1     		bne	.L20
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 331              		.loc 1 482 12
 332 0020 0123     		movs	r3, #1
 333 0022 5EE0     		b	.L19
 334              	.L20:
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 335              		.loc 1 485 18
 336 0024 7B68     		ldr	r3, [r7, #4]
 337 0026 9B68     		ldr	r3, [r3, #8]
 338              		.loc 1 485 6
 339 0028 002B     		cmp	r3, #0
 340 002a 01D0     		beq	.L21
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 341              		.loc 1 487 12
 342 002c 0123     		movs	r3, #1
 343 002e 58E0     		b	.L19
 344              	.L21:
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 345              		.loc 1 490 12
 346 0030 7B68     		ldr	r3, [r7, #4]
 347 0032 DB6F     		ldr	r3, [r3, #124]
 348              		.loc 1 490 6
 349 0034 002B     		cmp	r3, #0
 350 0036 07D1     		bne	.L22
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 351              		.loc 1 493 17
 352 0038 7B68     		ldr	r3, [r7, #4]
 353 003a 7822     		movs	r2, #120
 354 003c 0021     		movs	r1, #0
 355 003e 9954     		strb	r1, [r3, r2]
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware */
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 16


 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 356              		.loc 1 507 5
 357 0040 7B68     		ldr	r3, [r7, #4]
 358 0042 1800     		movs	r0, r3
 359 0044 FFF7FEFF 		bl	HAL_UART_MspInit
 360              	.L22:
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 361              		.loc 1 511 17
 362 0048 7B68     		ldr	r3, [r7, #4]
 363 004a 2422     		movs	r2, #36
 364 004c DA67     		str	r2, [r3, #124]
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 365              		.loc 1 513 3
 366 004e 7B68     		ldr	r3, [r7, #4]
 367 0050 1B68     		ldr	r3, [r3]
 368 0052 1A68     		ldr	r2, [r3]
 369 0054 7B68     		ldr	r3, [r7, #4]
 370 0056 1B68     		ldr	r3, [r3]
 371 0058 0121     		movs	r1, #1
 372 005a 8A43     		bics	r2, r1
 373 005c 1A60     		str	r2, [r3]
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 374              		.loc 1 516 7
 375 005e 7B68     		ldr	r3, [r7, #4]
 376 0060 1800     		movs	r0, r3
 377 0062 FFF7FEFF 		bl	UART_SetConfig
 378 0066 0300     		movs	r3, r0
 379              		.loc 1 516 6
 380 0068 012B     		cmp	r3, #1
 381 006a 01D1     		bne	.L23
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 382              		.loc 1 518 12
 383 006c 0123     		movs	r3, #1
 384 006e 38E0     		b	.L19
 385              	.L23:
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 386              		.loc 1 521 26
 387 0070 7B68     		ldr	r3, [r7, #4]
 388 0072 5B6A     		ldr	r3, [r3, #36]
 389              		.loc 1 521 6
 390 0074 002B     		cmp	r3, #0
 391 0076 03D0     		beq	.L24
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 392              		.loc 1 523 5
 393 0078 7B68     		ldr	r3, [r7, #4]
 394 007a 1800     		movs	r0, r3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 17


 395 007c FFF7FEFF 		bl	UART_AdvFeatureConfig
 396              	.L24:
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN(if Smartcard is supported) and IREN(if IrDA is supported) bits in the USART_CR3 register.*
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 397              		.loc 1 529 3
 398 0080 7B68     		ldr	r3, [r7, #4]
 399 0082 1B68     		ldr	r3, [r3]
 400 0084 5A68     		ldr	r2, [r3, #4]
 401 0086 7B68     		ldr	r3, [r7, #4]
 402 0088 1B68     		ldr	r3, [r3]
 403 008a 1849     		ldr	r1, .L25
 404 008c 0A40     		ands	r2, r1
 405 008e 5A60     		str	r2, [r3, #4]
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 406              		.loc 1 532 3
 407 0090 7B68     		ldr	r3, [r7, #4]
 408 0092 1B68     		ldr	r3, [r3]
 409 0094 9A68     		ldr	r2, [r3, #8]
 410 0096 7B68     		ldr	r3, [r7, #4]
 411 0098 1B68     		ldr	r3, [r3]
 412 009a 2A21     		movs	r1, #42
 413 009c 8A43     		bics	r2, r1
 414 009e 9A60     		str	r2, [r3, #8]
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN*/
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_SCEN */
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 415              		.loc 1 545 3
 416 00a0 7B68     		ldr	r3, [r7, #4]
 417 00a2 1B68     		ldr	r3, [r3]
 418 00a4 5A68     		ldr	r2, [r3, #4]
 419 00a6 7B68     		ldr	r3, [r7, #4]
 420 00a8 1B68     		ldr	r3, [r3]
 421 00aa 8021     		movs	r1, #128
 422 00ac C901     		lsls	r1, r1, #7
 423 00ae 0A43     		orrs	r2, r1
 424 00b0 5A60     		str	r2, [r3, #4]
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 425              		.loc 1 548 3
 426 00b2 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 18


 427 00b4 1B68     		ldr	r3, [r3]
 428 00b6 5B68     		ldr	r3, [r3, #4]
 429 00b8 2022     		movs	r2, #32
 430 00ba 9343     		bics	r3, r2
 431 00bc 1900     		movs	r1, r3
 432 00be 7B68     		ldr	r3, [r7, #4]
 433 00c0 1B68     		ldr	r3, [r3]
 434 00c2 3A68     		ldr	r2, [r7]
 435 00c4 0A43     		orrs	r2, r1
 436 00c6 5A60     		str	r2, [r3, #4]
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 437              		.loc 1 550 3
 438 00c8 7B68     		ldr	r3, [r7, #4]
 439 00ca 1B68     		ldr	r3, [r3]
 440 00cc 1A68     		ldr	r2, [r3]
 441 00ce 7B68     		ldr	r3, [r7, #4]
 442 00d0 1B68     		ldr	r3, [r3]
 443 00d2 0121     		movs	r1, #1
 444 00d4 0A43     		orrs	r2, r1
 445 00d6 1A60     		str	r2, [r3]
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 446              		.loc 1 553 11
 447 00d8 7B68     		ldr	r3, [r7, #4]
 448 00da 1800     		movs	r0, r3
 449 00dc FFF7FEFF 		bl	UART_CheckIdleState
 450 00e0 0300     		movs	r3, r0
 451              	.L19:
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 452              		.loc 1 554 1
 453 00e2 1800     		movs	r0, r3
 454 00e4 BD46     		mov	sp, r7
 455 00e6 02B0     		add	sp, sp, #8
 456              		@ sp needed
 457 00e8 80BD     		pop	{r7, pc}
 458              	.L26:
 459 00ea C046     		.align	2
 460              	.L25:
 461 00ec FFB7FFFF 		.word	-18433
 462              		.cfi_endproc
 463              	.LFE42:
 465              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 466              		.align	1
 467              		.global	HAL_MultiProcessor_Init
 468              		.syntax unified
 469              		.code	16
 470              		.thumb_func
 472              	HAL_MultiProcessor_Init:
 473              	.LFB43:
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 19


 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart        UART handle.
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 474              		.loc 1 577 1
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 16
 477              		@ frame_needed = 1, uses_anonymous_args = 0
 478 0000 80B5     		push	{r7, lr}
 479              	.LCFI9:
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 7, -8
 482              		.cfi_offset 14, -4
 483 0002 84B0     		sub	sp, sp, #16
 484              	.LCFI10:
 485              		.cfi_def_cfa_offset 24
 486 0004 00AF     		add	r7, sp, #0
 487              	.LCFI11:
 488              		.cfi_def_cfa_register 7
 489 0006 F860     		str	r0, [r7, #12]
 490 0008 7A60     		str	r2, [r7, #4]
 491 000a 0B23     		movs	r3, #11
 492 000c FB18     		adds	r3, r7, r3
 493 000e 0A1C     		adds	r2, r1, #0
 494 0010 1A70     		strb	r2, [r3]
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 495              		.loc 1 579 6
 496 0012 FB68     		ldr	r3, [r7, #12]
 497 0014 002B     		cmp	r3, #0
 498 0016 01D1     		bne	.L28
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 499              		.loc 1 581 12
 500 0018 0123     		movs	r3, #1
 501 001a 61E0     		b	.L29
 502              	.L28:
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the wake up method parameter */
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 503              		.loc 1 587 12
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 20


 504 001c FB68     		ldr	r3, [r7, #12]
 505 001e DB6F     		ldr	r3, [r3, #124]
 506              		.loc 1 587 6
 507 0020 002B     		cmp	r3, #0
 508 0022 07D1     		bne	.L30
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 509              		.loc 1 590 17
 510 0024 FB68     		ldr	r3, [r7, #12]
 511 0026 7822     		movs	r2, #120
 512 0028 0021     		movs	r1, #0
 513 002a 9954     		strb	r1, [r3, r2]
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware */
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 514              		.loc 1 604 5
 515 002c FB68     		ldr	r3, [r7, #12]
 516 002e 1800     		movs	r0, r3
 517 0030 FFF7FEFF 		bl	HAL_UART_MspInit
 518              	.L30:
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 519              		.loc 1 608 17
 520 0034 FB68     		ldr	r3, [r7, #12]
 521 0036 2422     		movs	r2, #36
 522 0038 DA67     		str	r2, [r3, #124]
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 523              		.loc 1 610 3
 524 003a FB68     		ldr	r3, [r7, #12]
 525 003c 1B68     		ldr	r3, [r3]
 526 003e 1A68     		ldr	r2, [r3]
 527 0040 FB68     		ldr	r3, [r7, #12]
 528 0042 1B68     		ldr	r3, [r3]
 529 0044 0121     		movs	r1, #1
 530 0046 8A43     		bics	r2, r1
 531 0048 1A60     		str	r2, [r3]
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 532              		.loc 1 613 7
 533 004a FB68     		ldr	r3, [r7, #12]
 534 004c 1800     		movs	r0, r3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 21


 535 004e FFF7FEFF 		bl	UART_SetConfig
 536 0052 0300     		movs	r3, r0
 537              		.loc 1 613 6
 538 0054 012B     		cmp	r3, #1
 539 0056 01D1     		bne	.L31
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 540              		.loc 1 615 12
 541 0058 0123     		movs	r3, #1
 542 005a 41E0     		b	.L29
 543              	.L31:
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 544              		.loc 1 618 26
 545 005c FB68     		ldr	r3, [r7, #12]
 546 005e 5B6A     		ldr	r3, [r3, #36]
 547              		.loc 1 618 6
 548 0060 002B     		cmp	r3, #0
 549 0062 03D0     		beq	.L32
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 550              		.loc 1 620 5
 551 0064 FB68     		ldr	r3, [r7, #12]
 552 0066 1800     		movs	r0, r3
 553 0068 FFF7FEFF 		bl	UART_AdvFeatureConfig
 554              	.L32:
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported) bits in the USART_CR3 r
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 555              		.loc 1 627 3
 556 006c FB68     		ldr	r3, [r7, #12]
 557 006e 1B68     		ldr	r3, [r3]
 558 0070 5A68     		ldr	r2, [r3, #4]
 559 0072 FB68     		ldr	r3, [r7, #12]
 560 0074 1B68     		ldr	r3, [r3]
 561 0076 1C49     		ldr	r1, .L34
 562 0078 0A40     		ands	r2, r1
 563 007a 5A60     		str	r2, [r3, #4]
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 564              		.loc 1 633 3
 565 007c FB68     		ldr	r3, [r7, #12]
 566 007e 1B68     		ldr	r3, [r3]
 567 0080 9A68     		ldr	r2, [r3, #8]
 568 0082 FB68     		ldr	r3, [r7, #12]
 569 0084 1B68     		ldr	r3, [r3]
 570 0086 2A21     		movs	r1, #42
 571 0088 8A43     		bics	r2, r1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 22


 572 008a 9A60     		str	r2, [r3, #8]
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_IREN */
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_SCEN */
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 573              		.loc 1 645 6
 574 008c 7A68     		ldr	r2, [r7, #4]
 575 008e 8023     		movs	r3, #128
 576 0090 1B01     		lsls	r3, r3, #4
 577 0092 9A42     		cmp	r2, r3
 578 0094 0CD1     		bne	.L33
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 579              		.loc 1 648 5
 580 0096 FB68     		ldr	r3, [r7, #12]
 581 0098 1B68     		ldr	r3, [r3]
 582 009a 5B68     		ldr	r3, [r3, #4]
 583 009c 1B02     		lsls	r3, r3, #8
 584 009e 190A     		lsrs	r1, r3, #8
 585 00a0 0B23     		movs	r3, #11
 586 00a2 FB18     		adds	r3, r7, r3
 587 00a4 1B78     		ldrb	r3, [r3]
 588 00a6 1A06     		lsls	r2, r3, #24
 589 00a8 FB68     		ldr	r3, [r7, #12]
 590 00aa 1B68     		ldr	r3, [r3]
 591 00ac 0A43     		orrs	r2, r1
 592 00ae 5A60     		str	r2, [r3, #4]
 593              	.L33:
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 594              		.loc 1 652 3
 595 00b0 FB68     		ldr	r3, [r7, #12]
 596 00b2 1B68     		ldr	r3, [r3]
 597 00b4 1B68     		ldr	r3, [r3]
 598 00b6 0D4A     		ldr	r2, .L34+4
 599 00b8 1340     		ands	r3, r2
 600 00ba 1900     		movs	r1, r3
 601 00bc FB68     		ldr	r3, [r7, #12]
 602 00be 1B68     		ldr	r3, [r3]
 603 00c0 7A68     		ldr	r2, [r7, #4]
 604 00c2 0A43     		orrs	r2, r1
 605 00c4 1A60     		str	r2, [r3]
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 606              		.loc 1 654 3
 607 00c6 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 23


 608 00c8 1B68     		ldr	r3, [r3]
 609 00ca 1A68     		ldr	r2, [r3]
 610 00cc FB68     		ldr	r3, [r7, #12]
 611 00ce 1B68     		ldr	r3, [r3]
 612 00d0 0121     		movs	r1, #1
 613 00d2 0A43     		orrs	r2, r1
 614 00d4 1A60     		str	r2, [r3]
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 615              		.loc 1 657 11
 616 00d6 FB68     		ldr	r3, [r7, #12]
 617 00d8 1800     		movs	r0, r3
 618 00da FFF7FEFF 		bl	UART_CheckIdleState
 619 00de 0300     		movs	r3, r0
 620              	.L29:
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 621              		.loc 1 658 1
 622 00e0 1800     		movs	r0, r3
 623 00e2 BD46     		mov	sp, r7
 624 00e4 04B0     		add	sp, sp, #16
 625              		@ sp needed
 626 00e6 80BD     		pop	{r7, pc}
 627              	.L35:
 628              		.align	2
 629              	.L34:
 630 00e8 FFB7FFFF 		.word	-18433
 631 00ec FFF7FFFF 		.word	-2049
 632              		.cfi_endproc
 633              	.LFE43:
 635              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 636              		.align	1
 637              		.global	HAL_UART_DeInit
 638              		.syntax unified
 639              		.code	16
 640              		.thumb_func
 642              	HAL_UART_DeInit:
 643              	.LFB44:
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 644              		.loc 1 667 1
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 8
 647              		@ frame_needed = 1, uses_anonymous_args = 0
 648 0000 80B5     		push	{r7, lr}
 649              	.LCFI12:
 650              		.cfi_def_cfa_offset 8
 651              		.cfi_offset 7, -8
 652              		.cfi_offset 14, -4
 653 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 24


 654              	.LCFI13:
 655              		.cfi_def_cfa_offset 16
 656 0004 00AF     		add	r7, sp, #0
 657              	.LCFI14:
 658              		.cfi_def_cfa_register 7
 659 0006 7860     		str	r0, [r7, #4]
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart == NULL)
 660              		.loc 1 669 6
 661 0008 7B68     		ldr	r3, [r7, #4]
 662 000a 002B     		cmp	r3, #0
 663 000c 01D1     		bne	.L37
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 664              		.loc 1 671 12
 665 000e 0123     		movs	r3, #1
 666 0010 30E0     		b	.L38
 667              	.L37:
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 668              		.loc 1 677 17
 669 0012 7B68     		ldr	r3, [r7, #4]
 670 0014 2422     		movs	r2, #36
 671 0016 DA67     		str	r2, [r3, #124]
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 672              		.loc 1 679 3
 673 0018 7B68     		ldr	r3, [r7, #4]
 674 001a 1B68     		ldr	r3, [r3]
 675 001c 1A68     		ldr	r2, [r3]
 676 001e 7B68     		ldr	r3, [r7, #4]
 677 0020 1B68     		ldr	r3, [r3]
 678 0022 0121     		movs	r1, #1
 679 0024 8A43     		bics	r2, r1
 680 0026 1A60     		str	r2, [r3]
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 681              		.loc 1 681 8
 682 0028 7B68     		ldr	r3, [r7, #4]
 683 002a 1B68     		ldr	r3, [r3]
 684              		.loc 1 681 24
 685 002c 0022     		movs	r2, #0
 686 002e 1A60     		str	r2, [r3]
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 687              		.loc 1 682 8
 688 0030 7B68     		ldr	r3, [r7, #4]
 689 0032 1B68     		ldr	r3, [r3]
 690              		.loc 1 682 24
 691 0034 0022     		movs	r2, #0
 692 0036 5A60     		str	r2, [r3, #4]
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 693              		.loc 1 683 8
 694 0038 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 25


 695 003a 1B68     		ldr	r3, [r3]
 696              		.loc 1 683 24
 697 003c 0022     		movs	r2, #0
 698 003e 9A60     		str	r2, [r3, #8]
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DeInit the low level hardware */
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DeInit the low level hardware */
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 699              		.loc 1 694 3
 700 0040 7B68     		ldr	r3, [r7, #4]
 701 0042 1800     		movs	r0, r3
 702 0044 FFF7FEFF 		bl	HAL_UART_MspDeInit
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 703              		.loc 1 697 20
 704 0048 7B68     		ldr	r3, [r7, #4]
 705 004a 8422     		movs	r2, #132
 706 004c 0021     		movs	r1, #0
 707 004e 9950     		str	r1, [r3, r2]
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 708              		.loc 1 698 17
 709 0050 7B68     		ldr	r3, [r7, #4]
 710 0052 0022     		movs	r2, #0
 711 0054 DA67     		str	r2, [r3, #124]
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 712              		.loc 1 699 18
 713 0056 7B68     		ldr	r3, [r7, #4]
 714 0058 8022     		movs	r2, #128
 715 005a 0021     		movs	r1, #0
 716 005c 9950     		str	r1, [r3, r2]
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 717              		.loc 1 700 24
 718 005e 7B68     		ldr	r3, [r7, #4]
 719 0060 0022     		movs	r2, #0
 720 0062 1A66     		str	r2, [r3, #96]
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 721              		.loc 1 701 22
 722 0064 7B68     		ldr	r3, [r7, #4]
 723 0066 0022     		movs	r2, #0
 724 0068 5A66     		str	r2, [r3, #100]
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 725              		.loc 1 703 3
 726 006a 7B68     		ldr	r3, [r7, #4]
 727 006c 7822     		movs	r2, #120
 728 006e 0021     		movs	r1, #0
 729 0070 9954     		strb	r1, [r3, r2]
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 26


 730              		.loc 1 705 10
 731 0072 0023     		movs	r3, #0
 732              	.L38:
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 733              		.loc 1 706 1
 734 0074 1800     		movs	r0, r3
 735 0076 BD46     		mov	sp, r7
 736 0078 02B0     		add	sp, sp, #8
 737              		@ sp needed
 738 007a 80BD     		pop	{r7, pc}
 739              		.cfi_endproc
 740              	.LFE44:
 742              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 743              		.align	1
 744              		.weak	HAL_UART_MspInit
 745              		.syntax unified
 746              		.code	16
 747              		.thumb_func
 749              	HAL_UART_MspInit:
 750              	.LFB45:
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 751              		.loc 1 714 1
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 8
 754              		@ frame_needed = 1, uses_anonymous_args = 0
 755 0000 80B5     		push	{r7, lr}
 756              	.LCFI15:
 757              		.cfi_def_cfa_offset 8
 758              		.cfi_offset 7, -8
 759              		.cfi_offset 14, -4
 760 0002 82B0     		sub	sp, sp, #8
 761              	.LCFI16:
 762              		.cfi_def_cfa_offset 16
 763 0004 00AF     		add	r7, sp, #0
 764              	.LCFI17:
 765              		.cfi_def_cfa_register 7
 766 0006 7860     		str	r0, [r7, #4]
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 767              		.loc 1 721 1
 768 0008 C046     		nop
 769 000a BD46     		mov	sp, r7
 770 000c 02B0     		add	sp, sp, #8
 771              		@ sp needed
 772 000e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 27


 773              		.cfi_endproc
 774              	.LFE45:
 776              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 777              		.align	1
 778              		.weak	HAL_UART_MspDeInit
 779              		.syntax unified
 780              		.code	16
 781              		.thumb_func
 783              	HAL_UART_MspDeInit:
 784              	.LFB46:
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 785              		.loc 1 729 1
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 8
 788              		@ frame_needed = 1, uses_anonymous_args = 0
 789 0000 80B5     		push	{r7, lr}
 790              	.LCFI18:
 791              		.cfi_def_cfa_offset 8
 792              		.cfi_offset 7, -8
 793              		.cfi_offset 14, -4
 794 0002 82B0     		sub	sp, sp, #8
 795              	.LCFI19:
 796              		.cfi_def_cfa_offset 16
 797 0004 00AF     		add	r7, sp, #0
 798              	.LCFI20:
 799              		.cfi_def_cfa_register 7
 800 0006 7860     		str	r0, [r7, #4]
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 801              		.loc 1 736 1
 802 0008 C046     		nop
 803 000a BD46     		mov	sp, r7
 804 000c 02B0     		add	sp, sp, #8
 805              		@ sp needed
 806 000e 80BD     		pop	{r7, pc}
 807              		.cfi_endproc
 808              	.LFE46:
 810              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 811              		.align	1
 812              		.global	HAL_UART_Transmit
 813              		.syntax unified
 814              		.code	16
 815              		.thumb_func
 817              	HAL_UART_Transmit:
 818              	.LFB47:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 28


 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Register a User UART Callback
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   The HAL_UART_RegisterCallback() may be called before HAL_UART_Init(), HAL_HalfDuplex_In
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_LIN_Init(), HAL_MultiProcessor_Init() or HAL_RS485Ex_Init() in HAL_UART_STATE_RESET
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         callbacks for HAL_UART_MSPINIT_CB_ID and HAL_UART_MSPDEINIT_CB_ID
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart uart handle
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This parameter can be one of the following values:
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (pCallback == NULL)
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (CallbackID)
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 29


 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR1_UESM)
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR3_WUFIE)
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_WUFIE */
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR1_UESM */
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default :
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         status =  HAL_ERROR;
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (CallbackID)
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default :
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         status =  HAL_ERROR;
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 30


 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     status =  HAL_ERROR;
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return status;
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   The HAL_UART_UnRegisterCallback() may be called before HAL_UART_Init(), HAL_HalfDuplex_
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_LIN_Init(), HAL_MultiProcessor_Init() or HAL_RS485Ex_Init() in HAL_UART_STATE_RESET
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         callbacks for HAL_UART_MSPINIT_CB_ID and HAL_UART_MSPDEINIT_CB_ID
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart uart handle
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This parameter can be one of the following values:
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (CallbackID)
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 31


 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                                                                   AbortTransmitCplt
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                                                                   AbortReceiveCpltC
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR1_UESM)
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR3_WUFIE)
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_WUFIE */
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR1_UESM */
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default :
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         status =  HAL_ERROR;
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (CallbackID)
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default :
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 32


 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         status =  HAL_ERROR;
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     status =  HAL_ERROR;
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return status;
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart     Uart handle
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (pCallback == NULL)
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process locked */
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     status =  HAL_ERROR;
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Release Lock */
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return status;
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart     Uart handle
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 33


1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process locked */
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     status =  HAL_ERROR;
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Release Lock */
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return status;
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### IO operation functions #####
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and Half duplex data transfers.
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) There are two mode of transfer:
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            after finishing transfer.
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            or DMA, These API's return the HAL status.
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The end of the data processing will be indicated through the
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            using DMA mode.
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Blocking mode API's are :
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Receive()
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 34


1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Abort()
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         reception services:
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         Errors are handled as follows :
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            in Interrupt mode reception .
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            to identify error type, and HAL_UART_ErrorCallback() user callback is executed.
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Transfer is kept ongoing on UART side.
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback()
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            user callback is executed.
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 35


1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 provided through pData.
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart   UART handle.
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size,
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 819              		.loc 1 1153 1
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 32
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823 0000 80B5     		push	{r7, lr}
 824              	.LCFI21:
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 7, -8
 827              		.cfi_offset 14, -4
 828 0002 8AB0     		sub	sp, sp, #40
 829              	.LCFI22:
 830              		.cfi_def_cfa_offset 48
 831 0004 02AF     		add	r7, sp, #8
 832              	.LCFI23:
 833              		.cfi_def_cfa 7, 40
 834 0006 F860     		str	r0, [r7, #12]
 835 0008 B960     		str	r1, [r7, #8]
 836 000a 3B60     		str	r3, [r7]
 837 000c BB1D     		adds	r3, r7, #6
 838 000e 1A80     		strh	r2, [r3]
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const uint8_t  *pdata8bits;
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const uint16_t *pdata16bits;
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart;
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 839              		.loc 1 1159 12
 840 0010 FB68     		ldr	r3, [r7, #12]
 841 0012 DB6F     		ldr	r3, [r3, #124]
 842              		.loc 1 1159 6
 843 0014 202B     		cmp	r3, #32
 844 0016 00D0     		beq	.LCB708
 845 0018 8DE0     		b	.L42	@long jump
 846              	.LCB708:
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 847              		.loc 1 1161 8
 848 001a BB68     		ldr	r3, [r7, #8]
 849 001c 002B     		cmp	r3, #0
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 36


 850 001e 03D0     		beq	.L43
 851              		.loc 1 1161 25 discriminator 1
 852 0020 BB1D     		adds	r3, r7, #6
 853 0022 1B88     		ldrh	r3, [r3]
 854 0024 002B     		cmp	r3, #0
 855 0026 01D1     		bne	.L44
 856              	.L43:
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 857              		.loc 1 1163 15
 858 0028 0123     		movs	r3, #1
 859 002a 85E0     		b	.L45
 860              	.L44:
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 861              		.loc 1 1169 21
 862 002c FB68     		ldr	r3, [r7, #12]
 863 002e 9A68     		ldr	r2, [r3, #8]
 864              		.loc 1 1169 8
 865 0030 8023     		movs	r3, #128
 866 0032 5B01     		lsls	r3, r3, #5
 867 0034 9A42     		cmp	r2, r3
 868 0036 09D1     		bne	.L46
 869              		.loc 1 1169 71 discriminator 1
 870 0038 FB68     		ldr	r3, [r7, #12]
 871 003a 1B69     		ldr	r3, [r3, #16]
 872              		.loc 1 1169 56 discriminator 1
 873 003c 002B     		cmp	r3, #0
 874 003e 05D1     		bne	.L46
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 875              		.loc 1 1171 13
 876 0040 BB68     		ldr	r3, [r7, #8]
 877              		.loc 1 1171 30
 878 0042 0122     		movs	r2, #1
 879 0044 1340     		ands	r3, r2
 880              		.loc 1 1171 10
 881 0046 01D0     		beq	.L46
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 882              		.loc 1 1173 17
 883 0048 0123     		movs	r3, #1
 884 004a 75E0     		b	.L45
 885              	.L46:
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 886              		.loc 1 1177 22
 887 004c FB68     		ldr	r3, [r7, #12]
 888 004e 8422     		movs	r2, #132
 889 0050 0021     		movs	r1, #0
 890 0052 9950     		str	r1, [r3, r2]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 37


1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 891              		.loc 1 1178 19
 892 0054 FB68     		ldr	r3, [r7, #12]
 893 0056 2122     		movs	r2, #33
 894 0058 DA67     		str	r2, [r3, #124]
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout management */
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 895              		.loc 1 1181 17
 896 005a FFF7FEFF 		bl	HAL_GetTick
 897 005e 0300     		movs	r3, r0
 898 0060 7B61     		str	r3, [r7, #20]
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 899              		.loc 1 1183 24
 900 0062 FB68     		ldr	r3, [r7, #12]
 901 0064 BA1D     		adds	r2, r7, #6
 902 0066 5021     		movs	r1, #80
 903 0068 1288     		ldrh	r2, [r2]
 904 006a 5A52     		strh	r2, [r3, r1]
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 905              		.loc 1 1184 24
 906 006c FB68     		ldr	r3, [r7, #12]
 907 006e BA1D     		adds	r2, r7, #6
 908 0070 5221     		movs	r1, #82
 909 0072 1288     		ldrh	r2, [r2]
 910 0074 5A52     		strh	r2, [r3, r1]
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 911              		.loc 1 1187 21
 912 0076 FB68     		ldr	r3, [r7, #12]
 913 0078 9A68     		ldr	r2, [r3, #8]
 914              		.loc 1 1187 8
 915 007a 8023     		movs	r3, #128
 916 007c 5B01     		lsls	r3, r3, #5
 917 007e 9A42     		cmp	r2, r3
 918 0080 08D1     		bne	.L47
 919              		.loc 1 1187 71 discriminator 1
 920 0082 FB68     		ldr	r3, [r7, #12]
 921 0084 1B69     		ldr	r3, [r3, #16]
 922              		.loc 1 1187 56 discriminator 1
 923 0086 002B     		cmp	r3, #0
 924 0088 04D1     		bne	.L47
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata8bits  = NULL;
 925              		.loc 1 1189 19
 926 008a 0023     		movs	r3, #0
 927 008c FB61     		str	r3, [r7, #28]
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
 928              		.loc 1 1190 19
 929 008e BB68     		ldr	r3, [r7, #8]
 930 0090 BB61     		str	r3, [r7, #24]
 931 0092 03E0     		b	.L48
 932              	.L47:
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 38


1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata8bits  = pData;
 933              		.loc 1 1194 19
 934 0094 BB68     		ldr	r3, [r7, #8]
 935 0096 FB61     		str	r3, [r7, #28]
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = NULL;
 936              		.loc 1 1195 19
 937 0098 0023     		movs	r3, #0
 938 009a BB61     		str	r3, [r7, #24]
 939              	.L48:
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 940              		.loc 1 1198 11
 941 009c 30E0     		b	.L49
 942              	.L53:
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 943              		.loc 1 1200 11
 944 009e 7A69     		ldr	r2, [r7, #20]
 945 00a0 F868     		ldr	r0, [r7, #12]
 946 00a2 3B68     		ldr	r3, [r7]
 947 00a4 0093     		str	r3, [sp]
 948 00a6 1300     		movs	r3, r2
 949 00a8 0022     		movs	r2, #0
 950 00aa 8021     		movs	r1, #128
 951 00ac FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 952 00b0 031E     		subs	r3, r0, #0
 953              		.loc 1 1200 10
 954 00b2 04D0     		beq	.L50
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 955              		.loc 1 1203 23
 956 00b4 FB68     		ldr	r3, [r7, #12]
 957 00b6 2022     		movs	r2, #32
 958 00b8 DA67     		str	r2, [r3, #124]
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 959              		.loc 1 1205 16
 960 00ba 0323     		movs	r3, #3
 961 00bc 3CE0     		b	.L45
 962              	.L50:
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (pdata8bits == NULL)
 963              		.loc 1 1207 10
 964 00be FB69     		ldr	r3, [r7, #28]
 965 00c0 002B     		cmp	r3, #0
 966 00c2 0BD1     		bne	.L51
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 967              		.loc 1 1209 43
 968 00c4 BB69     		ldr	r3, [r7, #24]
 969 00c6 1A88     		ldrh	r2, [r3]
 970              		.loc 1 1209 14
 971 00c8 FB68     		ldr	r3, [r7, #12]
 972 00ca 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 39


 973              		.loc 1 1209 32
 974 00cc D205     		lsls	r2, r2, #23
 975 00ce D20D     		lsrs	r2, r2, #23
 976 00d0 92B2     		uxth	r2, r2
 977              		.loc 1 1209 30
 978 00d2 1A85     		strh	r2, [r3, #40]
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata16bits++;
 979              		.loc 1 1210 20
 980 00d4 BB69     		ldr	r3, [r7, #24]
 981 00d6 0233     		adds	r3, r3, #2
 982 00d8 BB61     		str	r3, [r7, #24]
 983 00da 08E0     		b	.L52
 984              	.L51:
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 985              		.loc 1 1214 42
 986 00dc FB69     		ldr	r3, [r7, #28]
 987 00de 1A78     		ldrb	r2, [r3]
 988              		.loc 1 1214 14
 989 00e0 FB68     		ldr	r3, [r7, #12]
 990 00e2 1B68     		ldr	r3, [r3]
 991              		.loc 1 1214 32
 992 00e4 92B2     		uxth	r2, r2
 993              		.loc 1 1214 30
 994 00e6 1A85     		strh	r2, [r3, #40]
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata8bits++;
 995              		.loc 1 1215 19
 996 00e8 FB69     		ldr	r3, [r7, #28]
 997 00ea 0133     		adds	r3, r3, #1
 998 00ec FB61     		str	r3, [r7, #28]
 999              	.L52:
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 1000              		.loc 1 1217 12
 1001 00ee FB68     		ldr	r3, [r7, #12]
 1002 00f0 5222     		movs	r2, #82
 1003 00f2 9B5A     		ldrh	r3, [r3, r2]
 1004 00f4 9BB2     		uxth	r3, r3
 1005              		.loc 1 1217 25
 1006 00f6 013B     		subs	r3, r3, #1
 1007 00f8 99B2     		uxth	r1, r3
 1008 00fa FB68     		ldr	r3, [r7, #12]
 1009 00fc 5222     		movs	r2, #82
 1010 00fe 9952     		strh	r1, [r3, r2]
 1011              	.L49:
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1012              		.loc 1 1198 17
 1013 0100 FB68     		ldr	r3, [r7, #12]
 1014 0102 5222     		movs	r2, #82
 1015 0104 9B5A     		ldrh	r3, [r3, r2]
 1016 0106 9BB2     		uxth	r3, r3
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1017              		.loc 1 1198 11
 1018 0108 002B     		cmp	r3, #0
 1019 010a C8D1     		bne	.L53
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 40


1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 1020              		.loc 1 1220 9
 1021 010c 7A69     		ldr	r2, [r7, #20]
 1022 010e F868     		ldr	r0, [r7, #12]
 1023 0110 3B68     		ldr	r3, [r7]
 1024 0112 0093     		str	r3, [sp]
 1025 0114 1300     		movs	r3, r2
 1026 0116 0022     		movs	r2, #0
 1027 0118 4021     		movs	r1, #64
 1028 011a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1029 011e 031E     		subs	r3, r0, #0
 1030              		.loc 1 1220 8
 1031 0120 04D0     		beq	.L54
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 1032              		.loc 1 1222 21
 1033 0122 FB68     		ldr	r3, [r7, #12]
 1034 0124 2022     		movs	r2, #32
 1035 0126 DA67     		str	r2, [r3, #124]
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
 1036              		.loc 1 1224 14
 1037 0128 0323     		movs	r3, #3
 1038 012a 05E0     		b	.L45
 1039              	.L54:
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 1040              		.loc 1 1228 19
 1041 012c FB68     		ldr	r3, [r7, #12]
 1042 012e 2022     		movs	r2, #32
 1043 0130 DA67     		str	r2, [r3, #124]
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 1044              		.loc 1 1230 12
 1045 0132 0023     		movs	r3, #0
 1046 0134 00E0     		b	.L45
 1047              	.L42:
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 1048              		.loc 1 1234 12
 1049 0136 0223     		movs	r3, #2
 1050              	.L45:
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1051              		.loc 1 1236 1
 1052 0138 1800     		movs	r0, r3
 1053 013a BD46     		mov	sp, r7
 1054 013c 08B0     		add	sp, sp, #32
 1055              		@ sp needed
 1056 013e 80BD     		pop	{r7, pc}
 1057              		.cfi_endproc
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 41


 1058              	.LFE47:
 1060              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1061              		.align	1
 1062              		.global	HAL_UART_Receive
 1063              		.syntax unified
 1064              		.code	16
 1065              		.thumb_func
 1067              	HAL_UART_Receive:
 1068              	.LFB48:
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 available through pData.
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (16 bits) (as received data will be handled using u16 pointer cast). Depending on compi
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart   UART handle.
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1069              		.loc 1 1255 1
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 32
 1072              		@ frame_needed = 1, uses_anonymous_args = 0
 1073 0000 80B5     		push	{r7, lr}
 1074              	.LCFI24:
 1075              		.cfi_def_cfa_offset 8
 1076              		.cfi_offset 7, -8
 1077              		.cfi_offset 14, -4
 1078 0002 8AB0     		sub	sp, sp, #40
 1079              	.LCFI25:
 1080              		.cfi_def_cfa_offset 48
 1081 0004 02AF     		add	r7, sp, #8
 1082              	.LCFI26:
 1083              		.cfi_def_cfa 7, 40
 1084 0006 F860     		str	r0, [r7, #12]
 1085 0008 B960     		str	r1, [r7, #8]
 1086 000a 3B60     		str	r3, [r7]
 1087 000c BB1D     		adds	r3, r7, #6
 1088 000e 1A80     		strh	r2, [r3]
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint8_t  *pdata8bits;
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t *pdata16bits;
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask;
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart;
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1089              		.loc 1 1262 12
 1090 0010 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 42


 1091 0012 8022     		movs	r2, #128
 1092 0014 9B58     		ldr	r3, [r3, r2]
 1093              		.loc 1 1262 6
 1094 0016 202B     		cmp	r3, #32
 1095 0018 00D0     		beq	.LCB920
 1096 001a BDE0     		b	.L56	@long jump
 1097              	.LCB920:
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1098              		.loc 1 1264 8
 1099 001c BB68     		ldr	r3, [r7, #8]
 1100 001e 002B     		cmp	r3, #0
 1101 0020 03D0     		beq	.L57
 1102              		.loc 1 1264 25 discriminator 1
 1103 0022 BB1D     		adds	r3, r7, #6
 1104 0024 1B88     		ldrh	r3, [r3]
 1105 0026 002B     		cmp	r3, #0
 1106 0028 01D1     		bne	.L58
 1107              	.L57:
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 1108              		.loc 1 1266 15
 1109 002a 0123     		movs	r3, #1
 1110 002c B5E0     		b	.L59
 1111              	.L58:
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1112              		.loc 1 1272 21
 1113 002e FB68     		ldr	r3, [r7, #12]
 1114 0030 9A68     		ldr	r2, [r3, #8]
 1115              		.loc 1 1272 8
 1116 0032 8023     		movs	r3, #128
 1117 0034 5B01     		lsls	r3, r3, #5
 1118 0036 9A42     		cmp	r2, r3
 1119 0038 09D1     		bne	.L60
 1120              		.loc 1 1272 71 discriminator 1
 1121 003a FB68     		ldr	r3, [r7, #12]
 1122 003c 1B69     		ldr	r3, [r3, #16]
 1123              		.loc 1 1272 56 discriminator 1
 1124 003e 002B     		cmp	r3, #0
 1125 0040 05D1     		bne	.L60
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 1126              		.loc 1 1274 13
 1127 0042 BB68     		ldr	r3, [r7, #8]
 1128              		.loc 1 1274 30
 1129 0044 0122     		movs	r2, #1
 1130 0046 1340     		ands	r3, r2
 1131              		.loc 1 1274 10
 1132 0048 01D0     		beq	.L60
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 1133              		.loc 1 1276 17
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 43


 1134 004a 0123     		movs	r3, #1
 1135 004c A5E0     		b	.L59
 1136              	.L60:
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1137              		.loc 1 1280 22
 1138 004e FB68     		ldr	r3, [r7, #12]
 1139 0050 8422     		movs	r2, #132
 1140 0052 0021     		movs	r1, #0
 1141 0054 9950     		str	r1, [r3, r2]
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1142              		.loc 1 1281 20
 1143 0056 FB68     		ldr	r3, [r7, #12]
 1144 0058 8022     		movs	r2, #128
 1145 005a 2221     		movs	r1, #34
 1146 005c 9950     		str	r1, [r3, r2]
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1147              		.loc 1 1282 26
 1148 005e FB68     		ldr	r3, [r7, #12]
 1149 0060 0022     		movs	r2, #0
 1150 0062 1A66     		str	r2, [r3, #96]
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout management */
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1151              		.loc 1 1285 17
 1152 0064 FFF7FEFF 		bl	HAL_GetTick
 1153 0068 0300     		movs	r3, r0
 1154 006a 7B61     		str	r3, [r7, #20]
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1155              		.loc 1 1287 24
 1156 006c FB68     		ldr	r3, [r7, #12]
 1157 006e BA1D     		adds	r2, r7, #6
 1158 0070 5821     		movs	r1, #88
 1159 0072 1288     		ldrh	r2, [r2]
 1160 0074 5A52     		strh	r2, [r3, r1]
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 1161              		.loc 1 1288 24
 1162 0076 FB68     		ldr	r3, [r7, #12]
 1163 0078 BA1D     		adds	r2, r7, #6
 1164 007a 5A21     		movs	r1, #90
 1165 007c 1288     		ldrh	r2, [r2]
 1166 007e 5A52     		strh	r2, [r3, r1]
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1167              		.loc 1 1291 5
 1168 0080 FB68     		ldr	r3, [r7, #12]
 1169 0082 9A68     		ldr	r2, [r3, #8]
 1170 0084 8023     		movs	r3, #128
 1171 0086 5B01     		lsls	r3, r3, #5
 1172 0088 9A42     		cmp	r2, r3
 1173 008a 0DD1     		bne	.L61
 1174              		.loc 1 1291 5 is_stmt 0 discriminator 1
 1175 008c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 44


 1176 008e 1B69     		ldr	r3, [r3, #16]
 1177 0090 002B     		cmp	r3, #0
 1178 0092 04D1     		bne	.L62
 1179              		.loc 1 1291 5 discriminator 3
 1180 0094 FB68     		ldr	r3, [r7, #12]
 1181 0096 5C22     		movs	r2, #92
 1182 0098 4249     		ldr	r1, .L73
 1183 009a 9952     		strh	r1, [r3, r2]
 1184 009c 1AE0     		b	.L63
 1185              	.L62:
 1186              		.loc 1 1291 5 discriminator 4
 1187 009e FB68     		ldr	r3, [r7, #12]
 1188 00a0 5C22     		movs	r2, #92
 1189 00a2 FF21     		movs	r1, #255
 1190 00a4 9952     		strh	r1, [r3, r2]
 1191 00a6 15E0     		b	.L63
 1192              	.L61:
 1193              		.loc 1 1291 5 discriminator 2
 1194 00a8 FB68     		ldr	r3, [r7, #12]
 1195 00aa 9B68     		ldr	r3, [r3, #8]
 1196 00ac 002B     		cmp	r3, #0
 1197 00ae 0DD1     		bne	.L64
 1198              		.loc 1 1291 5 discriminator 5
 1199 00b0 FB68     		ldr	r3, [r7, #12]
 1200 00b2 1B69     		ldr	r3, [r3, #16]
 1201 00b4 002B     		cmp	r3, #0
 1202 00b6 04D1     		bne	.L65
 1203              		.loc 1 1291 5 discriminator 7
 1204 00b8 FB68     		ldr	r3, [r7, #12]
 1205 00ba 5C22     		movs	r2, #92
 1206 00bc FF21     		movs	r1, #255
 1207 00be 9952     		strh	r1, [r3, r2]
 1208 00c0 08E0     		b	.L63
 1209              	.L65:
 1210              		.loc 1 1291 5 discriminator 8
 1211 00c2 FB68     		ldr	r3, [r7, #12]
 1212 00c4 5C22     		movs	r2, #92
 1213 00c6 7F21     		movs	r1, #127
 1214 00c8 9952     		strh	r1, [r3, r2]
 1215 00ca 03E0     		b	.L63
 1216              	.L64:
 1217              		.loc 1 1291 5 discriminator 6
 1218 00cc FB68     		ldr	r3, [r7, #12]
 1219 00ce 5C22     		movs	r2, #92
 1220 00d0 0021     		movs	r1, #0
 1221 00d2 9952     		strh	r1, [r3, r2]
 1222              	.L63:
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 1223              		.loc 1 1292 12 is_stmt 1
 1224 00d4 1223     		movs	r3, #18
 1225 00d6 FB18     		adds	r3, r7, r3
 1226 00d8 FA68     		ldr	r2, [r7, #12]
 1227 00da 5C21     		movs	r1, #92
 1228 00dc 525A     		ldrh	r2, [r2, r1]
 1229 00de 1A80     		strh	r2, [r3]
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 45


1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1230              		.loc 1 1295 21
 1231 00e0 FB68     		ldr	r3, [r7, #12]
 1232 00e2 9A68     		ldr	r2, [r3, #8]
 1233              		.loc 1 1295 8
 1234 00e4 8023     		movs	r3, #128
 1235 00e6 5B01     		lsls	r3, r3, #5
 1236 00e8 9A42     		cmp	r2, r3
 1237 00ea 08D1     		bne	.L66
 1238              		.loc 1 1295 71 discriminator 1
 1239 00ec FB68     		ldr	r3, [r7, #12]
 1240 00ee 1B69     		ldr	r3, [r3, #16]
 1241              		.loc 1 1295 56 discriminator 1
 1242 00f0 002B     		cmp	r3, #0
 1243 00f2 04D1     		bne	.L66
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata8bits  = NULL;
 1244              		.loc 1 1297 19
 1245 00f4 0023     		movs	r3, #0
 1246 00f6 FB61     		str	r3, [r7, #28]
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1247              		.loc 1 1298 19
 1248 00f8 BB68     		ldr	r3, [r7, #8]
 1249 00fa BB61     		str	r3, [r7, #24]
 1250 00fc 03E0     		b	.L67
 1251              	.L66:
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata8bits  = pData;
 1252              		.loc 1 1302 19
 1253 00fe BB68     		ldr	r3, [r7, #8]
 1254 0100 FB61     		str	r3, [r7, #28]
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       pdata16bits = NULL;
 1255              		.loc 1 1303 19
 1256 0102 0023     		movs	r3, #0
 1257 0104 BB61     		str	r3, [r7, #24]
 1258              	.L67:
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* as long as data have to be received */
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1259              		.loc 1 1307 11
 1260 0106 3BE0     		b	.L68
 1261              	.L72:
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1262              		.loc 1 1309 11
 1263 0108 7A69     		ldr	r2, [r7, #20]
 1264 010a F868     		ldr	r0, [r7, #12]
 1265 010c 3B68     		ldr	r3, [r7]
 1266 010e 0093     		str	r3, [sp]
 1267 0110 1300     		movs	r3, r2
 1268 0112 0022     		movs	r2, #0
 1269 0114 2021     		movs	r1, #32
 1270 0116 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1271 011a 031E     		subs	r3, r0, #0
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 46


 1272              		.loc 1 1309 10
 1273 011c 05D0     		beq	.L69
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 1274              		.loc 1 1311 24
 1275 011e FB68     		ldr	r3, [r7, #12]
 1276 0120 8022     		movs	r2, #128
 1277 0122 2021     		movs	r1, #32
 1278 0124 9950     		str	r1, [r3, r2]
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 1279              		.loc 1 1313 16
 1280 0126 0323     		movs	r3, #3
 1281 0128 37E0     		b	.L59
 1282              	.L69:
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (pdata8bits == NULL)
 1283              		.loc 1 1315 10
 1284 012a FB69     		ldr	r3, [r7, #28]
 1285 012c 002B     		cmp	r3, #0
 1286 012e 0ED1     		bne	.L70
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 1287              		.loc 1 1317 40
 1288 0130 FB68     		ldr	r3, [r7, #12]
 1289 0132 1B68     		ldr	r3, [r3]
 1290              		.loc 1 1317 50
 1291 0134 9B8C     		ldrh	r3, [r3, #36]
 1292 0136 9BB2     		uxth	r3, r3
 1293              		.loc 1 1317 24
 1294 0138 1222     		movs	r2, #18
 1295 013a BA18     		adds	r2, r7, r2
 1296 013c 1288     		ldrh	r2, [r2]
 1297 013e 1340     		ands	r3, r2
 1298 0140 9AB2     		uxth	r2, r3
 1299              		.loc 1 1317 22
 1300 0142 BB69     		ldr	r3, [r7, #24]
 1301 0144 1A80     		strh	r2, [r3]
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata16bits++;
 1302              		.loc 1 1318 20
 1303 0146 BB69     		ldr	r3, [r7, #24]
 1304 0148 0233     		adds	r3, r3, #2
 1305 014a BB61     		str	r3, [r7, #24]
 1306 014c 0FE0     		b	.L71
 1307              	.L70:
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1308              		.loc 1 1322 38
 1309 014e FB68     		ldr	r3, [r7, #12]
 1310 0150 1B68     		ldr	r3, [r3]
 1311              		.loc 1 1322 48
 1312 0152 9B8C     		ldrh	r3, [r3, #36]
 1313 0154 9BB2     		uxth	r3, r3
 1314              		.loc 1 1322 23
 1315 0156 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 47


 1316              		.loc 1 1322 56
 1317 0158 1222     		movs	r2, #18
 1318 015a BA18     		adds	r2, r7, r2
 1319 015c 1288     		ldrh	r2, [r2]
 1320 015e D2B2     		uxtb	r2, r2
 1321              		.loc 1 1322 23
 1322 0160 1340     		ands	r3, r2
 1323 0162 DAB2     		uxtb	r2, r3
 1324              		.loc 1 1322 21
 1325 0164 FB69     		ldr	r3, [r7, #28]
 1326 0166 1A70     		strb	r2, [r3]
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pdata8bits++;
 1327              		.loc 1 1323 19
 1328 0168 FB69     		ldr	r3, [r7, #28]
 1329 016a 0133     		adds	r3, r3, #1
 1330 016c FB61     		str	r3, [r7, #28]
 1331              	.L71:
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount--;
 1332              		.loc 1 1325 12
 1333 016e FB68     		ldr	r3, [r7, #12]
 1334 0170 5A22     		movs	r2, #90
 1335 0172 9B5A     		ldrh	r3, [r3, r2]
 1336 0174 9BB2     		uxth	r3, r3
 1337              		.loc 1 1325 25
 1338 0176 013B     		subs	r3, r3, #1
 1339 0178 99B2     		uxth	r1, r3
 1340 017a FB68     		ldr	r3, [r7, #12]
 1341 017c 5A22     		movs	r2, #90
 1342 017e 9952     		strh	r1, [r3, r2]
 1343              	.L68:
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1344              		.loc 1 1307 17
 1345 0180 FB68     		ldr	r3, [r7, #12]
 1346 0182 5A22     		movs	r2, #90
 1347 0184 9B5A     		ldrh	r3, [r3, r2]
 1348 0186 9BB2     		uxth	r3, r3
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1349              		.loc 1 1307 11
 1350 0188 002B     		cmp	r3, #0
 1351 018a BDD1     		bne	.L72
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1352              		.loc 1 1329 20
 1353 018c FB68     		ldr	r3, [r7, #12]
 1354 018e 8022     		movs	r2, #128
 1355 0190 2021     		movs	r1, #32
 1356 0192 9950     		str	r1, [r3, r2]
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 1357              		.loc 1 1331 12
 1358 0194 0023     		movs	r3, #0
 1359 0196 00E0     		b	.L59
 1360              	.L56:
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 48


1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 1361              		.loc 1 1335 12
 1362 0198 0223     		movs	r3, #2
 1363              	.L59:
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1364              		.loc 1 1337 1
 1365 019a 1800     		movs	r0, r3
 1366 019c BD46     		mov	sp, r7
 1367 019e 08B0     		add	sp, sp, #32
 1368              		@ sp needed
 1369 01a0 80BD     		pop	{r7, pc}
 1370              	.L74:
 1371 01a2 C046     		.align	2
 1372              	.L73:
 1373 01a4 FF010000 		.word	511
 1374              		.cfi_endproc
 1375              	.LFE48:
 1377              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1378              		.align	1
 1379              		.global	HAL_UART_Transmit_IT
 1380              		.syntax unified
 1381              		.code	16
 1382              		.thumb_func
 1384              	HAL_UART_Transmit_IT:
 1385              	.LFB49:
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 provided through pData.
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Si
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1386              		.loc 1 1355 1
 1387              		.cfi_startproc
 1388              		@ args = 0, pretend = 0, frame = 32
 1389              		@ frame_needed = 1, uses_anonymous_args = 0
 1390 0000 80B5     		push	{r7, lr}
 1391              	.LCFI27:
 1392              		.cfi_def_cfa_offset 8
 1393              		.cfi_offset 7, -8
 1394              		.cfi_offset 14, -4
 1395 0002 88B0     		sub	sp, sp, #32
 1396              	.LCFI28:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 49


 1397              		.cfi_def_cfa_offset 40
 1398 0004 00AF     		add	r7, sp, #0
 1399              	.LCFI29:
 1400              		.cfi_def_cfa_register 7
 1401 0006 F860     		str	r0, [r7, #12]
 1402 0008 B960     		str	r1, [r7, #8]
 1403 000a BB1D     		adds	r3, r7, #6
 1404 000c 1A80     		strh	r2, [r3]
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1405              		.loc 1 1357 12
 1406 000e FB68     		ldr	r3, [r7, #12]
 1407 0010 DB6F     		ldr	r3, [r3, #124]
 1408              		.loc 1 1357 6
 1409 0012 202B     		cmp	r3, #32
 1410 0014 5BD1     		bne	.L76
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1411              		.loc 1 1359 8
 1412 0016 BB68     		ldr	r3, [r7, #8]
 1413 0018 002B     		cmp	r3, #0
 1414 001a 03D0     		beq	.L77
 1415              		.loc 1 1359 25 discriminator 1
 1416 001c BB1D     		adds	r3, r7, #6
 1417 001e 1B88     		ldrh	r3, [r3]
 1418 0020 002B     		cmp	r3, #0
 1419 0022 01D1     		bne	.L78
 1420              	.L77:
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 1421              		.loc 1 1361 14
 1422 0024 0123     		movs	r3, #1
 1423 0026 53E0     		b	.L79
 1424              	.L78:
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1425              		.loc 1 1367 21
 1426 0028 FB68     		ldr	r3, [r7, #12]
 1427 002a 9A68     		ldr	r2, [r3, #8]
 1428              		.loc 1 1367 8
 1429 002c 8023     		movs	r3, #128
 1430 002e 5B01     		lsls	r3, r3, #5
 1431 0030 9A42     		cmp	r2, r3
 1432 0032 09D1     		bne	.L80
 1433              		.loc 1 1367 71 discriminator 1
 1434 0034 FB68     		ldr	r3, [r7, #12]
 1435 0036 1B69     		ldr	r3, [r3, #16]
 1436              		.loc 1 1367 56 discriminator 1
 1437 0038 002B     		cmp	r3, #0
 1438 003a 05D1     		bne	.L80
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 1439              		.loc 1 1369 13
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 50


 1440 003c BB68     		ldr	r3, [r7, #8]
 1441              		.loc 1 1369 30
 1442 003e 0122     		movs	r2, #1
 1443 0040 1340     		ands	r3, r2
 1444              		.loc 1 1369 10
 1445 0042 01D0     		beq	.L80
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 1446              		.loc 1 1371 17
 1447 0044 0123     		movs	r3, #1
 1448 0046 43E0     		b	.L79
 1449              	.L80:
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1450              		.loc 1 1375 24
 1451 0048 FB68     		ldr	r3, [r7, #12]
 1452 004a BA68     		ldr	r2, [r7, #8]
 1453 004c DA64     		str	r2, [r3, #76]
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1454              		.loc 1 1376 24
 1455 004e FB68     		ldr	r3, [r7, #12]
 1456 0050 BA1D     		adds	r2, r7, #6
 1457 0052 5021     		movs	r1, #80
 1458 0054 1288     		ldrh	r2, [r2]
 1459 0056 5A52     		strh	r2, [r3, r1]
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 1460              		.loc 1 1377 24
 1461 0058 FB68     		ldr	r3, [r7, #12]
 1462 005a BA1D     		adds	r2, r7, #6
 1463 005c 5221     		movs	r1, #82
 1464 005e 1288     		ldrh	r2, [r2]
 1465 0060 5A52     		strh	r2, [r3, r1]
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxISR       = NULL;
 1466              		.loc 1 1378 24
 1467 0062 FB68     		ldr	r3, [r7, #12]
 1468 0064 0022     		movs	r2, #0
 1469 0066 DA66     		str	r2, [r3, #108]
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1470              		.loc 1 1380 22
 1471 0068 FB68     		ldr	r3, [r7, #12]
 1472 006a 8422     		movs	r2, #132
 1473 006c 0021     		movs	r1, #0
 1474 006e 9950     		str	r1, [r3, r2]
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1475              		.loc 1 1381 19
 1476 0070 FB68     		ldr	r3, [r7, #12]
 1477 0072 2122     		movs	r2, #33
 1478 0074 DA67     		str	r2, [r3, #124]
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1479              		.loc 1 1384 21
 1480 0076 FB68     		ldr	r3, [r7, #12]
 1481 0078 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 51


 1482              		.loc 1 1384 8
 1483 007a 8023     		movs	r3, #128
 1484 007c 5B01     		lsls	r3, r3, #5
 1485 007e 9A42     		cmp	r2, r3
 1486 0080 07D1     		bne	.L81
 1487              		.loc 1 1384 71 discriminator 1
 1488 0082 FB68     		ldr	r3, [r7, #12]
 1489 0084 1B69     		ldr	r3, [r3, #16]
 1490              		.loc 1 1384 56 discriminator 1
 1491 0086 002B     		cmp	r3, #0
 1492 0088 03D1     		bne	.L81
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
 1493              		.loc 1 1386 20
 1494 008a FB68     		ldr	r3, [r7, #12]
 1495 008c 124A     		ldr	r2, .L84
 1496 008e DA66     		str	r2, [r3, #108]
 1497 0090 02E0     		b	.L82
 1498              	.L81:
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
 1499              		.loc 1 1390 20
 1500 0092 FB68     		ldr	r3, [r7, #12]
 1501 0094 114A     		ldr	r2, .L84+4
 1502 0096 DA66     		str	r2, [r3, #108]
 1503              	.L82:
 1504              	.LBB578:
 1505              	.LBB579:
 1506              	.LBB580:
 1507              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 52


  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 53


  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 54


 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 55


 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 56


 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 57


 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 58


 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 1508              		.loc 2 386 3
 1509              		.syntax divided
 1510              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1511 0098 EFF31083 		MRS r3, primask
 1512              	@ 0 "" 2
 1513              		.thumb
 1514              		.syntax unified
 1515 009c 3B61     		str	r3, [r7, #16]
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1516              		.loc 2 387 9
 1517 009e 3B69     		ldr	r3, [r7, #16]
 1518              	.LBE580:
 1519              	.LBE579:
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 1520              		.loc 1 1394 5
 1521 00a0 FB61     		str	r3, [r7, #28]
 1522 00a2 0123     		movs	r3, #1
 1523 00a4 7B61     		str	r3, [r7, #20]
 1524              	.LBB581:
 1525              	.LBB582:
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 59


 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 1526              		.loc 2 414 3
 1527 00a6 7B69     		ldr	r3, [r7, #20]
 1528              		.syntax divided
 1529              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1530 00a8 83F31088 		MSR primask, r3
 1531              	@ 0 "" 2
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1532              		.loc 2 415 1
 1533              		.thumb
 1534              		.syntax unified
 1535 00ac C046     		nop
 1536              	.LBE582:
 1537              	.LBE581:
 1538              		.loc 1 1394 5
 1539 00ae FB68     		ldr	r3, [r7, #12]
 1540 00b0 1B68     		ldr	r3, [r3]
 1541 00b2 1A68     		ldr	r2, [r3]
 1542 00b4 FB68     		ldr	r3, [r7, #12]
 1543 00b6 1B68     		ldr	r3, [r3]
 1544 00b8 8021     		movs	r1, #128
 1545 00ba 0A43     		orrs	r2, r1
 1546 00bc 1A60     		str	r2, [r3]
 1547 00be FB69     		ldr	r3, [r7, #28]
 1548 00c0 BB61     		str	r3, [r7, #24]
 1549              	.LBB583:
 1550              	.LBB584:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1551              		.loc 2 414 3
 1552 00c2 BB69     		ldr	r3, [r7, #24]
 1553              		.syntax divided
 1554              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1555 00c4 83F31088 		MSR primask, r3
 1556              	@ 0 "" 2
 1557              		.loc 2 415 1
 1558              		.thumb
 1559              		.syntax unified
 1560 00c8 C046     		nop
 1561              	.LBE584:
 1562              	.LBE583:
 1563              	.LBE578:
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 1564              		.loc 1 1396 12
 1565 00ca 0023     		movs	r3, #0
 1566 00cc 00E0     		b	.L79
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 60


 1567              	.L76:
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 1568              		.loc 1 1400 12
 1569 00ce 0223     		movs	r3, #2
 1570              	.L79:
1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1571              		.loc 1 1402 1
 1572 00d0 1800     		movs	r0, r3
 1573 00d2 BD46     		mov	sp, r7
 1574 00d4 08B0     		add	sp, sp, #32
 1575              		@ sp needed
 1576 00d6 80BD     		pop	{r7, pc}
 1577              	.L85:
 1578              		.align	2
 1579              	.L84:
 1580 00d8 00000000 		.word	UART_TxISR_16BIT
 1581 00dc 00000000 		.word	UART_TxISR_8BIT
 1582              		.cfi_endproc
 1583              	.LFE49:
 1585              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1586              		.align	1
 1587              		.global	HAL_UART_Receive_IT
 1588              		.syntax unified
 1589              		.code	16
 1590              		.thumb_func
 1592              	HAL_UART_Receive_IT:
 1593              	.LFB50:
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 available through pData.
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (16 bits) (as received data will be handled using u16 pointer cast). Depending on compi
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1594              		.loc 1 1420 1
 1595              		.cfi_startproc
 1596              		@ args = 0, pretend = 0, frame = 32
 1597              		@ frame_needed = 1, uses_anonymous_args = 0
 1598 0000 80B5     		push	{r7, lr}
 1599              	.LCFI30:
 1600              		.cfi_def_cfa_offset 8
 1601              		.cfi_offset 7, -8
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 61


 1602              		.cfi_offset 14, -4
 1603 0002 88B0     		sub	sp, sp, #32
 1604              	.LCFI31:
 1605              		.cfi_def_cfa_offset 40
 1606 0004 00AF     		add	r7, sp, #0
 1607              	.LCFI32:
 1608              		.cfi_def_cfa_register 7
 1609 0006 F860     		str	r0, [r7, #12]
 1610 0008 B960     		str	r1, [r7, #8]
 1611 000a BB1D     		adds	r3, r7, #6
 1612 000c 1A80     		strh	r2, [r3]
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1613              		.loc 1 1422 12
 1614 000e FB68     		ldr	r3, [r7, #12]
 1615 0010 8022     		movs	r2, #128
 1616 0012 9B58     		ldr	r3, [r3, r2]
 1617              		.loc 1 1422 6
 1618 0014 202B     		cmp	r3, #32
 1619 0016 45D1     		bne	.L87
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1620              		.loc 1 1424 8
 1621 0018 BB68     		ldr	r3, [r7, #8]
 1622 001a 002B     		cmp	r3, #0
 1623 001c 03D0     		beq	.L88
 1624              		.loc 1 1424 25 discriminator 1
 1625 001e BB1D     		adds	r3, r7, #6
 1626 0020 1B88     		ldrh	r3, [r3]
 1627 0022 002B     		cmp	r3, #0
 1628 0024 01D1     		bne	.L89
 1629              	.L88:
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 1630              		.loc 1 1426 14
 1631 0026 0123     		movs	r3, #1
 1632 0028 3DE0     		b	.L90
 1633              	.L89:
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1634              		.loc 1 1432 21
 1635 002a FB68     		ldr	r3, [r7, #12]
 1636 002c 9A68     		ldr	r2, [r3, #8]
 1637              		.loc 1 1432 8
 1638 002e 8023     		movs	r3, #128
 1639 0030 5B01     		lsls	r3, r3, #5
 1640 0032 9A42     		cmp	r2, r3
 1641 0034 09D1     		bne	.L91
 1642              		.loc 1 1432 71 discriminator 1
 1643 0036 FB68     		ldr	r3, [r7, #12]
 1644 0038 1B69     		ldr	r3, [r3, #16]
 1645              		.loc 1 1432 56 discriminator 1
 1646 003a 002B     		cmp	r3, #0
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 62


 1647 003c 05D1     		bne	.L91
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 1648              		.loc 1 1434 13
 1649 003e BB68     		ldr	r3, [r7, #8]
 1650              		.loc 1 1434 30
 1651 0040 0122     		movs	r2, #1
 1652 0042 1340     		ands	r3, r2
 1653              		.loc 1 1434 10
 1654 0044 01D0     		beq	.L91
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 1655              		.loc 1 1436 17
 1656 0046 0123     		movs	r3, #1
 1657 0048 2DE0     		b	.L90
 1658              	.L91:
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1659              		.loc 1 1441 26
 1660 004a FB68     		ldr	r3, [r7, #12]
 1661 004c 0022     		movs	r2, #0
 1662 004e 1A66     		str	r2, [r3, #96]
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check that USART RTOEN bit is set */
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 1663              		.loc 1 1444 9
 1664 0050 FB68     		ldr	r3, [r7, #12]
 1665 0052 1B68     		ldr	r3, [r3]
 1666 0054 5A68     		ldr	r2, [r3, #4]
 1667 0056 8023     		movs	r3, #128
 1668 0058 1B04     		lsls	r3, r3, #16
 1669 005a 1340     		ands	r3, r2
 1670              		.loc 1 1444 8
 1671 005c 19D0     		beq	.L92
 1672              	.LBB585:
 1673              	.LBB586:
 1674              	.LBB587:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1675              		.loc 2 386 3
 1676              		.syntax divided
 1677              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1678 005e EFF31083 		MRS r3, primask
 1679              	@ 0 "" 2
 1680              		.thumb
 1681              		.syntax unified
 1682 0062 3B61     		str	r3, [r7, #16]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1683              		.loc 2 387 9
 1684 0064 3B69     		ldr	r3, [r7, #16]
 1685              	.LBE587:
 1686              	.LBE586:
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Receiver Timeout Interrupt */
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 63


 1687              		.loc 1 1447 7
 1688 0066 FB61     		str	r3, [r7, #28]
 1689 0068 0123     		movs	r3, #1
 1690 006a 7B61     		str	r3, [r7, #20]
 1691              	.LBB588:
 1692              	.LBB589:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1693              		.loc 2 414 3
 1694 006c 7B69     		ldr	r3, [r7, #20]
 1695              		.syntax divided
 1696              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1697 006e 83F31088 		MSR primask, r3
 1698              	@ 0 "" 2
 1699              		.loc 2 415 1
 1700              		.thumb
 1701              		.syntax unified
 1702 0072 C046     		nop
 1703              	.LBE589:
 1704              	.LBE588:
 1705              		.loc 1 1447 7
 1706 0074 FB68     		ldr	r3, [r7, #12]
 1707 0076 1B68     		ldr	r3, [r3]
 1708 0078 1A68     		ldr	r2, [r3]
 1709 007a FB68     		ldr	r3, [r7, #12]
 1710 007c 1B68     		ldr	r3, [r3]
 1711 007e 8021     		movs	r1, #128
 1712 0080 C904     		lsls	r1, r1, #19
 1713 0082 0A43     		orrs	r2, r1
 1714 0084 1A60     		str	r2, [r3]
 1715 0086 FB69     		ldr	r3, [r7, #28]
 1716 0088 BB61     		str	r3, [r7, #24]
 1717              	.LBB590:
 1718              	.LBB591:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1719              		.loc 2 414 3
 1720 008a BB69     		ldr	r3, [r7, #24]
 1721              		.syntax divided
 1722              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1723 008c 83F31088 		MSR primask, r3
 1724              	@ 0 "" 2
 1725              		.loc 2 415 1
 1726              		.thumb
 1727              		.syntax unified
 1728 0090 C046     		nop
 1729              	.L92:
 1730              	.LBE591:
 1731              	.LBE590:
 1732              	.LBE585:
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
 1733              		.loc 1 1450 13
 1734 0092 BB1D     		adds	r3, r7, #6
 1735 0094 1A88     		ldrh	r2, [r3]
 1736 0096 B968     		ldr	r1, [r7, #8]
 1737 0098 FB68     		ldr	r3, [r7, #12]
 1738 009a 1800     		movs	r0, r3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 64


 1739 009c FFF7FEFF 		bl	UART_Start_Receive_IT
 1740 00a0 0300     		movs	r3, r0
 1741 00a2 00E0     		b	.L90
 1742              	.L87:
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 1743              		.loc 1 1454 12
 1744 00a4 0223     		movs	r3, #2
 1745              	.L90:
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1746              		.loc 1 1456 1
 1747 00a6 1800     		movs	r0, r3
 1748 00a8 BD46     		mov	sp, r7
 1749 00aa 08B0     		add	sp, sp, #32
 1750              		@ sp needed
 1751 00ac 80BD     		pop	{r7, pc}
 1752              		.cfi_endproc
 1753              	.LFE50:
 1755              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1756              		.align	1
 1757              		.global	HAL_UART_Transmit_DMA
 1758              		.syntax unified
 1759              		.code	16
 1760              		.thumb_func
 1762              	HAL_UART_Transmit_DMA:
 1763              	.LFB51:
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 provided through pData.
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled by DMA from halfword frontier). Depending on compilation 
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t S
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1764              		.loc 1 1474 1
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 32
 1767              		@ frame_needed = 1, uses_anonymous_args = 0
 1768 0000 80B5     		push	{r7, lr}
 1769              	.LCFI33:
 1770              		.cfi_def_cfa_offset 8
 1771              		.cfi_offset 7, -8
 1772              		.cfi_offset 14, -4
 1773 0002 88B0     		sub	sp, sp, #32
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 65


 1774              	.LCFI34:
 1775              		.cfi_def_cfa_offset 40
 1776 0004 00AF     		add	r7, sp, #0
 1777              	.LCFI35:
 1778              		.cfi_def_cfa_register 7
 1779 0006 F860     		str	r0, [r7, #12]
 1780 0008 B960     		str	r1, [r7, #8]
 1781 000a BB1D     		adds	r3, r7, #6
 1782 000c 1A80     		strh	r2, [r3]
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1783              		.loc 1 1476 12
 1784 000e FB68     		ldr	r3, [r7, #12]
 1785 0010 DB6F     		ldr	r3, [r3, #124]
 1786              		.loc 1 1476 6
 1787 0012 202B     		cmp	r3, #32
 1788 0014 00D0     		beq	.LCB1491
 1789 0016 77E0     		b	.L95	@long jump
 1790              	.LCB1491:
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1791              		.loc 1 1478 8
 1792 0018 BB68     		ldr	r3, [r7, #8]
 1793 001a 002B     		cmp	r3, #0
 1794 001c 03D0     		beq	.L96
 1795              		.loc 1 1478 25 discriminator 1
 1796 001e BB1D     		adds	r3, r7, #6
 1797 0020 1B88     		ldrh	r3, [r3]
 1798 0022 002B     		cmp	r3, #0
 1799 0024 01D1     		bne	.L97
 1800              	.L96:
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 1801              		.loc 1 1480 14
 1802 0026 0123     		movs	r3, #1
 1803 0028 6FE0     		b	.L98
 1804              	.L97:
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1805              		.loc 1 1486 21
 1806 002a FB68     		ldr	r3, [r7, #12]
 1807 002c 9A68     		ldr	r2, [r3, #8]
 1808              		.loc 1 1486 8
 1809 002e 8023     		movs	r3, #128
 1810 0030 5B01     		lsls	r3, r3, #5
 1811 0032 9A42     		cmp	r2, r3
 1812 0034 09D1     		bne	.L99
 1813              		.loc 1 1486 71 discriminator 1
 1814 0036 FB68     		ldr	r3, [r7, #12]
 1815 0038 1B69     		ldr	r3, [r3, #16]
 1816              		.loc 1 1486 56 discriminator 1
 1817 003a 002B     		cmp	r3, #0
 1818 003c 05D1     		bne	.L99
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 66


1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 1819              		.loc 1 1488 13
 1820 003e BB68     		ldr	r3, [r7, #8]
 1821              		.loc 1 1488 30
 1822 0040 0122     		movs	r2, #1
 1823 0042 1340     		ands	r3, r2
 1824              		.loc 1 1488 10
 1825 0044 01D0     		beq	.L99
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 1826              		.loc 1 1490 17
 1827 0046 0123     		movs	r3, #1
 1828 0048 5FE0     		b	.L98
 1829              	.L99:
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1830              		.loc 1 1494 24
 1831 004a FB68     		ldr	r3, [r7, #12]
 1832 004c BA68     		ldr	r2, [r7, #8]
 1833 004e DA64     		str	r2, [r3, #76]
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1834              		.loc 1 1495 24
 1835 0050 FB68     		ldr	r3, [r7, #12]
 1836 0052 BA1D     		adds	r2, r7, #6
 1837 0054 5021     		movs	r1, #80
 1838 0056 1288     		ldrh	r2, [r2]
 1839 0058 5A52     		strh	r2, [r3, r1]
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 1840              		.loc 1 1496 24
 1841 005a FB68     		ldr	r3, [r7, #12]
 1842 005c BA1D     		adds	r2, r7, #6
 1843 005e 5221     		movs	r1, #82
 1844 0060 1288     		ldrh	r2, [r2]
 1845 0062 5A52     		strh	r2, [r3, r1]
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1846              		.loc 1 1498 22
 1847 0064 FB68     		ldr	r3, [r7, #12]
 1848 0066 8422     		movs	r2, #132
 1849 0068 0021     		movs	r1, #0
 1850 006a 9950     		str	r1, [r3, r2]
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1851              		.loc 1 1499 19
 1852 006c FB68     		ldr	r3, [r7, #12]
 1853 006e 2122     		movs	r2, #33
 1854 0070 DA67     		str	r2, [r3, #124]
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 1855              		.loc 1 1501 14
 1856 0072 FB68     		ldr	r3, [r7, #12]
 1857 0074 1B6F     		ldr	r3, [r3, #112]
 1858              		.loc 1 1501 8
 1859 0076 002B     		cmp	r3, #0
 1860 0078 27D0     		beq	.L100
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 67


1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1861              		.loc 1 1504 12
 1862 007a FB68     		ldr	r3, [r7, #12]
 1863 007c 1B6F     		ldr	r3, [r3, #112]
 1864              		.loc 1 1504 39
 1865 007e 254A     		ldr	r2, .L102
 1866 0080 9A62     		str	r2, [r3, #40]
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1867              		.loc 1 1507 12
 1868 0082 FB68     		ldr	r3, [r7, #12]
 1869 0084 1B6F     		ldr	r3, [r3, #112]
 1870              		.loc 1 1507 43
 1871 0086 244A     		ldr	r2, .L102+4
 1872 0088 DA62     		str	r2, [r3, #44]
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the DMA error callback */
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
 1873              		.loc 1 1510 12
 1874 008a FB68     		ldr	r3, [r7, #12]
 1875 008c 1B6F     		ldr	r3, [r3, #112]
 1876              		.loc 1 1510 40
 1877 008e 234A     		ldr	r2, .L102+8
 1878 0090 1A63     		str	r2, [r3, #48]
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the DMA abort callback */
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 1879              		.loc 1 1513 12
 1880 0092 FB68     		ldr	r3, [r7, #12]
 1881 0094 1B6F     		ldr	r3, [r3, #112]
 1882              		.loc 1 1513 40
 1883 0096 0022     		movs	r2, #0
 1884 0098 5A63     		str	r2, [r3, #52]
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
 1885              		.loc 1 1516 11
 1886 009a FB68     		ldr	r3, [r7, #12]
 1887 009c 186F     		ldr	r0, [r3, #112]
 1888              		.loc 1 1516 58
 1889 009e FB68     		ldr	r3, [r7, #12]
 1890 00a0 DB6C     		ldr	r3, [r3, #76]
 1891              		.loc 1 1516 11
 1892 00a2 1900     		movs	r1, r3
 1893              		.loc 1 1516 88
 1894 00a4 FB68     		ldr	r3, [r7, #12]
 1895 00a6 1B68     		ldr	r3, [r3]
 1896              		.loc 1 1516 82
 1897 00a8 2833     		adds	r3, r3, #40
 1898              		.loc 1 1516 11
 1899 00aa 1A00     		movs	r2, r3
 1900 00ac BB1D     		adds	r3, r7, #6
 1901 00ae 1B88     		ldrh	r3, [r3]
 1902 00b0 FFF7FEFF 		bl	HAL_DMA_Start_IT
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 68


 1903 00b4 031E     		subs	r3, r0, #0
 1904              		.loc 1 1516 10
 1905 00b6 08D0     		beq	.L100
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Set error code to DMA */
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 1906              		.loc 1 1519 26
 1907 00b8 FB68     		ldr	r3, [r7, #12]
 1908 00ba 8422     		movs	r2, #132
 1909 00bc 1021     		movs	r1, #16
 1910 00be 9950     		str	r1, [r3, r2]
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Restore huart->gState to ready */
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 1911              		.loc 1 1522 23
 1912 00c0 FB68     		ldr	r3, [r7, #12]
 1913 00c2 2022     		movs	r2, #32
 1914 00c4 DA67     		str	r2, [r3, #124]
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_ERROR;
 1915              		.loc 1 1524 16
 1916 00c6 0123     		movs	r3, #1
 1917 00c8 1FE0     		b	.L98
 1918              	.L100:
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 1919              		.loc 1 1528 5
 1920 00ca FB68     		ldr	r3, [r7, #12]
 1921 00cc 1B68     		ldr	r3, [r3]
 1922 00ce 4022     		movs	r2, #64
 1923 00d0 1A62     		str	r2, [r3, #32]
 1924              	.LBB592:
 1925              	.LBB593:
 1926              	.LBB594:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1927              		.loc 2 386 3
 1928              		.syntax divided
 1929              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1930 00d2 EFF31083 		MRS r3, primask
 1931              	@ 0 "" 2
 1932              		.thumb
 1933              		.syntax unified
 1934 00d6 3B61     		str	r3, [r7, #16]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1935              		.loc 2 387 9
 1936 00d8 3B69     		ldr	r3, [r7, #16]
 1937              	.LBE594:
 1938              	.LBE593:
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in the UART CR3 register */
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1939              		.loc 1 1532 5
 1940 00da FB61     		str	r3, [r7, #28]
 1941 00dc 0123     		movs	r3, #1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 69


 1942 00de 7B61     		str	r3, [r7, #20]
 1943              	.LBB595:
 1944              	.LBB596:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1945              		.loc 2 414 3
 1946 00e0 7B69     		ldr	r3, [r7, #20]
 1947              		.syntax divided
 1948              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1949 00e2 83F31088 		MSR primask, r3
 1950              	@ 0 "" 2
 1951              		.loc 2 415 1
 1952              		.thumb
 1953              		.syntax unified
 1954 00e6 C046     		nop
 1955              	.LBE596:
 1956              	.LBE595:
 1957              		.loc 1 1532 5
 1958 00e8 FB68     		ldr	r3, [r7, #12]
 1959 00ea 1B68     		ldr	r3, [r3]
 1960 00ec 9A68     		ldr	r2, [r3, #8]
 1961 00ee FB68     		ldr	r3, [r7, #12]
 1962 00f0 1B68     		ldr	r3, [r3]
 1963 00f2 8021     		movs	r1, #128
 1964 00f4 0A43     		orrs	r2, r1
 1965 00f6 9A60     		str	r2, [r3, #8]
 1966 00f8 FB69     		ldr	r3, [r7, #28]
 1967 00fa BB61     		str	r3, [r7, #24]
 1968              	.LBB597:
 1969              	.LBB598:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1970              		.loc 2 414 3
 1971 00fc BB69     		ldr	r3, [r7, #24]
 1972              		.syntax divided
 1973              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1974 00fe 83F31088 		MSR primask, r3
 1975              	@ 0 "" 2
 1976              		.loc 2 415 1
 1977              		.thumb
 1978              		.syntax unified
 1979 0102 C046     		nop
 1980              	.LBE598:
 1981              	.LBE597:
 1982              	.LBE592:
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 1983              		.loc 1 1534 12
 1984 0104 0023     		movs	r3, #0
 1985 0106 00E0     		b	.L98
 1986              	.L95:
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 1987              		.loc 1 1538 12
 1988 0108 0223     		movs	r3, #2
 1989              	.L98:
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 70


1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1990              		.loc 1 1540 1
 1991 010a 1800     		movs	r0, r3
 1992 010c BD46     		mov	sp, r7
 1993 010e 08B0     		add	sp, sp, #32
 1994              		@ sp needed
 1995 0110 80BD     		pop	{r7, pc}
 1996              	.L103:
 1997 0112 C046     		.align	2
 1998              	.L102:
 1999 0114 00000000 		.word	UART_DMATransmitCplt
 2000 0118 00000000 		.word	UART_DMATxHalfCplt
 2001 011c 00000000 		.word	UART_DMAError
 2002              		.cfi_endproc
 2003              	.LFE51:
 2005              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 2006              		.align	1
 2007              		.global	HAL_UART_Receive_DMA
 2008              		.syntax unified
 2009              		.code	16
 2010              		.thumb_func
 2012              	HAL_UART_Receive_DMA:
 2013              	.LFB52:
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the parity bit (MSB position).
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         of u16 available through pData.
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (16 bits) (as received data will be handled by DMA from halfword frontier). Depending o
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         to ensure proper alignment for pData.
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2014              		.loc 1 1560 1
 2015              		.cfi_startproc
 2016              		@ args = 0, pretend = 0, frame = 32
 2017              		@ frame_needed = 1, uses_anonymous_args = 0
 2018 0000 80B5     		push	{r7, lr}
 2019              	.LCFI36:
 2020              		.cfi_def_cfa_offset 8
 2021              		.cfi_offset 7, -8
 2022              		.cfi_offset 14, -4
 2023 0002 88B0     		sub	sp, sp, #32
 2024              	.LCFI37:
 2025              		.cfi_def_cfa_offset 40
 2026 0004 00AF     		add	r7, sp, #0
 2027              	.LCFI38:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 71


 2028              		.cfi_def_cfa_register 7
 2029 0006 F860     		str	r0, [r7, #12]
 2030 0008 B960     		str	r1, [r7, #8]
 2031 000a BB1D     		adds	r3, r7, #6
 2032 000c 1A80     		strh	r2, [r3]
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2033              		.loc 1 1562 12
 2034 000e FB68     		ldr	r3, [r7, #12]
 2035 0010 8022     		movs	r2, #128
 2036 0012 9B58     		ldr	r3, [r3, r2]
 2037              		.loc 1 1562 6
 2038 0014 202B     		cmp	r3, #32
 2039 0016 45D1     		bne	.L105
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2040              		.loc 1 1564 8
 2041 0018 BB68     		ldr	r3, [r7, #8]
 2042 001a 002B     		cmp	r3, #0
 2043 001c 03D0     		beq	.L106
 2044              		.loc 1 1564 25 discriminator 1
 2045 001e BB1D     		adds	r3, r7, #6
 2046 0020 1B88     		ldrh	r3, [r3]
 2047 0022 002B     		cmp	r3, #0
 2048 0024 01D1     		bne	.L107
 2049              	.L106:
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 2050              		.loc 1 1566 14
 2051 0026 0123     		movs	r3, #1
 2052 0028 3DE0     		b	.L108
 2053              	.L107:
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 2054              		.loc 1 1572 21
 2055 002a FB68     		ldr	r3, [r7, #12]
 2056 002c 9A68     		ldr	r2, [r3, #8]
 2057              		.loc 1 1572 8
 2058 002e 8023     		movs	r3, #128
 2059 0030 5B01     		lsls	r3, r3, #5
 2060 0032 9A42     		cmp	r2, r3
 2061 0034 09D1     		bne	.L109
 2062              		.loc 1 1572 71 discriminator 1
 2063 0036 FB68     		ldr	r3, [r7, #12]
 2064 0038 1B69     		ldr	r3, [r3, #16]
 2065              		.loc 1 1572 56 discriminator 1
 2066 003a 002B     		cmp	r3, #0
 2067 003c 05D1     		bne	.L109
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 2068              		.loc 1 1574 13
 2069 003e BB68     		ldr	r3, [r7, #8]
 2070              		.loc 1 1574 30
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 72


 2071 0040 0122     		movs	r2, #1
 2072 0042 1340     		ands	r3, r2
 2073              		.loc 1 1574 10
 2074 0044 01D0     		beq	.L109
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 2075              		.loc 1 1576 17
 2076 0046 0123     		movs	r3, #1
 2077 0048 2DE0     		b	.L108
 2078              	.L109:
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2079              		.loc 1 1581 26
 2080 004a FB68     		ldr	r3, [r7, #12]
 2081 004c 0022     		movs	r2, #0
 2082 004e 1A66     		str	r2, [r3, #96]
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check that USART RTOEN bit is set */
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 2083              		.loc 1 1584 9
 2084 0050 FB68     		ldr	r3, [r7, #12]
 2085 0052 1B68     		ldr	r3, [r3]
 2086 0054 5A68     		ldr	r2, [r3, #4]
 2087 0056 8023     		movs	r3, #128
 2088 0058 1B04     		lsls	r3, r3, #16
 2089 005a 1340     		ands	r3, r2
 2090              		.loc 1 1584 8
 2091 005c 19D0     		beq	.L110
 2092              	.LBB599:
 2093              	.LBB600:
 2094              	.LBB601:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2095              		.loc 2 386 3
 2096              		.syntax divided
 2097              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2098 005e EFF31083 		MRS r3, primask
 2099              	@ 0 "" 2
 2100              		.thumb
 2101              		.syntax unified
 2102 0062 3B61     		str	r3, [r7, #16]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2103              		.loc 2 387 9
 2104 0064 3B69     		ldr	r3, [r7, #16]
 2105              	.LBE601:
 2106              	.LBE600:
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Receiver Timeout Interrupt */
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 2107              		.loc 1 1587 7
 2108 0066 FB61     		str	r3, [r7, #28]
 2109 0068 0123     		movs	r3, #1
 2110 006a 7B61     		str	r3, [r7, #20]
 2111              	.LBB602:
 2112              	.LBB603:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 73


 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2113              		.loc 2 414 3
 2114 006c 7B69     		ldr	r3, [r7, #20]
 2115              		.syntax divided
 2116              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2117 006e 83F31088 		MSR primask, r3
 2118              	@ 0 "" 2
 2119              		.loc 2 415 1
 2120              		.thumb
 2121              		.syntax unified
 2122 0072 C046     		nop
 2123              	.LBE603:
 2124              	.LBE602:
 2125              		.loc 1 1587 7
 2126 0074 FB68     		ldr	r3, [r7, #12]
 2127 0076 1B68     		ldr	r3, [r3]
 2128 0078 1A68     		ldr	r2, [r3]
 2129 007a FB68     		ldr	r3, [r7, #12]
 2130 007c 1B68     		ldr	r3, [r3]
 2131 007e 8021     		movs	r1, #128
 2132 0080 C904     		lsls	r1, r1, #19
 2133 0082 0A43     		orrs	r2, r1
 2134 0084 1A60     		str	r2, [r3]
 2135 0086 FB69     		ldr	r3, [r7, #28]
 2136 0088 BB61     		str	r3, [r7, #24]
 2137              	.LBB604:
 2138              	.LBB605:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2139              		.loc 2 414 3
 2140 008a BB69     		ldr	r3, [r7, #24]
 2141              		.syntax divided
 2142              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2143 008c 83F31088 		MSR primask, r3
 2144              	@ 0 "" 2
 2145              		.loc 2 415 1
 2146              		.thumb
 2147              		.syntax unified
 2148 0090 C046     		nop
 2149              	.L110:
 2150              	.LBE605:
 2151              	.LBE604:
 2152              	.LBE599:
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
 2153              		.loc 1 1590 13
 2154 0092 BB1D     		adds	r3, r7, #6
 2155 0094 1A88     		ldrh	r2, [r3]
 2156 0096 B968     		ldr	r1, [r7, #8]
 2157 0098 FB68     		ldr	r3, [r7, #12]
 2158 009a 1800     		movs	r0, r3
 2159 009c FFF7FEFF 		bl	UART_Start_Receive_DMA
 2160 00a0 0300     		movs	r3, r0
 2161 00a2 00E0     		b	.L108
 2162              	.L105:
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 74


1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 2163              		.loc 1 1594 12
 2164 00a4 0223     		movs	r3, #2
 2165              	.L108:
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2166              		.loc 1 1596 1
 2167 00a6 1800     		movs	r0, r3
 2168 00a8 BD46     		mov	sp, r7
 2169 00aa 08B0     		add	sp, sp, #32
 2170              		@ sp needed
 2171 00ac 80BD     		pop	{r7, pc}
 2172              		.cfi_endproc
 2173              	.LFE52:
 2175              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 2176              		.align	1
 2177              		.global	HAL_UART_DMAPause
 2178              		.syntax unified
 2179              		.code	16
 2180              		.thumb_func
 2182              	HAL_UART_DMAPause:
 2183              	.LFB53:
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2184              		.loc 1 1604 1
 2185              		.cfi_startproc
 2186              		@ args = 0, pretend = 0, frame = 80
 2187              		@ frame_needed = 1, uses_anonymous_args = 0
 2188 0000 80B5     		push	{r7, lr}
 2189              	.LCFI39:
 2190              		.cfi_def_cfa_offset 8
 2191              		.cfi_offset 7, -8
 2192              		.cfi_offset 14, -4
 2193 0002 94B0     		sub	sp, sp, #80
 2194              	.LCFI40:
 2195              		.cfi_def_cfa_offset 88
 2196 0004 00AF     		add	r7, sp, #0
 2197              	.LCFI41:
 2198              		.cfi_def_cfa_register 7
 2199 0006 7860     		str	r0, [r7, #4]
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2200              		.loc 1 1605 31
 2201 0008 7B68     		ldr	r3, [r7, #4]
 2202 000a DB6F     		ldr	r3, [r3, #124]
 2203 000c FB64     		str	r3, [r7, #76]
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2204              		.loc 1 1606 31
 2205 000e 7B68     		ldr	r3, [r7, #4]
 2206 0010 8022     		movs	r2, #128
 2207 0012 9B58     		ldr	r3, [r3, r2]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 75


 2208 0014 BB64     		str	r3, [r7, #72]
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2209              		.loc 1 1608 8
 2210 0016 7B68     		ldr	r3, [r7, #4]
 2211 0018 1B68     		ldr	r3, [r3]
 2212 001a 9B68     		ldr	r3, [r3, #8]
 2213 001c 8022     		movs	r2, #128
 2214 001e 1340     		ands	r3, r2
 2215              		.loc 1 1608 6
 2216 0020 802B     		cmp	r3, #128
 2217 0022 1BD1     		bne	.L113
 2218              		.loc 1 1608 62 discriminator 1
 2219 0024 FB6C     		ldr	r3, [r7, #76]
 2220 0026 212B     		cmp	r3, #33
 2221 0028 18D1     		bne	.L113
 2222              	.LBB606:
 2223              	.LBB607:
 2224              	.LBB608:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2225              		.loc 2 386 3
 2226              		.syntax divided
 2227              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2228 002a EFF31083 		MRS r3, primask
 2229              	@ 0 "" 2
 2230              		.thumb
 2231              		.syntax unified
 2232 002e FB62     		str	r3, [r7, #44]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2233              		.loc 2 387 9
 2234 0030 FB6A     		ldr	r3, [r7, #44]
 2235              	.LBE608:
 2236              	.LBE607:
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2237              		.loc 1 1612 5
 2238 0032 7B64     		str	r3, [r7, #68]
 2239 0034 0123     		movs	r3, #1
 2240 0036 3B63     		str	r3, [r7, #48]
 2241              	.LBB609:
 2242              	.LBB610:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2243              		.loc 2 414 3
 2244 0038 3B6B     		ldr	r3, [r7, #48]
 2245              		.syntax divided
 2246              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2247 003a 83F31088 		MSR primask, r3
 2248              	@ 0 "" 2
 2249              		.loc 2 415 1
 2250              		.thumb
 2251              		.syntax unified
 2252 003e C046     		nop
 2253              	.LBE610:
 2254              	.LBE609:
 2255              		.loc 1 1612 5
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 76


 2256 0040 7B68     		ldr	r3, [r7, #4]
 2257 0042 1B68     		ldr	r3, [r3]
 2258 0044 9A68     		ldr	r2, [r3, #8]
 2259 0046 7B68     		ldr	r3, [r7, #4]
 2260 0048 1B68     		ldr	r3, [r3]
 2261 004a 8021     		movs	r1, #128
 2262 004c 8A43     		bics	r2, r1
 2263 004e 9A60     		str	r2, [r3, #8]
 2264 0050 7B6C     		ldr	r3, [r7, #68]
 2265 0052 7B63     		str	r3, [r7, #52]
 2266              	.LBB611:
 2267              	.LBB612:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2268              		.loc 2 414 3
 2269 0054 7B6B     		ldr	r3, [r7, #52]
 2270              		.syntax divided
 2271              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2272 0056 83F31088 		MSR primask, r3
 2273              	@ 0 "" 2
 2274              		.loc 2 415 1
 2275              		.thumb
 2276              		.syntax unified
 2277 005a C046     		nop
 2278              	.L113:
 2279              	.LBE612:
 2280              	.LBE611:
 2281              	.LBE606:
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2282              		.loc 1 1614 8
 2283 005c 7B68     		ldr	r3, [r7, #4]
 2284 005e 1B68     		ldr	r3, [r3]
 2285 0060 9B68     		ldr	r3, [r3, #8]
 2286 0062 4022     		movs	r2, #64
 2287 0064 1340     		ands	r3, r2
 2288              		.loc 1 1614 6
 2289 0066 402B     		cmp	r3, #64
 2290 0068 4DD1     		bne	.L115
 2291              		.loc 1 1614 62 discriminator 1
 2292 006a BB6C     		ldr	r3, [r7, #72]
 2293 006c 222B     		cmp	r3, #34
 2294 006e 4AD1     		bne	.L115
 2295              	.LBB613:
 2296              	.LBB614:
 2297              	.LBB615:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2298              		.loc 2 386 3
 2299              		.syntax divided
 2300              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2301 0070 EFF31083 		MRS r3, primask
 2302              	@ 0 "" 2
 2303              		.thumb
 2304              		.syntax unified
 2305 0074 BB60     		str	r3, [r7, #8]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2306              		.loc 2 387 9
 2307 0076 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 77


 2308              	.LBE615:
 2309              	.LBE614:
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2310              		.loc 1 1618 5
 2311 0078 3B64     		str	r3, [r7, #64]
 2312 007a 0123     		movs	r3, #1
 2313 007c FB60     		str	r3, [r7, #12]
 2314              	.LBB616:
 2315              	.LBB617:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2316              		.loc 2 414 3
 2317 007e FB68     		ldr	r3, [r7, #12]
 2318              		.syntax divided
 2319              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2320 0080 83F31088 		MSR primask, r3
 2321              	@ 0 "" 2
 2322              		.loc 2 415 1
 2323              		.thumb
 2324              		.syntax unified
 2325 0084 C046     		nop
 2326              	.LBE617:
 2327              	.LBE616:
 2328              		.loc 1 1618 5
 2329 0086 7B68     		ldr	r3, [r7, #4]
 2330 0088 1B68     		ldr	r3, [r3]
 2331 008a 1A68     		ldr	r2, [r3]
 2332 008c 7B68     		ldr	r3, [r7, #4]
 2333 008e 1B68     		ldr	r3, [r3]
 2334 0090 1F49     		ldr	r1, .L120
 2335 0092 0A40     		ands	r2, r1
 2336 0094 1A60     		str	r2, [r3]
 2337 0096 3B6C     		ldr	r3, [r7, #64]
 2338 0098 3B61     		str	r3, [r7, #16]
 2339              	.LBB618:
 2340              	.LBB619:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2341              		.loc 2 414 3
 2342 009a 3B69     		ldr	r3, [r7, #16]
 2343              		.syntax divided
 2344              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2345 009c 83F31088 		MSR primask, r3
 2346              	@ 0 "" 2
 2347              		.loc 2 415 1
 2348              		.thumb
 2349              		.syntax unified
 2350 00a0 C046     		nop
 2351              	.LBE619:
 2352              	.LBE618:
 2353              	.LBE613:
 2354              	.LBB620:
 2355              	.LBB621:
 2356              	.LBB622:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2357              		.loc 2 386 3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 78


 2358              		.syntax divided
 2359              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2360 00a2 EFF31083 		MRS r3, primask
 2361              	@ 0 "" 2
 2362              		.thumb
 2363              		.syntax unified
 2364 00a6 7B61     		str	r3, [r7, #20]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2365              		.loc 2 387 9
 2366 00a8 7B69     		ldr	r3, [r7, #20]
 2367              	.LBE622:
 2368              	.LBE621:
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2369              		.loc 1 1619 5
 2370 00aa FB63     		str	r3, [r7, #60]
 2371 00ac 0123     		movs	r3, #1
 2372 00ae BB61     		str	r3, [r7, #24]
 2373              	.LBB623:
 2374              	.LBB624:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2375              		.loc 2 414 3
 2376 00b0 BB69     		ldr	r3, [r7, #24]
 2377              		.syntax divided
 2378              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2379 00b2 83F31088 		MSR primask, r3
 2380              	@ 0 "" 2
 2381              		.loc 2 415 1
 2382              		.thumb
 2383              		.syntax unified
 2384 00b6 C046     		nop
 2385              	.LBE624:
 2386              	.LBE623:
 2387              		.loc 1 1619 5
 2388 00b8 7B68     		ldr	r3, [r7, #4]
 2389 00ba 1B68     		ldr	r3, [r3]
 2390 00bc 9A68     		ldr	r2, [r3, #8]
 2391 00be 7B68     		ldr	r3, [r7, #4]
 2392 00c0 1B68     		ldr	r3, [r3]
 2393 00c2 0121     		movs	r1, #1
 2394 00c4 8A43     		bics	r2, r1
 2395 00c6 9A60     		str	r2, [r3, #8]
 2396 00c8 FB6B     		ldr	r3, [r7, #60]
 2397 00ca FB61     		str	r3, [r7, #28]
 2398              	.LBB625:
 2399              	.LBB626:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2400              		.loc 2 414 3
 2401 00cc FB69     		ldr	r3, [r7, #28]
 2402              		.syntax divided
 2403              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2404 00ce 83F31088 		MSR primask, r3
 2405              	@ 0 "" 2
 2406              		.loc 2 415 1
 2407              		.thumb
 2408              		.syntax unified
 2409 00d2 C046     		nop
 2410              	.LBE626:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 79


 2411              	.LBE625:
 2412              	.LBE620:
 2413              	.LBB627:
 2414              	.LBB628:
 2415              	.LBB629:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2416              		.loc 2 386 3
 2417              		.syntax divided
 2418              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2419 00d4 EFF31083 		MRS r3, primask
 2420              	@ 0 "" 2
 2421              		.thumb
 2422              		.syntax unified
 2423 00d8 3B62     		str	r3, [r7, #32]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2424              		.loc 2 387 9
 2425 00da 3B6A     		ldr	r3, [r7, #32]
 2426              	.LBE629:
 2427              	.LBE628:
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2428              		.loc 1 1622 5
 2429 00dc BB63     		str	r3, [r7, #56]
 2430 00de 0123     		movs	r3, #1
 2431 00e0 7B62     		str	r3, [r7, #36]
 2432              	.LBB630:
 2433              	.LBB631:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2434              		.loc 2 414 3
 2435 00e2 7B6A     		ldr	r3, [r7, #36]
 2436              		.syntax divided
 2437              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2438 00e4 83F31088 		MSR primask, r3
 2439              	@ 0 "" 2
 2440              		.loc 2 415 1
 2441              		.thumb
 2442              		.syntax unified
 2443 00e8 C046     		nop
 2444              	.LBE631:
 2445              	.LBE630:
 2446              		.loc 1 1622 5
 2447 00ea 7B68     		ldr	r3, [r7, #4]
 2448 00ec 1B68     		ldr	r3, [r3]
 2449 00ee 9A68     		ldr	r2, [r3, #8]
 2450 00f0 7B68     		ldr	r3, [r7, #4]
 2451 00f2 1B68     		ldr	r3, [r3]
 2452 00f4 4021     		movs	r1, #64
 2453 00f6 8A43     		bics	r2, r1
 2454 00f8 9A60     		str	r2, [r3, #8]
 2455 00fa BB6B     		ldr	r3, [r7, #56]
 2456 00fc BB62     		str	r3, [r7, #40]
 2457              	.LBB632:
 2458              	.LBB633:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2459              		.loc 2 414 3
 2460 00fe BB6A     		ldr	r3, [r7, #40]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 80


 2461              		.syntax divided
 2462              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2463 0100 83F31088 		MSR primask, r3
 2464              	@ 0 "" 2
 2465              		.loc 2 415 1
 2466              		.thumb
 2467              		.syntax unified
 2468 0104 C046     		nop
 2469              	.L115:
 2470              	.LBE633:
 2471              	.LBE632:
 2472              	.LBE627:
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 2473              		.loc 1 1625 10
 2474 0106 0023     		movs	r3, #0
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2475              		.loc 1 1626 1
 2476 0108 1800     		movs	r0, r3
 2477 010a BD46     		mov	sp, r7
 2478 010c 14B0     		add	sp, sp, #80
 2479              		@ sp needed
 2480 010e 80BD     		pop	{r7, pc}
 2481              	.L121:
 2482              		.align	2
 2483              	.L120:
 2484 0110 FFFEFFFF 		.word	-257
 2485              		.cfi_endproc
 2486              	.LFE53:
 2488              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2489              		.align	1
 2490              		.global	HAL_UART_DMAResume
 2491              		.syntax unified
 2492              		.code	16
 2493              		.thumb_func
 2495              	HAL_UART_DMAResume:
 2496              	.LFB54:
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2497              		.loc 1 1634 1
 2498              		.cfi_startproc
 2499              		@ args = 0, pretend = 0, frame = 72
 2500              		@ frame_needed = 1, uses_anonymous_args = 0
 2501 0000 80B5     		push	{r7, lr}
 2502              	.LCFI42:
 2503              		.cfi_def_cfa_offset 8
 2504              		.cfi_offset 7, -8
 2505              		.cfi_offset 14, -4
 2506 0002 92B0     		sub	sp, sp, #72
 2507              	.LCFI43:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 81


 2508              		.cfi_def_cfa_offset 80
 2509 0004 00AF     		add	r7, sp, #0
 2510              	.LCFI44:
 2511              		.cfi_def_cfa_register 7
 2512 0006 7860     		str	r0, [r7, #4]
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 2513              		.loc 1 1635 12
 2514 0008 7B68     		ldr	r3, [r7, #4]
 2515 000a DB6F     		ldr	r3, [r3, #124]
 2516              		.loc 1 1635 6
 2517 000c 212B     		cmp	r3, #33
 2518 000e 18D1     		bne	.L123
 2519              	.LBB634:
 2520              	.LBB635:
 2521              	.LBB636:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2522              		.loc 2 386 3
 2523              		.syntax divided
 2524              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2525 0010 EFF31083 		MRS r3, primask
 2526              	@ 0 "" 2
 2527              		.thumb
 2528              		.syntax unified
 2529 0014 FB62     		str	r3, [r7, #44]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2530              		.loc 2 387 9
 2531 0016 FB6A     		ldr	r3, [r7, #44]
 2532              	.LBE636:
 2533              	.LBE635:
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2534              		.loc 1 1638 5
 2535 0018 7B64     		str	r3, [r7, #68]
 2536 001a 0123     		movs	r3, #1
 2537 001c 3B63     		str	r3, [r7, #48]
 2538              	.LBB637:
 2539              	.LBB638:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2540              		.loc 2 414 3
 2541 001e 3B6B     		ldr	r3, [r7, #48]
 2542              		.syntax divided
 2543              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2544 0020 83F31088 		MSR primask, r3
 2545              	@ 0 "" 2
 2546              		.loc 2 415 1
 2547              		.thumb
 2548              		.syntax unified
 2549 0024 C046     		nop
 2550              	.LBE638:
 2551              	.LBE637:
 2552              		.loc 1 1638 5
 2553 0026 7B68     		ldr	r3, [r7, #4]
 2554 0028 1B68     		ldr	r3, [r3]
 2555 002a 9A68     		ldr	r2, [r3, #8]
 2556 002c 7B68     		ldr	r3, [r7, #4]
 2557 002e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 82


 2558 0030 8021     		movs	r1, #128
 2559 0032 0A43     		orrs	r2, r1
 2560 0034 9A60     		str	r2, [r3, #8]
 2561 0036 7B6C     		ldr	r3, [r7, #68]
 2562 0038 7B63     		str	r3, [r7, #52]
 2563              	.LBB639:
 2564              	.LBB640:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2565              		.loc 2 414 3
 2566 003a 7B6B     		ldr	r3, [r7, #52]
 2567              		.syntax divided
 2568              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2569 003c 83F31088 		MSR primask, r3
 2570              	@ 0 "" 2
 2571              		.loc 2 415 1
 2572              		.thumb
 2573              		.syntax unified
 2574 0040 C046     		nop
 2575              	.L123:
 2576              	.LBE640:
 2577              	.LBE639:
 2578              	.LBE634:
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2579              		.loc 1 1640 12
 2580 0042 7B68     		ldr	r3, [r7, #4]
 2581 0044 8022     		movs	r2, #128
 2582 0046 9B58     		ldr	r3, [r3, r2]
 2583              		.loc 1 1640 6
 2584 0048 222B     		cmp	r3, #34
 2585 004a 53D1     		bne	.L125
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 2586              		.loc 1 1643 5
 2587 004c 7B68     		ldr	r3, [r7, #4]
 2588 004e 1B68     		ldr	r3, [r3]
 2589 0050 0822     		movs	r2, #8
 2590 0052 1A62     		str	r2, [r3, #32]
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
 2591              		.loc 1 1646 20
 2592 0054 7B68     		ldr	r3, [r7, #4]
 2593 0056 1B69     		ldr	r3, [r3, #16]
 2594              		.loc 1 1646 8
 2595 0058 002B     		cmp	r3, #0
 2596 005a 19D0     		beq	.L126
 2597              	.LBB641:
 2598              	.LBB642:
 2599              	.LBB643:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2600              		.loc 2 386 3
 2601              		.syntax divided
 2602              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2603 005c EFF31083 		MRS r3, primask
 2604              	@ 0 "" 2
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 83


 2605              		.thumb
 2606              		.syntax unified
 2607 0060 3B62     		str	r3, [r7, #32]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2608              		.loc 2 387 9
 2609 0062 3B6A     		ldr	r3, [r7, #32]
 2610              	.LBE643:
 2611              	.LBE642:
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2612              		.loc 1 1648 7
 2613 0064 3B64     		str	r3, [r7, #64]
 2614 0066 0123     		movs	r3, #1
 2615 0068 7B62     		str	r3, [r7, #36]
 2616              	.LBB644:
 2617              	.LBB645:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2618              		.loc 2 414 3
 2619 006a 7B6A     		ldr	r3, [r7, #36]
 2620              		.syntax divided
 2621              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2622 006c 83F31088 		MSR primask, r3
 2623              	@ 0 "" 2
 2624              		.loc 2 415 1
 2625              		.thumb
 2626              		.syntax unified
 2627 0070 C046     		nop
 2628              	.LBE645:
 2629              	.LBE644:
 2630              		.loc 1 1648 7
 2631 0072 7B68     		ldr	r3, [r7, #4]
 2632 0074 1B68     		ldr	r3, [r3]
 2633 0076 1A68     		ldr	r2, [r3]
 2634 0078 7B68     		ldr	r3, [r7, #4]
 2635 007a 1B68     		ldr	r3, [r3]
 2636 007c 8021     		movs	r1, #128
 2637 007e 4900     		lsls	r1, r1, #1
 2638 0080 0A43     		orrs	r2, r1
 2639 0082 1A60     		str	r2, [r3]
 2640 0084 3B6C     		ldr	r3, [r7, #64]
 2641 0086 BB62     		str	r3, [r7, #40]
 2642              	.LBB646:
 2643              	.LBB647:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2644              		.loc 2 414 3
 2645 0088 BB6A     		ldr	r3, [r7, #40]
 2646              		.syntax divided
 2647              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2648 008a 83F31088 		MSR primask, r3
 2649              	@ 0 "" 2
 2650              		.loc 2 415 1
 2651              		.thumb
 2652              		.syntax unified
 2653 008e C046     		nop
 2654              	.L126:
 2655              	.LBE647:
 2656              	.LBE646:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 84


 2657              	.LBE641:
 2658              	.LBB648:
 2659              	.LBB649:
 2660              	.LBB650:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2661              		.loc 2 386 3
 2662              		.syntax divided
 2663              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2664 0090 EFF31083 		MRS r3, primask
 2665              	@ 0 "" 2
 2666              		.thumb
 2667              		.syntax unified
 2668 0094 BB60     		str	r3, [r7, #8]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2669              		.loc 2 387 9
 2670 0096 BB68     		ldr	r3, [r7, #8]
 2671              	.LBE650:
 2672              	.LBE649:
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2673              		.loc 1 1650 5
 2674 0098 FB63     		str	r3, [r7, #60]
 2675 009a 0123     		movs	r3, #1
 2676 009c FB60     		str	r3, [r7, #12]
 2677              	.LBB651:
 2678              	.LBB652:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2679              		.loc 2 414 3
 2680 009e FB68     		ldr	r3, [r7, #12]
 2681              		.syntax divided
 2682              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2683 00a0 83F31088 		MSR primask, r3
 2684              	@ 0 "" 2
 2685              		.loc 2 415 1
 2686              		.thumb
 2687              		.syntax unified
 2688 00a4 C046     		nop
 2689              	.LBE652:
 2690              	.LBE651:
 2691              		.loc 1 1650 5
 2692 00a6 7B68     		ldr	r3, [r7, #4]
 2693 00a8 1B68     		ldr	r3, [r3]
 2694 00aa 9A68     		ldr	r2, [r3, #8]
 2695 00ac 7B68     		ldr	r3, [r7, #4]
 2696 00ae 1B68     		ldr	r3, [r3]
 2697 00b0 0121     		movs	r1, #1
 2698 00b2 0A43     		orrs	r2, r1
 2699 00b4 9A60     		str	r2, [r3, #8]
 2700 00b6 FB6B     		ldr	r3, [r7, #60]
 2701 00b8 3B61     		str	r3, [r7, #16]
 2702              	.LBB653:
 2703              	.LBB654:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2704              		.loc 2 414 3
 2705 00ba 3B69     		ldr	r3, [r7, #16]
 2706              		.syntax divided
 2707              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 85


 2708 00bc 83F31088 		MSR primask, r3
 2709              	@ 0 "" 2
 2710              		.loc 2 415 1
 2711              		.thumb
 2712              		.syntax unified
 2713 00c0 C046     		nop
 2714              	.LBE654:
 2715              	.LBE653:
 2716              	.LBE648:
 2717              	.LBB655:
 2718              	.LBB656:
 2719              	.LBB657:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2720              		.loc 2 386 3
 2721              		.syntax divided
 2722              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2723 00c2 EFF31083 		MRS r3, primask
 2724              	@ 0 "" 2
 2725              		.thumb
 2726              		.syntax unified
 2727 00c6 7B61     		str	r3, [r7, #20]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2728              		.loc 2 387 9
 2729 00c8 7B69     		ldr	r3, [r7, #20]
 2730              	.LBE657:
 2731              	.LBE656:
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2732              		.loc 1 1653 5
 2733 00ca BB63     		str	r3, [r7, #56]
 2734 00cc 0123     		movs	r3, #1
 2735 00ce BB61     		str	r3, [r7, #24]
 2736              	.LBB658:
 2737              	.LBB659:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2738              		.loc 2 414 3
 2739 00d0 BB69     		ldr	r3, [r7, #24]
 2740              		.syntax divided
 2741              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2742 00d2 83F31088 		MSR primask, r3
 2743              	@ 0 "" 2
 2744              		.loc 2 415 1
 2745              		.thumb
 2746              		.syntax unified
 2747 00d6 C046     		nop
 2748              	.LBE659:
 2749              	.LBE658:
 2750              		.loc 1 1653 5
 2751 00d8 7B68     		ldr	r3, [r7, #4]
 2752 00da 1B68     		ldr	r3, [r3]
 2753 00dc 9A68     		ldr	r2, [r3, #8]
 2754 00de 7B68     		ldr	r3, [r7, #4]
 2755 00e0 1B68     		ldr	r3, [r3]
 2756 00e2 4021     		movs	r1, #64
 2757 00e4 0A43     		orrs	r2, r1
 2758 00e6 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 86


 2759 00e8 BB6B     		ldr	r3, [r7, #56]
 2760 00ea FB61     		str	r3, [r7, #28]
 2761              	.LBB660:
 2762              	.LBB661:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2763              		.loc 2 414 3
 2764 00ec FB69     		ldr	r3, [r7, #28]
 2765              		.syntax divided
 2766              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2767 00ee 83F31088 		MSR primask, r3
 2768              	@ 0 "" 2
 2769              		.loc 2 415 1
 2770              		.thumb
 2771              		.syntax unified
 2772 00f2 C046     		nop
 2773              	.L125:
 2774              	.LBE661:
 2775              	.LBE660:
 2776              	.LBE655:
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 2777              		.loc 1 1656 10
 2778 00f4 0023     		movs	r3, #0
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2779              		.loc 1 1657 1
 2780 00f6 1800     		movs	r0, r3
 2781 00f8 BD46     		mov	sp, r7
 2782 00fa 12B0     		add	sp, sp, #72
 2783              		@ sp needed
 2784 00fc 80BD     		pop	{r7, pc}
 2785              		.cfi_endproc
 2786              	.LFE54:
 2788              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2789              		.align	1
 2790              		.global	HAL_UART_DMAStop
 2791              		.syntax unified
 2792              		.code	16
 2793              		.thumb_func
 2795              	HAL_UART_DMAStop:
 2796              	.LFB55:
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2797              		.loc 1 1665 1
 2798              		.cfi_startproc
 2799              		@ args = 0, pretend = 0, frame = 48
 2800              		@ frame_needed = 1, uses_anonymous_args = 0
 2801 0000 80B5     		push	{r7, lr}
 2802              	.LCFI45:
 2803              		.cfi_def_cfa_offset 8
 2804              		.cfi_offset 7, -8
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 87


 2805              		.cfi_offset 14, -4
 2806 0002 8CB0     		sub	sp, sp, #48
 2807              	.LCFI46:
 2808              		.cfi_def_cfa_offset 56
 2809 0004 00AF     		add	r7, sp, #0
 2810              	.LCFI47:
 2811              		.cfi_def_cfa_register 7
 2812 0006 7860     		str	r0, [r7, #4]
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2813              		.loc 1 1673 31
 2814 0008 7B68     		ldr	r3, [r7, #4]
 2815 000a DB6F     		ldr	r3, [r3, #124]
 2816 000c FB62     		str	r3, [r7, #44]
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2817              		.loc 1 1674 31
 2818 000e 7B68     		ldr	r3, [r7, #4]
 2819 0010 8022     		movs	r2, #128
 2820 0012 9B58     		ldr	r3, [r3, r2]
 2821 0014 BB62     		str	r3, [r7, #40]
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2822              		.loc 1 1677 8
 2823 0016 7B68     		ldr	r3, [r7, #4]
 2824 0018 1B68     		ldr	r3, [r3]
 2825 001a 9B68     		ldr	r3, [r3, #8]
 2826 001c 8022     		movs	r2, #128
 2827 001e 1340     		ands	r3, r2
 2828              		.loc 1 1677 6
 2829 0020 802B     		cmp	r3, #128
 2830 0022 38D1     		bne	.L132
 2831              		.loc 1 1677 62 discriminator 1
 2832 0024 FB6A     		ldr	r3, [r7, #44]
 2833 0026 212B     		cmp	r3, #33
 2834 0028 35D1     		bne	.L132
 2835              	.LBB662:
 2836              	.LBB663:
 2837              	.LBB664:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2838              		.loc 2 386 3
 2839              		.syntax divided
 2840              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2841 002a EFF31083 		MRS r3, primask
 2842              	@ 0 "" 2
 2843              		.thumb
 2844              		.syntax unified
 2845 002e 7B61     		str	r3, [r7, #20]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2846              		.loc 2 387 9
 2847 0030 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 88


 2848              	.LBE664:
 2849              	.LBE663:
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2850              		.loc 1 1680 5
 2851 0032 7B62     		str	r3, [r7, #36]
 2852 0034 0123     		movs	r3, #1
 2853 0036 BB61     		str	r3, [r7, #24]
 2854              	.LBB665:
 2855              	.LBB666:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2856              		.loc 2 414 3
 2857 0038 BB69     		ldr	r3, [r7, #24]
 2858              		.syntax divided
 2859              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2860 003a 83F31088 		MSR primask, r3
 2861              	@ 0 "" 2
 2862              		.loc 2 415 1
 2863              		.thumb
 2864              		.syntax unified
 2865 003e C046     		nop
 2866              	.LBE666:
 2867              	.LBE665:
 2868              		.loc 1 1680 5
 2869 0040 7B68     		ldr	r3, [r7, #4]
 2870 0042 1B68     		ldr	r3, [r3]
 2871 0044 9A68     		ldr	r2, [r3, #8]
 2872 0046 7B68     		ldr	r3, [r7, #4]
 2873 0048 1B68     		ldr	r3, [r3]
 2874 004a 8021     		movs	r1, #128
 2875 004c 8A43     		bics	r2, r1
 2876 004e 9A60     		str	r2, [r3, #8]
 2877 0050 7B6A     		ldr	r3, [r7, #36]
 2878 0052 FB61     		str	r3, [r7, #28]
 2879              	.LBB667:
 2880              	.LBB668:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2881              		.loc 2 414 3
 2882 0054 FB69     		ldr	r3, [r7, #28]
 2883              		.syntax divided
 2884              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2885 0056 83F31088 		MSR primask, r3
 2886              	@ 0 "" 2
 2887              		.loc 2 415 1
 2888              		.thumb
 2889              		.syntax unified
 2890 005a C046     		nop
 2891              	.LBE668:
 2892              	.LBE667:
 2893              	.LBE662:
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2894              		.loc 1 1683 14
 2895 005c 7B68     		ldr	r3, [r7, #4]
 2896 005e 1B6F     		ldr	r3, [r3, #112]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 89


 2897              		.loc 1 1683 8
 2898 0060 002B     		cmp	r3, #0
 2899 0062 14D0     		beq	.L134
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2900              		.loc 1 1685 11
 2901 0064 7B68     		ldr	r3, [r7, #4]
 2902 0066 1B6F     		ldr	r3, [r3, #112]
 2903 0068 1800     		movs	r0, r3
 2904 006a FFF7FEFF 		bl	HAL_DMA_Abort
 2905 006e 031E     		subs	r3, r0, #0
 2906              		.loc 1 1685 10
 2907 0070 0DD0     		beq	.L134
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2908              		.loc 1 1687 13
 2909 0072 7B68     		ldr	r3, [r7, #4]
 2910 0074 1B6F     		ldr	r3, [r3, #112]
 2911 0076 1800     		movs	r0, r3
 2912 0078 FFF7FEFF 		bl	HAL_DMA_GetError
 2913 007c 0300     		movs	r3, r0
 2914              		.loc 1 1687 12
 2915 007e 202B     		cmp	r3, #32
 2916 0080 05D1     		bne	.L134
1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2917              		.loc 1 1690 28
 2918 0082 7B68     		ldr	r3, [r7, #4]
 2919 0084 8422     		movs	r2, #132
 2920 0086 1021     		movs	r1, #16
 2921 0088 9950     		str	r1, [r3, r2]
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
 2922              		.loc 1 1692 18
 2923 008a 0323     		movs	r3, #3
 2924 008c 44E0     		b	.L135
 2925              	.L134:
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2926              		.loc 1 1697 5
 2927 008e 7B68     		ldr	r3, [r7, #4]
 2928 0090 1800     		movs	r0, r3
 2929 0092 FFF7FEFF 		bl	UART_EndTxTransfer
 2930              	.L132:
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2931              		.loc 1 1701 8
 2932 0096 7B68     		ldr	r3, [r7, #4]
 2933 0098 1B68     		ldr	r3, [r3]
 2934 009a 9B68     		ldr	r3, [r3, #8]
 2935 009c 4022     		movs	r2, #64
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 90


 2936 009e 1340     		ands	r3, r2
 2937              		.loc 1 1701 6
 2938 00a0 402B     		cmp	r3, #64
 2939 00a2 38D1     		bne	.L136
 2940              		.loc 1 1701 62 discriminator 1
 2941 00a4 BB6A     		ldr	r3, [r7, #40]
 2942 00a6 222B     		cmp	r3, #34
 2943 00a8 35D1     		bne	.L136
 2944              	.LBB669:
 2945              	.LBB670:
 2946              	.LBB671:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 2947              		.loc 2 386 3
 2948              		.syntax divided
 2949              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2950 00aa EFF31083 		MRS r3, primask
 2951              	@ 0 "" 2
 2952              		.thumb
 2953              		.syntax unified
 2954 00ae BB60     		str	r3, [r7, #8]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2955              		.loc 2 387 9
 2956 00b0 BB68     		ldr	r3, [r7, #8]
 2957              	.LBE671:
 2958              	.LBE670:
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2959              		.loc 1 1704 5
 2960 00b2 3B62     		str	r3, [r7, #32]
 2961 00b4 0123     		movs	r3, #1
 2962 00b6 FB60     		str	r3, [r7, #12]
 2963              	.LBB672:
 2964              	.LBB673:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2965              		.loc 2 414 3
 2966 00b8 FB68     		ldr	r3, [r7, #12]
 2967              		.syntax divided
 2968              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2969 00ba 83F31088 		MSR primask, r3
 2970              	@ 0 "" 2
 2971              		.loc 2 415 1
 2972              		.thumb
 2973              		.syntax unified
 2974 00be C046     		nop
 2975              	.LBE673:
 2976              	.LBE672:
 2977              		.loc 1 1704 5
 2978 00c0 7B68     		ldr	r3, [r7, #4]
 2979 00c2 1B68     		ldr	r3, [r3]
 2980 00c4 9A68     		ldr	r2, [r3, #8]
 2981 00c6 7B68     		ldr	r3, [r7, #4]
 2982 00c8 1B68     		ldr	r3, [r3]
 2983 00ca 4021     		movs	r1, #64
 2984 00cc 8A43     		bics	r2, r1
 2985 00ce 9A60     		str	r2, [r3, #8]
 2986 00d0 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 91


 2987 00d2 3B61     		str	r3, [r7, #16]
 2988              	.LBB674:
 2989              	.LBB675:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2990              		.loc 2 414 3
 2991 00d4 3B69     		ldr	r3, [r7, #16]
 2992              		.syntax divided
 2993              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2994 00d6 83F31088 		MSR primask, r3
 2995              	@ 0 "" 2
 2996              		.loc 2 415 1
 2997              		.thumb
 2998              		.syntax unified
 2999 00da C046     		nop
 3000              	.LBE675:
 3001              	.LBE674:
 3002              	.LBE669:
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3003              		.loc 1 1707 14
 3004 00dc 7B68     		ldr	r3, [r7, #4]
 3005 00de 5B6F     		ldr	r3, [r3, #116]
 3006              		.loc 1 1707 8
 3007 00e0 002B     		cmp	r3, #0
 3008 00e2 14D0     		beq	.L138
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3009              		.loc 1 1709 11
 3010 00e4 7B68     		ldr	r3, [r7, #4]
 3011 00e6 5B6F     		ldr	r3, [r3, #116]
 3012 00e8 1800     		movs	r0, r3
 3013 00ea FFF7FEFF 		bl	HAL_DMA_Abort
 3014 00ee 031E     		subs	r3, r0, #0
 3015              		.loc 1 1709 10
 3016 00f0 0DD0     		beq	.L138
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3017              		.loc 1 1711 13
 3018 00f2 7B68     		ldr	r3, [r7, #4]
 3019 00f4 5B6F     		ldr	r3, [r3, #116]
 3020 00f6 1800     		movs	r0, r3
 3021 00f8 FFF7FEFF 		bl	HAL_DMA_GetError
 3022 00fc 0300     		movs	r3, r0
 3023              		.loc 1 1711 12
 3024 00fe 202B     		cmp	r3, #32
 3025 0100 05D1     		bne	.L138
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3026              		.loc 1 1714 28
 3027 0102 7B68     		ldr	r3, [r7, #4]
 3028 0104 8422     		movs	r2, #132
 3029 0106 1021     		movs	r1, #16
 3030 0108 9950     		str	r1, [r3, r2]
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 92


 3031              		.loc 1 1716 18
 3032 010a 0323     		movs	r3, #3
 3033 010c 04E0     		b	.L135
 3034              	.L138:
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 3035              		.loc 1 1721 5
 3036 010e 7B68     		ldr	r3, [r7, #4]
 3037 0110 1800     		movs	r0, r3
 3038 0112 FFF7FEFF 		bl	UART_EndRxTransfer
 3039              	.L136:
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 3040              		.loc 1 1724 10
 3041 0116 0023     		movs	r3, #0
 3042              	.L135:
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3043              		.loc 1 1725 1
 3044 0118 1800     		movs	r0, r3
 3045 011a BD46     		mov	sp, r7
 3046 011c 0CB0     		add	sp, sp, #48
 3047              		@ sp needed
 3048 011e 80BD     		pop	{r7, pc}
 3049              		.cfi_endproc
 3050              	.LFE55:
 3052              		.section	.text.HAL_UART_Abort,"ax",%progbits
 3053              		.align	1
 3054              		.global	HAL_UART_Abort
 3055              		.syntax unified
 3056              		.code	16
 3057              		.thumb_func
 3059              	HAL_UART_Abort:
 3060              	.LFB56:
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3061              		.loc 1 1740 1
 3062              		.cfi_startproc
 3063              		@ args = 0, pretend = 0, frame = 88
 3064              		@ frame_needed = 1, uses_anonymous_args = 0
 3065 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 93


 3066              	.LCFI48:
 3067              		.cfi_def_cfa_offset 8
 3068              		.cfi_offset 7, -8
 3069              		.cfi_offset 14, -4
 3070 0002 96B0     		sub	sp, sp, #88
 3071              	.LCFI49:
 3072              		.cfi_def_cfa_offset 96
 3073 0004 00AF     		add	r7, sp, #0
 3074              	.LCFI50:
 3075              		.cfi_def_cfa_register 7
 3076 0006 7860     		str	r0, [r7, #4]
 3077              	.LBB676:
 3078              	.LBB677:
 3079              	.LBB678:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3080              		.loc 2 386 3
 3081              		.syntax divided
 3082              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3083 0008 EFF31083 		MRS r3, primask
 3084              	@ 0 "" 2
 3085              		.thumb
 3086              		.syntax unified
 3087 000c FB62     		str	r3, [r7, #44]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3088              		.loc 2 387 9
 3089 000e FB6A     		ldr	r3, [r7, #44]
 3090              	.LBE678:
 3091              	.LBE677:
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
 3092              		.loc 1 1742 3
 3093 0010 7B65     		str	r3, [r7, #84]
 3094 0012 0123     		movs	r3, #1
 3095 0014 3B63     		str	r3, [r7, #48]
 3096              	.LBB679:
 3097              	.LBB680:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3098              		.loc 2 414 3
 3099 0016 3B6B     		ldr	r3, [r7, #48]
 3100              		.syntax divided
 3101              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3102 0018 83F31088 		MSR primask, r3
 3103              	@ 0 "" 2
 3104              		.loc 2 415 1
 3105              		.thumb
 3106              		.syntax unified
 3107 001c C046     		nop
 3108              	.LBE680:
 3109              	.LBE679:
 3110              		.loc 1 1742 3
 3111 001e 7B68     		ldr	r3, [r7, #4]
 3112 0020 1B68     		ldr	r3, [r3]
 3113 0022 1A68     		ldr	r2, [r3]
 3114 0024 7B68     		ldr	r3, [r7, #4]
 3115 0026 1B68     		ldr	r3, [r3]
 3116 0028 6F49     		ldr	r1, .L149
 3117 002a 0A40     		ands	r2, r1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 94


 3118 002c 1A60     		str	r2, [r3]
 3119 002e 7B6D     		ldr	r3, [r7, #84]
 3120 0030 7B63     		str	r3, [r7, #52]
 3121              	.LBB681:
 3122              	.LBB682:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3123              		.loc 2 414 3
 3124 0032 7B6B     		ldr	r3, [r7, #52]
 3125              		.syntax divided
 3126              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3127 0034 83F31088 		MSR primask, r3
 3128              	@ 0 "" 2
 3129              		.loc 2 415 1
 3130              		.thumb
 3131              		.syntax unified
 3132 0038 C046     		nop
 3133              	.LBE682:
 3134              	.LBE681:
 3135              	.LBE676:
 3136              	.LBB683:
 3137              	.LBB684:
 3138              	.LBB685:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3139              		.loc 2 386 3
 3140              		.syntax divided
 3141              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3142 003a EFF31083 		MRS r3, primask
 3143              	@ 0 "" 2
 3144              		.thumb
 3145              		.syntax unified
 3146 003e BB63     		str	r3, [r7, #56]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3147              		.loc 2 387 9
 3148 0040 BB6B     		ldr	r3, [r7, #56]
 3149              	.LBE685:
 3150              	.LBE684:
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3151              		.loc 1 1743 3
 3152 0042 3B65     		str	r3, [r7, #80]
 3153 0044 0123     		movs	r3, #1
 3154 0046 FB63     		str	r3, [r7, #60]
 3155              	.LBB686:
 3156              	.LBB687:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3157              		.loc 2 414 3
 3158 0048 FB6B     		ldr	r3, [r7, #60]
 3159              		.syntax divided
 3160              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3161 004a 83F31088 		MSR primask, r3
 3162              	@ 0 "" 2
 3163              		.loc 2 415 1
 3164              		.thumb
 3165              		.syntax unified
 3166 004e C046     		nop
 3167              	.LBE687:
 3168              	.LBE686:
 3169              		.loc 1 1743 3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 95


 3170 0050 7B68     		ldr	r3, [r7, #4]
 3171 0052 1B68     		ldr	r3, [r3]
 3172 0054 9A68     		ldr	r2, [r3, #8]
 3173 0056 7B68     		ldr	r3, [r7, #4]
 3174 0058 1B68     		ldr	r3, [r3]
 3175 005a 0121     		movs	r1, #1
 3176 005c 8A43     		bics	r2, r1
 3177 005e 9A60     		str	r2, [r3, #8]
 3178 0060 3B6D     		ldr	r3, [r7, #80]
 3179 0062 3B64     		str	r3, [r7, #64]
 3180              	.LBB688:
 3181              	.LBB689:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3182              		.loc 2 414 3
 3183 0064 3B6C     		ldr	r3, [r7, #64]
 3184              		.syntax divided
 3185              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3186 0066 83F31088 		MSR primask, r3
 3187              	@ 0 "" 2
 3188              		.loc 2 415 1
 3189              		.thumb
 3190              		.syntax unified
 3191 006a C046     		nop
 3192              	.LBE689:
 3193              	.LBE688:
 3194              	.LBE683:
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3195              		.loc 1 1746 12
 3196 006c 7B68     		ldr	r3, [r7, #4]
 3197 006e 1B6E     		ldr	r3, [r3, #96]
 3198              		.loc 1 1746 6
 3199 0070 012B     		cmp	r3, #1
 3200 0072 18D1     		bne	.L142
 3201              	.LBB690:
 3202              	.LBB691:
 3203              	.LBB692:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3204              		.loc 2 386 3
 3205              		.syntax divided
 3206              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3207 0074 EFF31083 		MRS r3, primask
 3208              	@ 0 "" 2
 3209              		.thumb
 3210              		.syntax unified
 3211 0078 3B62     		str	r3, [r7, #32]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3212              		.loc 2 387 9
 3213 007a 3B6A     		ldr	r3, [r7, #32]
 3214              	.LBE692:
 3215              	.LBE691:
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3216              		.loc 1 1748 5
 3217 007c FB64     		str	r3, [r7, #76]
 3218 007e 0123     		movs	r3, #1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 96


 3219 0080 7B62     		str	r3, [r7, #36]
 3220              	.LBB693:
 3221              	.LBB694:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3222              		.loc 2 414 3
 3223 0082 7B6A     		ldr	r3, [r7, #36]
 3224              		.syntax divided
 3225              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3226 0084 83F31088 		MSR primask, r3
 3227              	@ 0 "" 2
 3228              		.loc 2 415 1
 3229              		.thumb
 3230              		.syntax unified
 3231 0088 C046     		nop
 3232              	.LBE694:
 3233              	.LBE693:
 3234              		.loc 1 1748 5
 3235 008a 7B68     		ldr	r3, [r7, #4]
 3236 008c 1B68     		ldr	r3, [r3]
 3237 008e 1A68     		ldr	r2, [r3]
 3238 0090 7B68     		ldr	r3, [r7, #4]
 3239 0092 1B68     		ldr	r3, [r3]
 3240 0094 1021     		movs	r1, #16
 3241 0096 8A43     		bics	r2, r1
 3242 0098 1A60     		str	r2, [r3]
 3243 009a FB6C     		ldr	r3, [r7, #76]
 3244 009c BB62     		str	r3, [r7, #40]
 3245              	.LBB695:
 3246              	.LBB696:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3247              		.loc 2 414 3
 3248 009e BB6A     		ldr	r3, [r7, #40]
 3249              		.syntax divided
 3250              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3251 00a0 83F31088 		MSR primask, r3
 3252              	@ 0 "" 2
 3253              		.loc 2 415 1
 3254              		.thumb
 3255              		.syntax unified
 3256 00a4 C046     		nop
 3257              	.L142:
 3258              	.LBE696:
 3259              	.LBE695:
 3260              	.LBE690:
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3261              		.loc 1 1752 7
 3262 00a6 7B68     		ldr	r3, [r7, #4]
 3263 00a8 1B68     		ldr	r3, [r3]
 3264 00aa 9B68     		ldr	r3, [r3, #8]
 3265 00ac 8022     		movs	r2, #128
 3266 00ae 1340     		ands	r3, r2
 3267              		.loc 1 1752 6
 3268 00b0 802B     		cmp	r3, #128
 3269 00b2 35D1     		bne	.L144
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 97


 3270              	.LBB697:
 3271              	.LBB698:
 3272              	.LBB699:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3273              		.loc 2 386 3
 3274              		.syntax divided
 3275              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3276 00b4 EFF31083 		MRS r3, primask
 3277              	@ 0 "" 2
 3278              		.thumb
 3279              		.syntax unified
 3280 00b8 7B61     		str	r3, [r7, #20]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3281              		.loc 2 387 9
 3282 00ba 7B69     		ldr	r3, [r7, #20]
 3283              	.LBE699:
 3284              	.LBE698:
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3285              		.loc 1 1755 5
 3286 00bc BB64     		str	r3, [r7, #72]
 3287 00be 0123     		movs	r3, #1
 3288 00c0 BB61     		str	r3, [r7, #24]
 3289              	.LBB700:
 3290              	.LBB701:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3291              		.loc 2 414 3
 3292 00c2 BB69     		ldr	r3, [r7, #24]
 3293              		.syntax divided
 3294              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3295 00c4 83F31088 		MSR primask, r3
 3296              	@ 0 "" 2
 3297              		.loc 2 415 1
 3298              		.thumb
 3299              		.syntax unified
 3300 00c8 C046     		nop
 3301              	.LBE701:
 3302              	.LBE700:
 3303              		.loc 1 1755 5
 3304 00ca 7B68     		ldr	r3, [r7, #4]
 3305 00cc 1B68     		ldr	r3, [r3]
 3306 00ce 9A68     		ldr	r2, [r3, #8]
 3307 00d0 7B68     		ldr	r3, [r7, #4]
 3308 00d2 1B68     		ldr	r3, [r3]
 3309 00d4 8021     		movs	r1, #128
 3310 00d6 8A43     		bics	r2, r1
 3311 00d8 9A60     		str	r2, [r3, #8]
 3312 00da BB6C     		ldr	r3, [r7, #72]
 3313 00dc FB61     		str	r3, [r7, #28]
 3314              	.LBB702:
 3315              	.LBB703:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3316              		.loc 2 414 3
 3317 00de FB69     		ldr	r3, [r7, #28]
 3318              		.syntax divided
 3319              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 98


 3320 00e0 83F31088 		MSR primask, r3
 3321              	@ 0 "" 2
 3322              		.loc 2 415 1
 3323              		.thumb
 3324              		.syntax unified
 3325 00e4 C046     		nop
 3326              	.LBE703:
 3327              	.LBE702:
 3328              	.LBE697:
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3329              		.loc 1 1758 14
 3330 00e6 7B68     		ldr	r3, [r7, #4]
 3331 00e8 1B6F     		ldr	r3, [r3, #112]
 3332              		.loc 1 1758 8
 3333 00ea 002B     		cmp	r3, #0
 3334 00ec 18D0     		beq	.L144
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3335              		.loc 1 1762 12
 3336 00ee 7B68     		ldr	r3, [r7, #4]
 3337 00f0 1B6F     		ldr	r3, [r3, #112]
 3338              		.loc 1 1762 40
 3339 00f2 0022     		movs	r2, #0
 3340 00f4 5A63     		str	r2, [r3, #52]
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3341              		.loc 1 1764 11
 3342 00f6 7B68     		ldr	r3, [r7, #4]
 3343 00f8 1B6F     		ldr	r3, [r3, #112]
 3344 00fa 1800     		movs	r0, r3
 3345 00fc FFF7FEFF 		bl	HAL_DMA_Abort
 3346 0100 031E     		subs	r3, r0, #0
 3347              		.loc 1 1764 10
 3348 0102 0DD0     		beq	.L144
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3349              		.loc 1 1766 13
 3350 0104 7B68     		ldr	r3, [r7, #4]
 3351 0106 1B6F     		ldr	r3, [r3, #112]
 3352 0108 1800     		movs	r0, r3
 3353 010a FFF7FEFF 		bl	HAL_DMA_GetError
 3354 010e 0300     		movs	r3, r0
 3355              		.loc 1 1766 12
 3356 0110 202B     		cmp	r3, #32
 3357 0112 05D1     		bne	.L144
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3358              		.loc 1 1769 28
 3359 0114 7B68     		ldr	r3, [r7, #4]
 3360 0116 8422     		movs	r2, #132
 3361 0118 1021     		movs	r1, #16
 3362 011a 9950     		str	r1, [r3, r2]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 99


1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
 3363              		.loc 1 1771 18
 3364 011c 0323     		movs	r3, #3
 3365 011e 5FE0     		b	.L146
 3366              	.L144:
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3367              		.loc 1 1778 7
 3368 0120 7B68     		ldr	r3, [r7, #4]
 3369 0122 1B68     		ldr	r3, [r3]
 3370 0124 9B68     		ldr	r3, [r3, #8]
 3371 0126 4022     		movs	r2, #64
 3372 0128 1340     		ands	r3, r2
 3373              		.loc 1 1778 6
 3374 012a 402B     		cmp	r3, #64
 3375 012c 35D1     		bne	.L147
 3376              	.LBB704:
 3377              	.LBB705:
 3378              	.LBB706:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3379              		.loc 2 386 3
 3380              		.syntax divided
 3381              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3382 012e EFF31083 		MRS r3, primask
 3383              	@ 0 "" 2
 3384              		.thumb
 3385              		.syntax unified
 3386 0132 BB60     		str	r3, [r7, #8]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3387              		.loc 2 387 9
 3388 0134 BB68     		ldr	r3, [r7, #8]
 3389              	.LBE706:
 3390              	.LBE705:
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3391              		.loc 1 1781 5
 3392 0136 7B64     		str	r3, [r7, #68]
 3393 0138 0123     		movs	r3, #1
 3394 013a FB60     		str	r3, [r7, #12]
 3395              	.LBB707:
 3396              	.LBB708:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3397              		.loc 2 414 3
 3398 013c FB68     		ldr	r3, [r7, #12]
 3399              		.syntax divided
 3400              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3401 013e 83F31088 		MSR primask, r3
 3402              	@ 0 "" 2
 3403              		.loc 2 415 1
 3404              		.thumb
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 100


 3405              		.syntax unified
 3406 0142 C046     		nop
 3407              	.LBE708:
 3408              	.LBE707:
 3409              		.loc 1 1781 5
 3410 0144 7B68     		ldr	r3, [r7, #4]
 3411 0146 1B68     		ldr	r3, [r3]
 3412 0148 9A68     		ldr	r2, [r3, #8]
 3413 014a 7B68     		ldr	r3, [r7, #4]
 3414 014c 1B68     		ldr	r3, [r3]
 3415 014e 4021     		movs	r1, #64
 3416 0150 8A43     		bics	r2, r1
 3417 0152 9A60     		str	r2, [r3, #8]
 3418 0154 7B6C     		ldr	r3, [r7, #68]
 3419 0156 3B61     		str	r3, [r7, #16]
 3420              	.LBB709:
 3421              	.LBB710:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3422              		.loc 2 414 3
 3423 0158 3B69     		ldr	r3, [r7, #16]
 3424              		.syntax divided
 3425              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3426 015a 83F31088 		MSR primask, r3
 3427              	@ 0 "" 2
 3428              		.loc 2 415 1
 3429              		.thumb
 3430              		.syntax unified
 3431 015e C046     		nop
 3432              	.LBE710:
 3433              	.LBE709:
 3434              	.LBE704:
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3435              		.loc 1 1784 14
 3436 0160 7B68     		ldr	r3, [r7, #4]
 3437 0162 5B6F     		ldr	r3, [r3, #116]
 3438              		.loc 1 1784 8
 3439 0164 002B     		cmp	r3, #0
 3440 0166 18D0     		beq	.L147
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3441              		.loc 1 1788 12
 3442 0168 7B68     		ldr	r3, [r7, #4]
 3443 016a 5B6F     		ldr	r3, [r3, #116]
 3444              		.loc 1 1788 40
 3445 016c 0022     		movs	r2, #0
 3446 016e 5A63     		str	r2, [r3, #52]
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3447              		.loc 1 1790 11
 3448 0170 7B68     		ldr	r3, [r7, #4]
 3449 0172 5B6F     		ldr	r3, [r3, #116]
 3450 0174 1800     		movs	r0, r3
 3451 0176 FFF7FEFF 		bl	HAL_DMA_Abort
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 101


 3452 017a 031E     		subs	r3, r0, #0
 3453              		.loc 1 1790 10
 3454 017c 0DD0     		beq	.L147
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3455              		.loc 1 1792 13
 3456 017e 7B68     		ldr	r3, [r7, #4]
 3457 0180 5B6F     		ldr	r3, [r3, #116]
 3458 0182 1800     		movs	r0, r3
 3459 0184 FFF7FEFF 		bl	HAL_DMA_GetError
 3460 0188 0300     		movs	r3, r0
 3461              		.loc 1 1792 12
 3462 018a 202B     		cmp	r3, #32
 3463 018c 05D1     		bne	.L147
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3464              		.loc 1 1795 28
 3465 018e 7B68     		ldr	r3, [r7, #4]
 3466 0190 8422     		movs	r2, #132
 3467 0192 1021     		movs	r1, #16
 3468 0194 9950     		str	r1, [r3, r2]
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
 3469              		.loc 1 1797 18
 3470 0196 0323     		movs	r3, #3
 3471 0198 22E0     		b	.L146
 3472              	.L147:
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3473              		.loc 1 1804 22
 3474 019a 7B68     		ldr	r3, [r7, #4]
 3475 019c 5222     		movs	r2, #82
 3476 019e 0021     		movs	r1, #0
 3477 01a0 9952     		strh	r1, [r3, r2]
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3478              		.loc 1 1805 22
 3479 01a2 7B68     		ldr	r3, [r7, #4]
 3480 01a4 5A22     		movs	r2, #90
 3481 01a6 0021     		movs	r1, #0
 3482 01a8 9952     		strh	r1, [r3, r2]
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 3483              		.loc 1 1808 3
 3484 01aa 7B68     		ldr	r3, [r7, #4]
 3485 01ac 1B68     		ldr	r3, [r3]
 3486 01ae 0F22     		movs	r2, #15
 3487 01b0 1A62     		str	r2, [r3, #32]
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Discard the received data */
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 102


1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3488              		.loc 1 1812 3
 3489 01b2 7B68     		ldr	r3, [r7, #4]
 3490 01b4 1B68     		ldr	r3, [r3]
 3491 01b6 9A69     		ldr	r2, [r3, #24]
 3492 01b8 7B68     		ldr	r3, [r7, #4]
 3493 01ba 1B68     		ldr	r3, [r3]
 3494 01bc 0821     		movs	r1, #8
 3495 01be 0A43     		orrs	r2, r1
 3496 01c0 9A61     		str	r2, [r3, #24]
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 3497              		.loc 1 1815 18
 3498 01c2 7B68     		ldr	r3, [r7, #4]
 3499 01c4 2022     		movs	r2, #32
 3500 01c6 DA67     		str	r2, [r3, #124]
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3501              		.loc 1 1816 18
 3502 01c8 7B68     		ldr	r3, [r7, #4]
 3503 01ca 8022     		movs	r2, #128
 3504 01cc 2021     		movs	r1, #32
 3505 01ce 9950     		str	r1, [r3, r2]
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3506              		.loc 1 1817 24
 3507 01d0 7B68     		ldr	r3, [r7, #4]
 3508 01d2 0022     		movs	r2, #0
 3509 01d4 1A66     		str	r2, [r3, #96]
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 3510              		.loc 1 1819 20
 3511 01d6 7B68     		ldr	r3, [r7, #4]
 3512 01d8 8422     		movs	r2, #132
 3513 01da 0021     		movs	r1, #0
 3514 01dc 9950     		str	r1, [r3, r2]
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 3515              		.loc 1 1821 10
 3516 01de 0023     		movs	r3, #0
 3517              	.L146:
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3518              		.loc 1 1822 1
 3519 01e0 1800     		movs	r0, r3
 3520 01e2 BD46     		mov	sp, r7
 3521 01e4 16B0     		add	sp, sp, #88
 3522              		@ sp needed
 3523 01e6 80BD     		pop	{r7, pc}
 3524              	.L150:
 3525              		.align	2
 3526              	.L149:
 3527 01e8 1FFEFFFF 		.word	-481
 3528              		.cfi_endproc
 3529              	.LFE56:
 3531              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 3532              		.align	1
 3533              		.global	HAL_UART_AbortTransmit
 3534              		.syntax unified
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 103


 3535              		.code	16
 3536              		.thumb_func
 3538              	HAL_UART_AbortTransmit:
 3539              	.LFB57:
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3540              		.loc 1 1837 1
 3541              		.cfi_startproc
 3542              		@ args = 0, pretend = 0, frame = 40
 3543              		@ frame_needed = 1, uses_anonymous_args = 0
 3544 0000 80B5     		push	{r7, lr}
 3545              	.LCFI51:
 3546              		.cfi_def_cfa_offset 8
 3547              		.cfi_offset 7, -8
 3548              		.cfi_offset 14, -4
 3549 0002 8AB0     		sub	sp, sp, #40
 3550              	.LCFI52:
 3551              		.cfi_def_cfa_offset 48
 3552 0004 00AF     		add	r7, sp, #0
 3553              	.LCFI53:
 3554              		.cfi_def_cfa_register 7
 3555 0006 7860     		str	r0, [r7, #4]
 3556              	.LBB711:
 3557              	.LBB712:
 3558              	.LBB713:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3559              		.loc 2 386 3
 3560              		.syntax divided
 3561              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3562 0008 EFF31083 		MRS r3, primask
 3563              	@ 0 "" 2
 3564              		.thumb
 3565              		.syntax unified
 3566 000c 7B61     		str	r3, [r7, #20]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3567              		.loc 2 387 9
 3568 000e 7B69     		ldr	r3, [r7, #20]
 3569              	.LBE713:
 3570              	.LBE712:
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3571              		.loc 1 1839 3
 3572 0010 7B62     		str	r3, [r7, #36]
 3573 0012 0123     		movs	r3, #1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 104


 3574 0014 BB61     		str	r3, [r7, #24]
 3575              	.LBB714:
 3576              	.LBB715:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3577              		.loc 2 414 3
 3578 0016 BB69     		ldr	r3, [r7, #24]
 3579              		.syntax divided
 3580              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3581 0018 83F31088 		MSR primask, r3
 3582              	@ 0 "" 2
 3583              		.loc 2 415 1
 3584              		.thumb
 3585              		.syntax unified
 3586 001c C046     		nop
 3587              	.LBE715:
 3588              	.LBE714:
 3589              		.loc 1 1839 3
 3590 001e 7B68     		ldr	r3, [r7, #4]
 3591 0020 1B68     		ldr	r3, [r3]
 3592 0022 1A68     		ldr	r2, [r3]
 3593 0024 7B68     		ldr	r3, [r7, #4]
 3594 0026 1B68     		ldr	r3, [r3]
 3595 0028 C021     		movs	r1, #192
 3596 002a 8A43     		bics	r2, r1
 3597 002c 1A60     		str	r2, [r3]
 3598 002e 7B6A     		ldr	r3, [r7, #36]
 3599 0030 FB61     		str	r3, [r7, #28]
 3600              	.LBB716:
 3601              	.LBB717:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3602              		.loc 2 414 3
 3603 0032 FB69     		ldr	r3, [r7, #28]
 3604              		.syntax divided
 3605              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3606 0034 83F31088 		MSR primask, r3
 3607              	@ 0 "" 2
 3608              		.loc 2 415 1
 3609              		.thumb
 3610              		.syntax unified
 3611 0038 C046     		nop
 3612              	.LBE717:
 3613              	.LBE716:
 3614              	.LBE711:
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3615              		.loc 1 1842 7
 3616 003a 7B68     		ldr	r3, [r7, #4]
 3617 003c 1B68     		ldr	r3, [r3]
 3618 003e 9B68     		ldr	r3, [r3, #8]
 3619 0040 8022     		movs	r2, #128
 3620 0042 1340     		ands	r3, r2
 3621              		.loc 1 1842 6
 3622 0044 802B     		cmp	r3, #128
 3623 0046 35D1     		bne	.L153
 3624              	.LBB718:
 3625              	.LBB719:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 105


 3626              	.LBB720:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3627              		.loc 2 386 3
 3628              		.syntax divided
 3629              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3630 0048 EFF31083 		MRS r3, primask
 3631              	@ 0 "" 2
 3632              		.thumb
 3633              		.syntax unified
 3634 004c BB60     		str	r3, [r7, #8]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3635              		.loc 2 387 9
 3636 004e BB68     		ldr	r3, [r7, #8]
 3637              	.LBE720:
 3638              	.LBE719:
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3639              		.loc 1 1845 5
 3640 0050 3B62     		str	r3, [r7, #32]
 3641 0052 0123     		movs	r3, #1
 3642 0054 FB60     		str	r3, [r7, #12]
 3643              	.LBB721:
 3644              	.LBB722:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3645              		.loc 2 414 3
 3646 0056 FB68     		ldr	r3, [r7, #12]
 3647              		.syntax divided
 3648              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3649 0058 83F31088 		MSR primask, r3
 3650              	@ 0 "" 2
 3651              		.loc 2 415 1
 3652              		.thumb
 3653              		.syntax unified
 3654 005c C046     		nop
 3655              	.LBE722:
 3656              	.LBE721:
 3657              		.loc 1 1845 5
 3658 005e 7B68     		ldr	r3, [r7, #4]
 3659 0060 1B68     		ldr	r3, [r3]
 3660 0062 9A68     		ldr	r2, [r3, #8]
 3661 0064 7B68     		ldr	r3, [r7, #4]
 3662 0066 1B68     		ldr	r3, [r3]
 3663 0068 8021     		movs	r1, #128
 3664 006a 8A43     		bics	r2, r1
 3665 006c 9A60     		str	r2, [r3, #8]
 3666 006e 3B6A     		ldr	r3, [r7, #32]
 3667 0070 3B61     		str	r3, [r7, #16]
 3668              	.LBB723:
 3669              	.LBB724:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3670              		.loc 2 414 3
 3671 0072 3B69     		ldr	r3, [r7, #16]
 3672              		.syntax divided
 3673              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3674 0074 83F31088 		MSR primask, r3
 3675              	@ 0 "" 2
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 106


 3676              		.loc 2 415 1
 3677              		.thumb
 3678              		.syntax unified
 3679 0078 C046     		nop
 3680              	.LBE724:
 3681              	.LBE723:
 3682              	.LBE718:
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3683              		.loc 1 1848 14
 3684 007a 7B68     		ldr	r3, [r7, #4]
 3685 007c 1B6F     		ldr	r3, [r3, #112]
 3686              		.loc 1 1848 8
 3687 007e 002B     		cmp	r3, #0
 3688 0080 18D0     		beq	.L153
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3689              		.loc 1 1852 12
 3690 0082 7B68     		ldr	r3, [r7, #4]
 3691 0084 1B6F     		ldr	r3, [r3, #112]
 3692              		.loc 1 1852 40
 3693 0086 0022     		movs	r2, #0
 3694 0088 5A63     		str	r2, [r3, #52]
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3695              		.loc 1 1854 11
 3696 008a 7B68     		ldr	r3, [r7, #4]
 3697 008c 1B6F     		ldr	r3, [r3, #112]
 3698 008e 1800     		movs	r0, r3
 3699 0090 FFF7FEFF 		bl	HAL_DMA_Abort
 3700 0094 031E     		subs	r3, r0, #0
 3701              		.loc 1 1854 10
 3702 0096 0DD0     		beq	.L153
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3703              		.loc 1 1856 13
 3704 0098 7B68     		ldr	r3, [r7, #4]
 3705 009a 1B6F     		ldr	r3, [r3, #112]
 3706 009c 1800     		movs	r0, r3
 3707 009e FFF7FEFF 		bl	HAL_DMA_GetError
 3708 00a2 0300     		movs	r3, r0
 3709              		.loc 1 1856 12
 3710 00a4 202B     		cmp	r3, #32
 3711 00a6 05D1     		bne	.L153
1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3712              		.loc 1 1859 28
 3713 00a8 7B68     		ldr	r3, [r7, #4]
 3714 00aa 8422     		movs	r2, #132
 3715 00ac 1021     		movs	r1, #16
 3716 00ae 9950     		str	r1, [r3, r2]
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 107


 3717              		.loc 1 1861 18
 3718 00b0 0323     		movs	r3, #3
 3719 00b2 07E0     		b	.L155
 3720              	.L153:
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx transfer counter */
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3721              		.loc 1 1868 22
 3722 00b4 7B68     		ldr	r3, [r7, #4]
 3723 00b6 5222     		movs	r2, #82
 3724 00b8 0021     		movs	r1, #0
 3725 00ba 9952     		strh	r1, [r3, r2]
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3726              		.loc 1 1872 17
 3727 00bc 7B68     		ldr	r3, [r7, #4]
 3728 00be 2022     		movs	r2, #32
 3729 00c0 DA67     		str	r2, [r3, #124]
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 3730              		.loc 1 1874 10
 3731 00c2 0023     		movs	r3, #0
 3732              	.L155:
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3733              		.loc 1 1875 1
 3734 00c4 1800     		movs	r0, r3
 3735 00c6 BD46     		mov	sp, r7
 3736 00c8 0AB0     		add	sp, sp, #40
 3737              		@ sp needed
 3738 00ca 80BD     		pop	{r7, pc}
 3739              		.cfi_endproc
 3740              	.LFE57:
 3742              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 3743              		.align	1
 3744              		.global	HAL_UART_AbortReceive
 3745              		.syntax unified
 3746              		.code	16
 3747              		.thumb_func
 3749              	HAL_UART_AbortReceive:
 3750              	.LFB58:
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 108


1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 3751              		.loc 1 1890 1
 3752              		.cfi_startproc
 3753              		@ args = 0, pretend = 0, frame = 72
 3754              		@ frame_needed = 1, uses_anonymous_args = 0
 3755 0000 80B5     		push	{r7, lr}
 3756              	.LCFI54:
 3757              		.cfi_def_cfa_offset 8
 3758              		.cfi_offset 7, -8
 3759              		.cfi_offset 14, -4
 3760 0002 92B0     		sub	sp, sp, #72
 3761              	.LCFI55:
 3762              		.cfi_def_cfa_offset 80
 3763 0004 00AF     		add	r7, sp, #0
 3764              	.LCFI56:
 3765              		.cfi_def_cfa_register 7
 3766 0006 7860     		str	r0, [r7, #4]
 3767              	.LBB725:
 3768              	.LBB726:
 3769              	.LBB727:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3770              		.loc 2 386 3
 3771              		.syntax divided
 3772              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3773 0008 EFF31083 		MRS r3, primask
 3774              	@ 0 "" 2
 3775              		.thumb
 3776              		.syntax unified
 3777 000c 3B62     		str	r3, [r7, #32]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3778              		.loc 2 387 9
 3779 000e 3B6A     		ldr	r3, [r7, #32]
 3780              	.LBE727:
 3781              	.LBE726:
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3782              		.loc 1 1892 3
 3783 0010 7B64     		str	r3, [r7, #68]
 3784 0012 0123     		movs	r3, #1
 3785 0014 7B62     		str	r3, [r7, #36]
 3786              	.LBB728:
 3787              	.LBB729:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3788              		.loc 2 414 3
 3789 0016 7B6A     		ldr	r3, [r7, #36]
 3790              		.syntax divided
 3791              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3792 0018 83F31088 		MSR primask, r3
 3793              	@ 0 "" 2
 3794              		.loc 2 415 1
 3795              		.thumb
 3796              		.syntax unified
 3797 001c C046     		nop
 3798              	.LBE729:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 109


 3799              	.LBE728:
 3800              		.loc 1 1892 3
 3801 001e 7B68     		ldr	r3, [r7, #4]
 3802 0020 1B68     		ldr	r3, [r3]
 3803 0022 1A68     		ldr	r2, [r3]
 3804 0024 7B68     		ldr	r3, [r7, #4]
 3805 0026 1B68     		ldr	r3, [r3]
 3806 0028 4B49     		ldr	r1, .L164
 3807 002a 0A40     		ands	r2, r1
 3808 002c 1A60     		str	r2, [r3]
 3809 002e 7B6C     		ldr	r3, [r7, #68]
 3810 0030 BB62     		str	r3, [r7, #40]
 3811              	.LBB730:
 3812              	.LBB731:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3813              		.loc 2 414 3
 3814 0032 BB6A     		ldr	r3, [r7, #40]
 3815              		.syntax divided
 3816              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3817 0034 83F31088 		MSR primask, r3
 3818              	@ 0 "" 2
 3819              		.loc 2 415 1
 3820              		.thumb
 3821              		.syntax unified
 3822 0038 C046     		nop
 3823              	.LBE731:
 3824              	.LBE730:
 3825              	.LBE725:
 3826              	.LBB732:
 3827              	.LBB733:
 3828              	.LBB734:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3829              		.loc 2 386 3
 3830              		.syntax divided
 3831              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3832 003a EFF31083 		MRS r3, primask
 3833              	@ 0 "" 2
 3834              		.thumb
 3835              		.syntax unified
 3836 003e FB62     		str	r3, [r7, #44]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3837              		.loc 2 387 9
 3838 0040 FB6A     		ldr	r3, [r7, #44]
 3839              	.LBE734:
 3840              	.LBE733:
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3841              		.loc 1 1893 3
 3842 0042 3B64     		str	r3, [r7, #64]
 3843 0044 0123     		movs	r3, #1
 3844 0046 3B63     		str	r3, [r7, #48]
 3845              	.LBB735:
 3846              	.LBB736:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3847              		.loc 2 414 3
 3848 0048 3B6B     		ldr	r3, [r7, #48]
 3849              		.syntax divided
 3850              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 110


 3851 004a 83F31088 		MSR primask, r3
 3852              	@ 0 "" 2
 3853              		.loc 2 415 1
 3854              		.thumb
 3855              		.syntax unified
 3856 004e C046     		nop
 3857              	.LBE736:
 3858              	.LBE735:
 3859              		.loc 1 1893 3
 3860 0050 7B68     		ldr	r3, [r7, #4]
 3861 0052 1B68     		ldr	r3, [r3]
 3862 0054 9A68     		ldr	r2, [r3, #8]
 3863 0056 7B68     		ldr	r3, [r7, #4]
 3864 0058 1B68     		ldr	r3, [r3]
 3865 005a 0121     		movs	r1, #1
 3866 005c 8A43     		bics	r2, r1
 3867 005e 9A60     		str	r2, [r3, #8]
 3868 0060 3B6C     		ldr	r3, [r7, #64]
 3869 0062 7B63     		str	r3, [r7, #52]
 3870              	.LBB737:
 3871              	.LBB738:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3872              		.loc 2 414 3
 3873 0064 7B6B     		ldr	r3, [r7, #52]
 3874              		.syntax divided
 3875              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3876 0066 83F31088 		MSR primask, r3
 3877              	@ 0 "" 2
 3878              		.loc 2 415 1
 3879              		.thumb
 3880              		.syntax unified
 3881 006a C046     		nop
 3882              	.LBE738:
 3883              	.LBE737:
 3884              	.LBE732:
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3885              		.loc 1 1896 12
 3886 006c 7B68     		ldr	r3, [r7, #4]
 3887 006e 1B6E     		ldr	r3, [r3, #96]
 3888              		.loc 1 1896 6
 3889 0070 012B     		cmp	r3, #1
 3890 0072 18D1     		bne	.L159
 3891              	.LBB739:
 3892              	.LBB740:
 3893              	.LBB741:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3894              		.loc 2 386 3
 3895              		.syntax divided
 3896              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3897 0074 EFF31083 		MRS r3, primask
 3898              	@ 0 "" 2
 3899              		.thumb
 3900              		.syntax unified
 3901 0078 7B61     		str	r3, [r7, #20]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 111


 3902              		.loc 2 387 9
 3903 007a 7B69     		ldr	r3, [r7, #20]
 3904              	.LBE741:
 3905              	.LBE740:
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3906              		.loc 1 1898 5
 3907 007c FB63     		str	r3, [r7, #60]
 3908 007e 0123     		movs	r3, #1
 3909 0080 BB61     		str	r3, [r7, #24]
 3910              	.LBB742:
 3911              	.LBB743:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3912              		.loc 2 414 3
 3913 0082 BB69     		ldr	r3, [r7, #24]
 3914              		.syntax divided
 3915              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3916 0084 83F31088 		MSR primask, r3
 3917              	@ 0 "" 2
 3918              		.loc 2 415 1
 3919              		.thumb
 3920              		.syntax unified
 3921 0088 C046     		nop
 3922              	.LBE743:
 3923              	.LBE742:
 3924              		.loc 1 1898 5
 3925 008a 7B68     		ldr	r3, [r7, #4]
 3926 008c 1B68     		ldr	r3, [r3]
 3927 008e 1A68     		ldr	r2, [r3]
 3928 0090 7B68     		ldr	r3, [r7, #4]
 3929 0092 1B68     		ldr	r3, [r3]
 3930 0094 1021     		movs	r1, #16
 3931 0096 8A43     		bics	r2, r1
 3932 0098 1A60     		str	r2, [r3]
 3933 009a FB6B     		ldr	r3, [r7, #60]
 3934 009c FB61     		str	r3, [r7, #28]
 3935              	.LBB744:
 3936              	.LBB745:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3937              		.loc 2 414 3
 3938 009e FB69     		ldr	r3, [r7, #28]
 3939              		.syntax divided
 3940              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3941 00a0 83F31088 		MSR primask, r3
 3942              	@ 0 "" 2
 3943              		.loc 2 415 1
 3944              		.thumb
 3945              		.syntax unified
 3946 00a4 C046     		nop
 3947              	.L159:
 3948              	.LBE745:
 3949              	.LBE744:
 3950              	.LBE739:
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 112


 3951              		.loc 1 1902 7
 3952 00a6 7B68     		ldr	r3, [r7, #4]
 3953 00a8 1B68     		ldr	r3, [r3]
 3954 00aa 9B68     		ldr	r3, [r3, #8]
 3955 00ac 4022     		movs	r2, #64
 3956 00ae 1340     		ands	r3, r2
 3957              		.loc 1 1902 6
 3958 00b0 402B     		cmp	r3, #64
 3959 00b2 35D1     		bne	.L161
 3960              	.LBB746:
 3961              	.LBB747:
 3962              	.LBB748:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 3963              		.loc 2 386 3
 3964              		.syntax divided
 3965              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3966 00b4 EFF31083 		MRS r3, primask
 3967              	@ 0 "" 2
 3968              		.thumb
 3969              		.syntax unified
 3970 00b8 BB60     		str	r3, [r7, #8]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3971              		.loc 2 387 9
 3972 00ba BB68     		ldr	r3, [r7, #8]
 3973              	.LBE748:
 3974              	.LBE747:
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3975              		.loc 1 1905 5
 3976 00bc BB63     		str	r3, [r7, #56]
 3977 00be 0123     		movs	r3, #1
 3978 00c0 FB60     		str	r3, [r7, #12]
 3979              	.LBB749:
 3980              	.LBB750:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3981              		.loc 2 414 3
 3982 00c2 FB68     		ldr	r3, [r7, #12]
 3983              		.syntax divided
 3984              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3985 00c4 83F31088 		MSR primask, r3
 3986              	@ 0 "" 2
 3987              		.loc 2 415 1
 3988              		.thumb
 3989              		.syntax unified
 3990 00c8 C046     		nop
 3991              	.LBE750:
 3992              	.LBE749:
 3993              		.loc 1 1905 5
 3994 00ca 7B68     		ldr	r3, [r7, #4]
 3995 00cc 1B68     		ldr	r3, [r3]
 3996 00ce 9A68     		ldr	r2, [r3, #8]
 3997 00d0 7B68     		ldr	r3, [r7, #4]
 3998 00d2 1B68     		ldr	r3, [r3]
 3999 00d4 4021     		movs	r1, #64
 4000 00d6 8A43     		bics	r2, r1
 4001 00d8 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 113


 4002 00da BB6B     		ldr	r3, [r7, #56]
 4003 00dc 3B61     		str	r3, [r7, #16]
 4004              	.LBB751:
 4005              	.LBB752:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4006              		.loc 2 414 3
 4007 00de 3B69     		ldr	r3, [r7, #16]
 4008              		.syntax divided
 4009              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4010 00e0 83F31088 		MSR primask, r3
 4011              	@ 0 "" 2
 4012              		.loc 2 415 1
 4013              		.thumb
 4014              		.syntax unified
 4015 00e4 C046     		nop
 4016              	.LBE752:
 4017              	.LBE751:
 4018              	.LBE746:
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4019              		.loc 1 1908 14
 4020 00e6 7B68     		ldr	r3, [r7, #4]
 4021 00e8 5B6F     		ldr	r3, [r3, #116]
 4022              		.loc 1 1908 8
 4023 00ea 002B     		cmp	r3, #0
 4024 00ec 18D0     		beq	.L161
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 4025              		.loc 1 1912 12
 4026 00ee 7B68     		ldr	r3, [r7, #4]
 4027 00f0 5B6F     		ldr	r3, [r3, #116]
 4028              		.loc 1 1912 40
 4029 00f2 0022     		movs	r2, #0
 4030 00f4 5A63     		str	r2, [r3, #52]
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 4031              		.loc 1 1914 11
 4032 00f6 7B68     		ldr	r3, [r7, #4]
 4033 00f8 5B6F     		ldr	r3, [r3, #116]
 4034 00fa 1800     		movs	r0, r3
 4035 00fc FFF7FEFF 		bl	HAL_DMA_Abort
 4036 0100 031E     		subs	r3, r0, #0
 4037              		.loc 1 1914 10
 4038 0102 0DD0     		beq	.L161
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 4039              		.loc 1 1916 13
 4040 0104 7B68     		ldr	r3, [r7, #4]
 4041 0106 5B6F     		ldr	r3, [r3, #116]
 4042 0108 1800     		movs	r0, r3
 4043 010a FFF7FEFF 		bl	HAL_DMA_GetError
 4044 010e 0300     		movs	r3, r0
 4045              		.loc 1 1916 12
 4046 0110 202B     		cmp	r3, #32
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 114


 4047 0112 05D1     		bne	.L161
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Set error code to DMA */
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 4048              		.loc 1 1919 28
 4049 0114 7B68     		ldr	r3, [r7, #4]
 4050 0116 8422     		movs	r2, #132
 4051 0118 1021     		movs	r1, #16
 4052 011a 9950     		str	r1, [r3, r2]
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
 4053              		.loc 1 1921 18
 4054 011c 0323     		movs	r3, #3
 4055 011e 17E0     		b	.L163
 4056              	.L161:
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Rx transfer counter */
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 4057              		.loc 1 1928 22
 4058 0120 7B68     		ldr	r3, [r7, #4]
 4059 0122 5A22     		movs	r2, #90
 4060 0124 0021     		movs	r1, #0
 4061 0126 9952     		strh	r1, [r3, r2]
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 4062              		.loc 1 1931 3
 4063 0128 7B68     		ldr	r3, [r7, #4]
 4064 012a 1B68     		ldr	r3, [r3]
 4065 012c 0F22     		movs	r2, #15
 4066 012e 1A62     		str	r2, [r3, #32]
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Discard the received data */
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4067              		.loc 1 1934 3
 4068 0130 7B68     		ldr	r3, [r7, #4]
 4069 0132 1B68     		ldr	r3, [r3]
 4070 0134 9A69     		ldr	r2, [r3, #24]
 4071 0136 7B68     		ldr	r3, [r7, #4]
 4072 0138 1B68     		ldr	r3, [r3]
 4073 013a 0821     		movs	r1, #8
 4074 013c 0A43     		orrs	r2, r1
 4075 013e 9A61     		str	r2, [r3, #24]
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4076              		.loc 1 1937 18
 4077 0140 7B68     		ldr	r3, [r7, #4]
 4078 0142 8022     		movs	r2, #128
 4079 0144 2021     		movs	r1, #32
 4080 0146 9950     		str	r1, [r3, r2]
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4081              		.loc 1 1938 24
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 115


 4082 0148 7B68     		ldr	r3, [r7, #4]
 4083 014a 0022     		movs	r2, #0
 4084 014c 1A66     		str	r2, [r3, #96]
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 4085              		.loc 1 1940 10
 4086 014e 0023     		movs	r3, #0
 4087              	.L163:
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4088              		.loc 1 1941 1
 4089 0150 1800     		movs	r0, r3
 4090 0152 BD46     		mov	sp, r7
 4091 0154 12B0     		add	sp, sp, #72
 4092              		@ sp needed
 4093 0156 80BD     		pop	{r7, pc}
 4094              	.L165:
 4095              		.align	2
 4096              	.L164:
 4097 0158 DFFEFFFF 		.word	-289
 4098              		.cfi_endproc
 4099              	.LFE58:
 4101              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 4102              		.align	1
 4103              		.global	HAL_UART_Abort_IT
 4104              		.syntax unified
 4105              		.code	16
 4106              		.thumb_func
 4108              	HAL_UART_Abort_IT:
 4109              	.LFB59:
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4110              		.loc 1 1958 1
 4111              		.cfi_startproc
 4112              		@ args = 0, pretend = 0, frame = 96
 4113              		@ frame_needed = 1, uses_anonymous_args = 0
 4114 0000 80B5     		push	{r7, lr}
 4115              	.LCFI57:
 4116              		.cfi_def_cfa_offset 8
 4117              		.cfi_offset 7, -8
 4118              		.cfi_offset 14, -4
 4119 0002 98B0     		sub	sp, sp, #96
 4120              	.LCFI58:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 116


 4121              		.cfi_def_cfa_offset 104
 4122 0004 00AF     		add	r7, sp, #0
 4123              	.LCFI59:
 4124              		.cfi_def_cfa_register 7
 4125 0006 7860     		str	r0, [r7, #4]
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 4126              		.loc 1 1959 12
 4127 0008 0123     		movs	r3, #1
 4128 000a FB65     		str	r3, [r7, #92]
 4129              	.LBB753:
 4130              	.LBB754:
 4131              	.LBB755:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4132              		.loc 2 386 3
 4133              		.syntax divided
 4134              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4135 000c EFF31083 		MRS r3, primask
 4136              	@ 0 "" 2
 4137              		.thumb
 4138              		.syntax unified
 4139 0010 3B63     		str	r3, [r7, #48]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4140              		.loc 2 387 9
 4141 0012 3B6B     		ldr	r3, [r7, #48]
 4142              	.LBE755:
 4143              	.LBE754:
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable interrupts */
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
 4144              		.loc 1 1962 3
 4145 0014 BB65     		str	r3, [r7, #88]
 4146 0016 0123     		movs	r3, #1
 4147 0018 7B63     		str	r3, [r7, #52]
 4148              	.LBB756:
 4149              	.LBB757:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4150              		.loc 2 414 3
 4151 001a 7B6B     		ldr	r3, [r7, #52]
 4152              		.syntax divided
 4153              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4154 001c 83F31088 		MSR primask, r3
 4155              	@ 0 "" 2
 4156              		.loc 2 415 1
 4157              		.thumb
 4158              		.syntax unified
 4159 0020 C046     		nop
 4160              	.LBE757:
 4161              	.LBE756:
 4162              		.loc 1 1962 3
 4163 0022 7B68     		ldr	r3, [r7, #4]
 4164 0024 1B68     		ldr	r3, [r3]
 4165 0026 1A68     		ldr	r2, [r3]
 4166 0028 7B68     		ldr	r3, [r7, #4]
 4167 002a 1B68     		ldr	r3, [r3]
 4168 002c 8049     		ldr	r1, .L183
 4169 002e 0A40     		ands	r2, r1
 4170 0030 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 117


 4171 0032 BB6D     		ldr	r3, [r7, #88]
 4172 0034 BB63     		str	r3, [r7, #56]
 4173              	.LBB758:
 4174              	.LBB759:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4175              		.loc 2 414 3
 4176 0036 BB6B     		ldr	r3, [r7, #56]
 4177              		.syntax divided
 4178              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4179 0038 83F31088 		MSR primask, r3
 4180              	@ 0 "" 2
 4181              		.loc 2 415 1
 4182              		.thumb
 4183              		.syntax unified
 4184 003c C046     		nop
 4185              	.LBE759:
 4186              	.LBE758:
 4187              	.LBE753:
 4188              	.LBB760:
 4189              	.LBB761:
 4190              	.LBB762:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4191              		.loc 2 386 3
 4192              		.syntax divided
 4193              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4194 003e EFF31083 		MRS r3, primask
 4195              	@ 0 "" 2
 4196              		.thumb
 4197              		.syntax unified
 4198 0042 FB63     		str	r3, [r7, #60]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4199              		.loc 2 387 9
 4200 0044 FB6B     		ldr	r3, [r7, #60]
 4201              	.LBE762:
 4202              	.LBE761:
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4203              		.loc 1 1963 3
 4204 0046 7B65     		str	r3, [r7, #84]
 4205 0048 0123     		movs	r3, #1
 4206 004a 3B64     		str	r3, [r7, #64]
 4207              	.LBB763:
 4208              	.LBB764:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4209              		.loc 2 414 3
 4210 004c 3B6C     		ldr	r3, [r7, #64]
 4211              		.syntax divided
 4212              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4213 004e 83F31088 		MSR primask, r3
 4214              	@ 0 "" 2
 4215              		.loc 2 415 1
 4216              		.thumb
 4217              		.syntax unified
 4218 0052 C046     		nop
 4219              	.LBE764:
 4220              	.LBE763:
 4221              		.loc 1 1963 3
 4222 0054 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 118


 4223 0056 1B68     		ldr	r3, [r3]
 4224 0058 9A68     		ldr	r2, [r3, #8]
 4225 005a 7B68     		ldr	r3, [r7, #4]
 4226 005c 1B68     		ldr	r3, [r3]
 4227 005e 0121     		movs	r1, #1
 4228 0060 8A43     		bics	r2, r1
 4229 0062 9A60     		str	r2, [r3, #8]
 4230 0064 7B6D     		ldr	r3, [r7, #84]
 4231 0066 7B64     		str	r3, [r7, #68]
 4232              	.LBB765:
 4233              	.LBB766:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4234              		.loc 2 414 3
 4235 0068 7B6C     		ldr	r3, [r7, #68]
 4236              		.syntax divided
 4237              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4238 006a 83F31088 		MSR primask, r3
 4239              	@ 0 "" 2
 4240              		.loc 2 415 1
 4241              		.thumb
 4242              		.syntax unified
 4243 006e C046     		nop
 4244              	.LBE766:
 4245              	.LBE765:
 4246              	.LBE760:
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4247              		.loc 1 1966 12
 4248 0070 7B68     		ldr	r3, [r7, #4]
 4249 0072 1B6E     		ldr	r3, [r3, #96]
 4250              		.loc 1 1966 6
 4251 0074 012B     		cmp	r3, #1
 4252 0076 18D1     		bne	.L169
 4253              	.LBB767:
 4254              	.LBB768:
 4255              	.LBB769:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4256              		.loc 2 386 3
 4257              		.syntax divided
 4258              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4259 0078 EFF31083 		MRS r3, primask
 4260              	@ 0 "" 2
 4261              		.thumb
 4262              		.syntax unified
 4263 007c 7B62     		str	r3, [r7, #36]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4264              		.loc 2 387 9
 4265 007e 7B6A     		ldr	r3, [r7, #36]
 4266              	.LBE769:
 4267              	.LBE768:
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4268              		.loc 1 1968 5
 4269 0080 3B65     		str	r3, [r7, #80]
 4270 0082 0123     		movs	r3, #1
 4271 0084 BB62     		str	r3, [r7, #40]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 119


 4272              	.LBB770:
 4273              	.LBB771:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4274              		.loc 2 414 3
 4275 0086 BB6A     		ldr	r3, [r7, #40]
 4276              		.syntax divided
 4277              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4278 0088 83F31088 		MSR primask, r3
 4279              	@ 0 "" 2
 4280              		.loc 2 415 1
 4281              		.thumb
 4282              		.syntax unified
 4283 008c C046     		nop
 4284              	.LBE771:
 4285              	.LBE770:
 4286              		.loc 1 1968 5
 4287 008e 7B68     		ldr	r3, [r7, #4]
 4288 0090 1B68     		ldr	r3, [r3]
 4289 0092 1A68     		ldr	r2, [r3]
 4290 0094 7B68     		ldr	r3, [r7, #4]
 4291 0096 1B68     		ldr	r3, [r3]
 4292 0098 1021     		movs	r1, #16
 4293 009a 8A43     		bics	r2, r1
 4294 009c 1A60     		str	r2, [r3]
 4295 009e 3B6D     		ldr	r3, [r7, #80]
 4296 00a0 FB62     		str	r3, [r7, #44]
 4297              	.LBB772:
 4298              	.LBB773:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4299              		.loc 2 414 3
 4300 00a2 FB6A     		ldr	r3, [r7, #44]
 4301              		.syntax divided
 4302              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4303 00a4 83F31088 		MSR primask, r3
 4304              	@ 0 "" 2
 4305              		.loc 2 415 1
 4306              		.thumb
 4307              		.syntax unified
 4308 00a8 C046     		nop
 4309              	.L169:
 4310              	.LBE773:
 4311              	.LBE772:
 4312              	.LBE767:
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      before any call to DMA Abort functions */
1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 4313              		.loc 1 1974 12
 4314 00aa 7B68     		ldr	r3, [r7, #4]
 4315 00ac 1B6F     		ldr	r3, [r3, #112]
 4316              		.loc 1 1974 6
 4317 00ae 002B     		cmp	r3, #0
 4318 00b0 0FD0     		beq	.L171
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 120


1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4319              		.loc 1 1978 9
 4320 00b2 7B68     		ldr	r3, [r7, #4]
 4321 00b4 1B68     		ldr	r3, [r3]
 4322 00b6 9B68     		ldr	r3, [r3, #8]
 4323 00b8 8022     		movs	r2, #128
 4324 00ba 1340     		ands	r3, r2
 4325              		.loc 1 1978 8
 4326 00bc 802B     		cmp	r3, #128
 4327 00be 04D1     		bne	.L172
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 4328              		.loc 1 1980 12
 4329 00c0 7B68     		ldr	r3, [r7, #4]
 4330 00c2 1B6F     		ldr	r3, [r3, #112]
 4331              		.loc 1 1980 40
 4332 00c4 5B4A     		ldr	r2, .L183+4
 4333 00c6 5A63     		str	r2, [r3, #52]
 4334 00c8 03E0     		b	.L171
 4335              	.L172:
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 4336              		.loc 1 1984 12
 4337 00ca 7B68     		ldr	r3, [r7, #4]
 4338 00cc 1B6F     		ldr	r3, [r3, #112]
 4339              		.loc 1 1984 40
 4340 00ce 0022     		movs	r2, #0
 4341 00d0 5A63     		str	r2, [r3, #52]
 4342              	.L171:
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 4343              		.loc 1 1988 12
 4344 00d2 7B68     		ldr	r3, [r7, #4]
 4345 00d4 5B6F     		ldr	r3, [r3, #116]
 4346              		.loc 1 1988 6
 4347 00d6 002B     		cmp	r3, #0
 4348 00d8 0FD0     		beq	.L173
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4349              		.loc 1 1992 9
 4350 00da 7B68     		ldr	r3, [r7, #4]
 4351 00dc 1B68     		ldr	r3, [r3]
 4352 00de 9B68     		ldr	r3, [r3, #8]
 4353 00e0 4022     		movs	r2, #64
 4354 00e2 1340     		ands	r3, r2
 4355              		.loc 1 1992 8
 4356 00e4 402B     		cmp	r3, #64
 4357 00e6 04D1     		bne	.L174
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 121


 4358              		.loc 1 1994 12
 4359 00e8 7B68     		ldr	r3, [r7, #4]
 4360 00ea 5B6F     		ldr	r3, [r3, #116]
 4361              		.loc 1 1994 40
 4362 00ec 524A     		ldr	r2, .L183+8
 4363 00ee 5A63     		str	r2, [r3, #52]
 4364 00f0 03E0     		b	.L173
 4365              	.L174:
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 4366              		.loc 1 1998 12
 4367 00f2 7B68     		ldr	r3, [r7, #4]
 4368 00f4 5B6F     		ldr	r3, [r3, #116]
 4369              		.loc 1 1998 40
 4370 00f6 0022     		movs	r2, #0
 4371 00f8 5A63     		str	r2, [r3, #52]
 4372              	.L173:
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4373              		.loc 1 2003 7
 4374 00fa 7B68     		ldr	r3, [r7, #4]
 4375 00fc 1B68     		ldr	r3, [r3]
 4376 00fe 9B68     		ldr	r3, [r3, #8]
 4377 0100 8022     		movs	r2, #128
 4378 0102 1340     		ands	r3, r2
 4379              		.loc 1 2003 6
 4380 0104 802B     		cmp	r3, #128
 4381 0106 2AD1     		bne	.L175
 4382              	.LBB774:
 4383              	.LBB775:
 4384              	.LBB776:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4385              		.loc 2 386 3
 4386              		.syntax divided
 4387              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4388 0108 EFF31083 		MRS r3, primask
 4389              	@ 0 "" 2
 4390              		.thumb
 4391              		.syntax unified
 4392 010c BB61     		str	r3, [r7, #24]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4393              		.loc 2 387 9
 4394 010e BB69     		ldr	r3, [r7, #24]
 4395              	.LBE776:
 4396              	.LBE775:
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4397              		.loc 1 2006 5
 4398 0110 FB64     		str	r3, [r7, #76]
 4399 0112 0123     		movs	r3, #1
 4400 0114 FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 122


 4401              	.LBB777:
 4402              	.LBB778:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4403              		.loc 2 414 3
 4404 0116 FB69     		ldr	r3, [r7, #28]
 4405              		.syntax divided
 4406              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4407 0118 83F31088 		MSR primask, r3
 4408              	@ 0 "" 2
 4409              		.loc 2 415 1
 4410              		.thumb
 4411              		.syntax unified
 4412 011c C046     		nop
 4413              	.LBE778:
 4414              	.LBE777:
 4415              		.loc 1 2006 5
 4416 011e 7B68     		ldr	r3, [r7, #4]
 4417 0120 1B68     		ldr	r3, [r3]
 4418 0122 9A68     		ldr	r2, [r3, #8]
 4419 0124 7B68     		ldr	r3, [r7, #4]
 4420 0126 1B68     		ldr	r3, [r3]
 4421 0128 8021     		movs	r1, #128
 4422 012a 8A43     		bics	r2, r1
 4423 012c 9A60     		str	r2, [r3, #8]
 4424 012e FB6C     		ldr	r3, [r7, #76]
 4425 0130 3B62     		str	r3, [r7, #32]
 4426              	.LBB779:
 4427              	.LBB780:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4428              		.loc 2 414 3
 4429 0132 3B6A     		ldr	r3, [r7, #32]
 4430              		.syntax divided
 4431              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4432 0134 83F31088 		MSR primask, r3
 4433              	@ 0 "" 2
 4434              		.loc 2 415 1
 4435              		.thumb
 4436              		.syntax unified
 4437 0138 C046     		nop
 4438              	.LBE780:
 4439              	.LBE779:
 4440              	.LBE774:
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4441              		.loc 1 2009 14
 4442 013a 7B68     		ldr	r3, [r7, #4]
 4443 013c 1B6F     		ldr	r3, [r3, #112]
 4444              		.loc 1 2009 8
 4445 013e 002B     		cmp	r3, #0
 4446 0140 0DD0     		beq	.L175
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 123


 4447              		.loc 1 2015 11
 4448 0142 7B68     		ldr	r3, [r7, #4]
 4449 0144 1B6F     		ldr	r3, [r3, #112]
 4450 0146 1800     		movs	r0, r3
 4451 0148 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4452 014c 031E     		subs	r3, r0, #0
 4453              		.loc 1 2015 10
 4454 014e 04D0     		beq	.L177
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 4455              		.loc 1 2017 14
 4456 0150 7B68     		ldr	r3, [r7, #4]
 4457 0152 1B6F     		ldr	r3, [r3, #112]
 4458              		.loc 1 2017 42
 4459 0154 0022     		movs	r2, #0
 4460 0156 5A63     		str	r2, [r3, #52]
 4461 0158 01E0     		b	.L175
 4462              	.L177:
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
 4463              		.loc 1 2021 19
 4464 015a 0023     		movs	r3, #0
 4465 015c FB65     		str	r3, [r7, #92]
 4466              	.L175:
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4467              		.loc 1 2027 7
 4468 015e 7B68     		ldr	r3, [r7, #4]
 4469 0160 1B68     		ldr	r3, [r3]
 4470 0162 9B68     		ldr	r3, [r3, #8]
 4471 0164 4022     		movs	r2, #64
 4472 0166 1340     		ands	r3, r2
 4473              		.loc 1 2027 6
 4474 0168 402B     		cmp	r3, #64
 4475 016a 2CD1     		bne	.L178
 4476              	.LBB781:
 4477              	.LBB782:
 4478              	.LBB783:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4479              		.loc 2 386 3
 4480              		.syntax divided
 4481              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4482 016c EFF31083 		MRS r3, primask
 4483              	@ 0 "" 2
 4484              		.thumb
 4485              		.syntax unified
 4486 0170 FB60     		str	r3, [r7, #12]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4487              		.loc 2 387 9
 4488 0172 FB68     		ldr	r3, [r7, #12]
 4489              	.LBE783:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 124


 4490              	.LBE782:
2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4491              		.loc 1 2030 5
 4492 0174 BB64     		str	r3, [r7, #72]
 4493 0176 0123     		movs	r3, #1
 4494 0178 3B61     		str	r3, [r7, #16]
 4495              	.LBB784:
 4496              	.LBB785:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4497              		.loc 2 414 3
 4498 017a 3B69     		ldr	r3, [r7, #16]
 4499              		.syntax divided
 4500              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4501 017c 83F31088 		MSR primask, r3
 4502              	@ 0 "" 2
 4503              		.loc 2 415 1
 4504              		.thumb
 4505              		.syntax unified
 4506 0180 C046     		nop
 4507              	.LBE785:
 4508              	.LBE784:
 4509              		.loc 1 2030 5
 4510 0182 7B68     		ldr	r3, [r7, #4]
 4511 0184 1B68     		ldr	r3, [r3]
 4512 0186 9A68     		ldr	r2, [r3, #8]
 4513 0188 7B68     		ldr	r3, [r7, #4]
 4514 018a 1B68     		ldr	r3, [r3]
 4515 018c 4021     		movs	r1, #64
 4516 018e 8A43     		bics	r2, r1
 4517 0190 9A60     		str	r2, [r3, #8]
 4518 0192 BB6C     		ldr	r3, [r7, #72]
 4519 0194 7B61     		str	r3, [r7, #20]
 4520              	.LBB786:
 4521              	.LBB787:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4522              		.loc 2 414 3
 4523 0196 7B69     		ldr	r3, [r7, #20]
 4524              		.syntax divided
 4525              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4526 0198 83F31088 		MSR primask, r3
 4527              	@ 0 "" 2
 4528              		.loc 2 415 1
 4529              		.thumb
 4530              		.syntax unified
 4531 019c C046     		nop
 4532              	.LBE787:
 4533              	.LBE786:
 4534              	.LBE781:
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4535              		.loc 1 2033 14
 4536 019e 7B68     		ldr	r3, [r7, #4]
 4537 01a0 5B6F     		ldr	r3, [r3, #116]
 4538              		.loc 1 2033 8
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 125


 4539 01a2 002B     		cmp	r3, #0
 4540 01a4 0FD0     		beq	.L178
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4541              		.loc 1 2039 11
 4542 01a6 7B68     		ldr	r3, [r7, #4]
 4543 01a8 5B6F     		ldr	r3, [r3, #116]
 4544 01aa 1800     		movs	r0, r3
 4545 01ac FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4546 01b0 031E     		subs	r3, r0, #0
 4547              		.loc 1 2039 10
 4548 01b2 06D0     		beq	.L180
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 4549              		.loc 1 2041 14
 4550 01b4 7B68     		ldr	r3, [r7, #4]
 4551 01b6 5B6F     		ldr	r3, [r3, #116]
 4552              		.loc 1 2041 42
 4553 01b8 0022     		movs	r2, #0
 4554 01ba 5A63     		str	r2, [r3, #52]
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
 4555              		.loc 1 2042 19
 4556 01bc 0123     		movs	r3, #1
 4557 01be FB65     		str	r3, [r7, #92]
 4558 01c0 01E0     		b	.L178
 4559              	.L180:
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
 4560              		.loc 1 2046 19
 4561 01c2 0023     		movs	r3, #0
 4562 01c4 FB65     		str	r3, [r7, #92]
 4563              	.L178:
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (abortcplt == 1U)
 4564              		.loc 1 2052 6
 4565 01c6 FB6D     		ldr	r3, [r7, #92]
 4566 01c8 012B     		cmp	r3, #1
 4567 01ca 2BD1     		bne	.L181
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
 4568              		.loc 1 2055 24
 4569 01cc 7B68     		ldr	r3, [r7, #4]
 4570 01ce 5222     		movs	r2, #82
 4571 01d0 0021     		movs	r1, #0
 4572 01d2 9952     		strh	r1, [r3, r2]
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 126


 4573              		.loc 1 2056 24
 4574 01d4 7B68     		ldr	r3, [r7, #4]
 4575 01d6 5A22     		movs	r2, #90
 4576 01d8 0021     		movs	r1, #0
 4577 01da 9952     		strh	r1, [r3, r2]
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear ISR function pointers */
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxISR = NULL;
 4578              		.loc 1 2059 18
 4579 01dc 7B68     		ldr	r3, [r7, #4]
 4580 01de 0022     		movs	r2, #0
 4581 01e0 9A66     		str	r2, [r3, #104]
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxISR = NULL;
 4582              		.loc 1 2060 18
 4583 01e2 7B68     		ldr	r3, [r7, #4]
 4584 01e4 0022     		movs	r2, #0
 4585 01e6 DA66     		str	r2, [r3, #108]
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset errorCode */
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 4586              		.loc 1 2063 22
 4587 01e8 7B68     		ldr	r3, [r7, #4]
 4588 01ea 8422     		movs	r2, #132
 4589 01ec 0021     		movs	r1, #0
 4590 01ee 9950     		str	r1, [r3, r2]
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 4591              		.loc 1 2066 5
 4592 01f0 7B68     		ldr	r3, [r7, #4]
 4593 01f2 1B68     		ldr	r3, [r3]
 4594 01f4 0F22     		movs	r2, #15
 4595 01f6 1A62     		str	r2, [r3, #32]
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Discard the received data */
2070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4596              		.loc 1 2070 5
 4597 01f8 7B68     		ldr	r3, [r7, #4]
 4598 01fa 1B68     		ldr	r3, [r3]
 4599 01fc 9A69     		ldr	r2, [r3, #24]
 4600 01fe 7B68     		ldr	r3, [r7, #4]
 4601 0200 1B68     		ldr	r3, [r3]
 4602 0202 0821     		movs	r1, #8
 4603 0204 0A43     		orrs	r2, r1
 4604 0206 9A61     		str	r2, [r3, #24]
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 4605              		.loc 1 2073 20
 4606 0208 7B68     		ldr	r3, [r7, #4]
 4607 020a 2022     		movs	r2, #32
 4608 020c DA67     		str	r2, [r3, #124]
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4609              		.loc 1 2074 20
 4610 020e 7B68     		ldr	r3, [r7, #4]
 4611 0210 8022     		movs	r2, #128
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 127


 4612 0212 2021     		movs	r1, #32
 4613 0214 9950     		str	r1, [r3, r2]
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4614              		.loc 1 2075 26
 4615 0216 7B68     		ldr	r3, [r7, #4]
 4616 0218 0022     		movs	r2, #0
 4617 021a 1A66     		str	r2, [r3, #96]
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call registered Abort complete callback */
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 4618              		.loc 1 2083 5
 4619 021c 7B68     		ldr	r3, [r7, #4]
 4620 021e 1800     		movs	r0, r3
 4621 0220 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4622              	.L181:
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 4623              		.loc 1 2087 10
 4624 0224 0023     		movs	r3, #0
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4625              		.loc 1 2088 1
 4626 0226 1800     		movs	r0, r3
 4627 0228 BD46     		mov	sp, r7
 4628 022a 18B0     		add	sp, sp, #96
 4629              		@ sp needed
 4630 022c 80BD     		pop	{r7, pc}
 4631              	.L184:
 4632 022e C046     		.align	2
 4633              	.L183:
 4634 0230 1FFEFFFF 		.word	-481
 4635 0234 00000000 		.word	UART_DMATxAbortCallback
 4636 0238 00000000 		.word	UART_DMARxAbortCallback
 4637              		.cfi_endproc
 4638              	.LFE59:
 4640              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 4641              		.align	1
 4642              		.global	HAL_UART_AbortTransmit_IT
 4643              		.syntax unified
 4644              		.code	16
 4645              		.thumb_func
 4647              	HAL_UART_AbortTransmit_IT:
 4648              	.LFB60:
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 128


2097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4649              		.loc 1 2105 1
 4650              		.cfi_startproc
 4651              		@ args = 0, pretend = 0, frame = 40
 4652              		@ frame_needed = 1, uses_anonymous_args = 0
 4653 0000 80B5     		push	{r7, lr}
 4654              	.LCFI60:
 4655              		.cfi_def_cfa_offset 8
 4656              		.cfi_offset 7, -8
 4657              		.cfi_offset 14, -4
 4658 0002 8AB0     		sub	sp, sp, #40
 4659              	.LCFI61:
 4660              		.cfi_def_cfa_offset 48
 4661 0004 00AF     		add	r7, sp, #0
 4662              	.LCFI62:
 4663              		.cfi_def_cfa_register 7
 4664 0006 7860     		str	r0, [r7, #4]
 4665              	.LBB788:
 4666              	.LBB789:
 4667              	.LBB790:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4668              		.loc 2 386 3
 4669              		.syntax divided
 4670              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4671 0008 EFF31083 		MRS r3, primask
 4672              	@ 0 "" 2
 4673              		.thumb
 4674              		.syntax unified
 4675 000c 7B61     		str	r3, [r7, #20]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4676              		.loc 2 387 9
 4677 000e 7B69     		ldr	r3, [r7, #20]
 4678              	.LBE790:
 4679              	.LBE789:
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable interrupts */
2107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 4680              		.loc 1 2107 3
 4681 0010 7B62     		str	r3, [r7, #36]
 4682 0012 0123     		movs	r3, #1
 4683 0014 BB61     		str	r3, [r7, #24]
 4684              	.LBB791:
 4685              	.LBB792:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4686              		.loc 2 414 3
 4687 0016 BB69     		ldr	r3, [r7, #24]
 4688              		.syntax divided
 4689              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4690 0018 83F31088 		MSR primask, r3
 4691              	@ 0 "" 2
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 129


 4692              		.loc 2 415 1
 4693              		.thumb
 4694              		.syntax unified
 4695 001c C046     		nop
 4696              	.LBE792:
 4697              	.LBE791:
 4698              		.loc 1 2107 3
 4699 001e 7B68     		ldr	r3, [r7, #4]
 4700 0020 1B68     		ldr	r3, [r3]
 4701 0022 1A68     		ldr	r2, [r3]
 4702 0024 7B68     		ldr	r3, [r7, #4]
 4703 0026 1B68     		ldr	r3, [r3]
 4704 0028 C021     		movs	r1, #192
 4705 002a 8A43     		bics	r2, r1
 4706 002c 1A60     		str	r2, [r3]
 4707 002e 7B6A     		ldr	r3, [r7, #36]
 4708 0030 FB61     		str	r3, [r7, #28]
 4709              	.LBB793:
 4710              	.LBB794:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4711              		.loc 2 414 3
 4712 0032 FB69     		ldr	r3, [r7, #28]
 4713              		.syntax divided
 4714              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4715 0034 83F31088 		MSR primask, r3
 4716              	@ 0 "" 2
 4717              		.loc 2 415 1
 4718              		.thumb
 4719              		.syntax unified
 4720 0038 C046     		nop
 4721              	.LBE794:
 4722              	.LBE793:
 4723              	.LBE788:
2108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4724              		.loc 1 2110 7
 4725 003a 7B68     		ldr	r3, [r7, #4]
 4726 003c 1B68     		ldr	r3, [r3]
 4727 003e 9B68     		ldr	r3, [r3, #8]
 4728 0040 8022     		movs	r2, #128
 4729 0042 1340     		ands	r3, r2
 4730              		.loc 1 2110 6
 4731 0044 802B     		cmp	r3, #128
 4732 0046 3ED1     		bne	.L187
 4733              	.LBB795:
 4734              	.LBB796:
 4735              	.LBB797:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4736              		.loc 2 386 3
 4737              		.syntax divided
 4738              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4739 0048 EFF31083 		MRS r3, primask
 4740              	@ 0 "" 2
 4741              		.thumb
 4742              		.syntax unified
 4743 004c BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 130


 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4744              		.loc 2 387 9
 4745 004e BB68     		ldr	r3, [r7, #8]
 4746              	.LBE797:
 4747              	.LBE796:
2111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4748              		.loc 1 2113 5
 4749 0050 3B62     		str	r3, [r7, #32]
 4750 0052 0123     		movs	r3, #1
 4751 0054 FB60     		str	r3, [r7, #12]
 4752              	.LBB798:
 4753              	.LBB799:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4754              		.loc 2 414 3
 4755 0056 FB68     		ldr	r3, [r7, #12]
 4756              		.syntax divided
 4757              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4758 0058 83F31088 		MSR primask, r3
 4759              	@ 0 "" 2
 4760              		.loc 2 415 1
 4761              		.thumb
 4762              		.syntax unified
 4763 005c C046     		nop
 4764              	.LBE799:
 4765              	.LBE798:
 4766              		.loc 1 2113 5
 4767 005e 7B68     		ldr	r3, [r7, #4]
 4768 0060 1B68     		ldr	r3, [r3]
 4769 0062 9A68     		ldr	r2, [r3, #8]
 4770 0064 7B68     		ldr	r3, [r7, #4]
 4771 0066 1B68     		ldr	r3, [r3]
 4772 0068 8021     		movs	r1, #128
 4773 006a 8A43     		bics	r2, r1
 4774 006c 9A60     		str	r2, [r3, #8]
 4775 006e 3B6A     		ldr	r3, [r7, #32]
 4776 0070 3B61     		str	r3, [r7, #16]
 4777              	.LBB800:
 4778              	.LBB801:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4779              		.loc 2 414 3
 4780 0072 3B69     		ldr	r3, [r7, #16]
 4781              		.syntax divided
 4782              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4783 0074 83F31088 		MSR primask, r3
 4784              	@ 0 "" 2
 4785              		.loc 2 415 1
 4786              		.thumb
 4787              		.syntax unified
 4788 0078 C046     		nop
 4789              	.LBE801:
 4790              	.LBE800:
 4791              	.LBE795:
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 131


 4792              		.loc 1 2116 14
 4793 007a 7B68     		ldr	r3, [r7, #4]
 4794 007c 1B6F     		ldr	r3, [r3, #112]
 4795              		.loc 1 2116 8
 4796 007e 002B     		cmp	r3, #0
 4797 0080 12D0     		beq	.L189
2117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 4798              		.loc 1 2120 12
 4799 0082 7B68     		ldr	r3, [r7, #4]
 4800 0084 1B6F     		ldr	r3, [r3, #112]
 4801              		.loc 1 2120 40
 4802 0086 194A     		ldr	r2, .L192
 4803 0088 5A63     		str	r2, [r3, #52]
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4804              		.loc 1 2123 11
 4805 008a 7B68     		ldr	r3, [r7, #4]
 4806 008c 1B6F     		ldr	r3, [r3, #112]
 4807 008e 1800     		movs	r0, r3
 4808 0090 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4809 0094 031E     		subs	r3, r0, #0
 4810              		.loc 1 2123 10
 4811 0096 24D0     		beq	.L190
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 4812              		.loc 1 2126 14
 4813 0098 7B68     		ldr	r3, [r7, #4]
 4814 009a 1B6F     		ldr	r3, [r3, #112]
 4815              		.loc 1 2126 22
 4816 009c 5A6B     		ldr	r2, [r3, #52]
 4817              		.loc 1 2126 47
 4818 009e 7B68     		ldr	r3, [r7, #4]
 4819 00a0 1B6F     		ldr	r3, [r3, #112]
 4820              		.loc 1 2126 9
 4821 00a2 1800     		movs	r0, r3
 4822 00a4 9047     		blx	r2
 4823              	.LVL0:
 4824 00a6 1CE0     		b	.L190
 4825              	.L189:
2127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Tx transfer counter */
2132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount = 0U;
 4826              		.loc 1 2132 26
 4827 00a8 7B68     		ldr	r3, [r7, #4]
 4828 00aa 5222     		movs	r2, #82
 4829 00ac 0021     		movs	r1, #0
 4830 00ae 9952     		strh	r1, [r3, r2]
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear TxISR function pointers */
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 132


2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxISR = NULL;
 4831              		.loc 1 2135 20
 4832 00b0 7B68     		ldr	r3, [r7, #4]
 4833 00b2 0022     		movs	r2, #0
 4834 00b4 DA66     		str	r2, [r3, #108]
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 4835              		.loc 1 2138 21
 4836 00b6 7B68     		ldr	r3, [r7, #4]
 4837 00b8 2022     		movs	r2, #32
 4838 00ba DA67     		str	r2, [r3, #124]
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 4839              		.loc 1 2146 7
 4840 00bc 7B68     		ldr	r3, [r7, #4]
 4841 00be 1800     		movs	r0, r3
 4842 00c0 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4843 00c4 0DE0     		b	.L190
 4844              	.L187:
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx transfer counter */
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
 4845              		.loc 1 2153 24
 4846 00c6 7B68     		ldr	r3, [r7, #4]
 4847 00c8 5222     		movs	r2, #82
 4848 00ca 0021     		movs	r1, #0
 4849 00cc 9952     		strh	r1, [r3, r2]
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear TxISR function pointers */
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxISR = NULL;
 4850              		.loc 1 2156 18
 4851 00ce 7B68     		ldr	r3, [r7, #4]
 4852 00d0 0022     		movs	r2, #0
 4853 00d2 DA66     		str	r2, [r3, #108]
2157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 4854              		.loc 1 2160 19
 4855 00d4 7B68     		ldr	r3, [r7, #4]
 4856 00d6 2022     		movs	r2, #32
 4857 00d8 DA67     		str	r2, [r3, #124]
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 133


2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 4858              		.loc 1 2168 5
 4859 00da 7B68     		ldr	r3, [r7, #4]
 4860 00dc 1800     		movs	r0, r3
 4861 00de FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4862              	.L190:
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 4863              		.loc 1 2172 10
 4864 00e2 0023     		movs	r3, #0
2173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4865              		.loc 1 2173 1
 4866 00e4 1800     		movs	r0, r3
 4867 00e6 BD46     		mov	sp, r7
 4868 00e8 0AB0     		add	sp, sp, #40
 4869              		@ sp needed
 4870 00ea 80BD     		pop	{r7, pc}
 4871              	.L193:
 4872              		.align	2
 4873              	.L192:
 4874 00ec 00000000 		.word	UART_DMATxOnlyAbortCallback
 4875              		.cfi_endproc
 4876              	.LFE60:
 4878              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 4879              		.align	1
 4880              		.global	HAL_UART_AbortReceive_IT
 4881              		.syntax unified
 4882              		.code	16
 4883              		.thumb_func
 4885              	HAL_UART_AbortReceive_IT:
 4886              	.LFB61:
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4887              		.loc 1 2190 1
 4888              		.cfi_startproc
 4889              		@ args = 0, pretend = 0, frame = 72
 4890              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 134


 4891 0000 80B5     		push	{r7, lr}
 4892              	.LCFI63:
 4893              		.cfi_def_cfa_offset 8
 4894              		.cfi_offset 7, -8
 4895              		.cfi_offset 14, -4
 4896 0002 92B0     		sub	sp, sp, #72
 4897              	.LCFI64:
 4898              		.cfi_def_cfa_offset 80
 4899 0004 00AF     		add	r7, sp, #0
 4900              	.LCFI65:
 4901              		.cfi_def_cfa_register 7
 4902 0006 7860     		str	r0, [r7, #4]
 4903              	.LBB802:
 4904              	.LBB803:
 4905              	.LBB804:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4906              		.loc 2 386 3
 4907              		.syntax divided
 4908              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4909 0008 EFF31083 		MRS r3, primask
 4910              	@ 0 "" 2
 4911              		.thumb
 4912              		.syntax unified
 4913 000c 3B62     		str	r3, [r7, #32]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4914              		.loc 2 387 9
 4915 000e 3B6A     		ldr	r3, [r7, #32]
 4916              	.LBE804:
 4917              	.LBE803:
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4918              		.loc 1 2192 3
 4919 0010 7B64     		str	r3, [r7, #68]
 4920 0012 0123     		movs	r3, #1
 4921 0014 7B62     		str	r3, [r7, #36]
 4922              	.LBB805:
 4923              	.LBB806:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4924              		.loc 2 414 3
 4925 0016 7B6A     		ldr	r3, [r7, #36]
 4926              		.syntax divided
 4927              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4928 0018 83F31088 		MSR primask, r3
 4929              	@ 0 "" 2
 4930              		.loc 2 415 1
 4931              		.thumb
 4932              		.syntax unified
 4933 001c C046     		nop
 4934              	.LBE806:
 4935              	.LBE805:
 4936              		.loc 1 2192 3
 4937 001e 7B68     		ldr	r3, [r7, #4]
 4938 0020 1B68     		ldr	r3, [r3]
 4939 0022 1A68     		ldr	r2, [r3]
 4940 0024 7B68     		ldr	r3, [r7, #4]
 4941 0026 1B68     		ldr	r3, [r3]
 4942 0028 5749     		ldr	r1, .L204
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 135


 4943 002a 0A40     		ands	r2, r1
 4944 002c 1A60     		str	r2, [r3]
 4945 002e 7B6C     		ldr	r3, [r7, #68]
 4946 0030 BB62     		str	r3, [r7, #40]
 4947              	.LBB807:
 4948              	.LBB808:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4949              		.loc 2 414 3
 4950 0032 BB6A     		ldr	r3, [r7, #40]
 4951              		.syntax divided
 4952              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4953 0034 83F31088 		MSR primask, r3
 4954              	@ 0 "" 2
 4955              		.loc 2 415 1
 4956              		.thumb
 4957              		.syntax unified
 4958 0038 C046     		nop
 4959              	.LBE808:
 4960              	.LBE807:
 4961              	.LBE802:
 4962              	.LBB809:
 4963              	.LBB810:
 4964              	.LBB811:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 4965              		.loc 2 386 3
 4966              		.syntax divided
 4967              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4968 003a EFF31083 		MRS r3, primask
 4969              	@ 0 "" 2
 4970              		.thumb
 4971              		.syntax unified
 4972 003e FB62     		str	r3, [r7, #44]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4973              		.loc 2 387 9
 4974 0040 FB6A     		ldr	r3, [r7, #44]
 4975              	.LBE811:
 4976              	.LBE810:
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4977              		.loc 1 2193 3
 4978 0042 3B64     		str	r3, [r7, #64]
 4979 0044 0123     		movs	r3, #1
 4980 0046 3B63     		str	r3, [r7, #48]
 4981              	.LBB812:
 4982              	.LBB813:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4983              		.loc 2 414 3
 4984 0048 3B6B     		ldr	r3, [r7, #48]
 4985              		.syntax divided
 4986              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4987 004a 83F31088 		MSR primask, r3
 4988              	@ 0 "" 2
 4989              		.loc 2 415 1
 4990              		.thumb
 4991              		.syntax unified
 4992 004e C046     		nop
 4993              	.LBE813:
 4994              	.LBE812:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 136


 4995              		.loc 1 2193 3
 4996 0050 7B68     		ldr	r3, [r7, #4]
 4997 0052 1B68     		ldr	r3, [r3]
 4998 0054 9A68     		ldr	r2, [r3, #8]
 4999 0056 7B68     		ldr	r3, [r7, #4]
 5000 0058 1B68     		ldr	r3, [r3]
 5001 005a 0121     		movs	r1, #1
 5002 005c 8A43     		bics	r2, r1
 5003 005e 9A60     		str	r2, [r3, #8]
 5004 0060 3B6C     		ldr	r3, [r7, #64]
 5005 0062 7B63     		str	r3, [r7, #52]
 5006              	.LBB814:
 5007              	.LBB815:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5008              		.loc 2 414 3
 5009 0064 7B6B     		ldr	r3, [r7, #52]
 5010              		.syntax divided
 5011              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5012 0066 83F31088 		MSR primask, r3
 5013              	@ 0 "" 2
 5014              		.loc 2 415 1
 5015              		.thumb
 5016              		.syntax unified
 5017 006a C046     		nop
 5018              	.LBE815:
 5019              	.LBE814:
 5020              	.LBE809:
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5021              		.loc 1 2196 12
 5022 006c 7B68     		ldr	r3, [r7, #4]
 5023 006e 1B6E     		ldr	r3, [r3, #96]
 5024              		.loc 1 2196 6
 5025 0070 012B     		cmp	r3, #1
 5026 0072 18D1     		bne	.L197
 5027              	.LBB816:
 5028              	.LBB817:
 5029              	.LBB818:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5030              		.loc 2 386 3
 5031              		.syntax divided
 5032              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5033 0074 EFF31083 		MRS r3, primask
 5034              	@ 0 "" 2
 5035              		.thumb
 5036              		.syntax unified
 5037 0078 7B61     		str	r3, [r7, #20]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5038              		.loc 2 387 9
 5039 007a 7B69     		ldr	r3, [r7, #20]
 5040              	.LBE818:
 5041              	.LBE817:
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 5042              		.loc 1 2198 5
 5043 007c FB63     		str	r3, [r7, #60]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 137


 5044 007e 0123     		movs	r3, #1
 5045 0080 BB61     		str	r3, [r7, #24]
 5046              	.LBB819:
 5047              	.LBB820:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5048              		.loc 2 414 3
 5049 0082 BB69     		ldr	r3, [r7, #24]
 5050              		.syntax divided
 5051              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5052 0084 83F31088 		MSR primask, r3
 5053              	@ 0 "" 2
 5054              		.loc 2 415 1
 5055              		.thumb
 5056              		.syntax unified
 5057 0088 C046     		nop
 5058              	.LBE820:
 5059              	.LBE819:
 5060              		.loc 1 2198 5
 5061 008a 7B68     		ldr	r3, [r7, #4]
 5062 008c 1B68     		ldr	r3, [r3]
 5063 008e 1A68     		ldr	r2, [r3]
 5064 0090 7B68     		ldr	r3, [r7, #4]
 5065 0092 1B68     		ldr	r3, [r3]
 5066 0094 1021     		movs	r1, #16
 5067 0096 8A43     		bics	r2, r1
 5068 0098 1A60     		str	r2, [r3]
 5069 009a FB6B     		ldr	r3, [r7, #60]
 5070 009c FB61     		str	r3, [r7, #28]
 5071              	.LBB821:
 5072              	.LBB822:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5073              		.loc 2 414 3
 5074 009e FB69     		ldr	r3, [r7, #28]
 5075              		.syntax divided
 5076              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5077 00a0 83F31088 		MSR primask, r3
 5078              	@ 0 "" 2
 5079              		.loc 2 415 1
 5080              		.thumb
 5081              		.syntax unified
 5082 00a4 C046     		nop
 5083              	.L197:
 5084              	.LBE822:
 5085              	.LBE821:
 5086              	.LBE816:
2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5087              		.loc 1 2202 7
 5088 00a6 7B68     		ldr	r3, [r7, #4]
 5089 00a8 1B68     		ldr	r3, [r3]
 5090 00aa 9B68     		ldr	r3, [r3, #8]
 5091 00ac 4022     		movs	r2, #64
 5092 00ae 1340     		ands	r3, r2
 5093              		.loc 1 2202 6
 5094 00b0 402B     		cmp	r3, #64
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 138


 5095 00b2 4ED1     		bne	.L199
 5096              	.LBB823:
 5097              	.LBB824:
 5098              	.LBB825:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5099              		.loc 2 386 3
 5100              		.syntax divided
 5101              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5102 00b4 EFF31083 		MRS r3, primask
 5103              	@ 0 "" 2
 5104              		.thumb
 5105              		.syntax unified
 5106 00b8 BB60     		str	r3, [r7, #8]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5107              		.loc 2 387 9
 5108 00ba BB68     		ldr	r3, [r7, #8]
 5109              	.LBE825:
 5110              	.LBE824:
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
2205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5111              		.loc 1 2205 5
 5112 00bc BB63     		str	r3, [r7, #56]
 5113 00be 0123     		movs	r3, #1
 5114 00c0 FB60     		str	r3, [r7, #12]
 5115              	.LBB826:
 5116              	.LBB827:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5117              		.loc 2 414 3
 5118 00c2 FB68     		ldr	r3, [r7, #12]
 5119              		.syntax divided
 5120              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5121 00c4 83F31088 		MSR primask, r3
 5122              	@ 0 "" 2
 5123              		.loc 2 415 1
 5124              		.thumb
 5125              		.syntax unified
 5126 00c8 C046     		nop
 5127              	.LBE827:
 5128              	.LBE826:
 5129              		.loc 1 2205 5
 5130 00ca 7B68     		ldr	r3, [r7, #4]
 5131 00cc 1B68     		ldr	r3, [r3]
 5132 00ce 9A68     		ldr	r2, [r3, #8]
 5133 00d0 7B68     		ldr	r3, [r7, #4]
 5134 00d2 1B68     		ldr	r3, [r3]
 5135 00d4 4021     		movs	r1, #64
 5136 00d6 8A43     		bics	r2, r1
 5137 00d8 9A60     		str	r2, [r3, #8]
 5138 00da BB6B     		ldr	r3, [r7, #56]
 5139 00dc 3B61     		str	r3, [r7, #16]
 5140              	.LBB828:
 5141              	.LBB829:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5142              		.loc 2 414 3
 5143 00de 3B69     		ldr	r3, [r7, #16]
 5144              		.syntax divided
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 139


 5145              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5146 00e0 83F31088 		MSR primask, r3
 5147              	@ 0 "" 2
 5148              		.loc 2 415 1
 5149              		.thumb
 5150              		.syntax unified
 5151 00e4 C046     		nop
 5152              	.LBE829:
 5153              	.LBE828:
 5154              	.LBE823:
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 5155              		.loc 1 2208 14
 5156 00e6 7B68     		ldr	r3, [r7, #4]
 5157 00e8 5B6F     		ldr	r3, [r3, #116]
 5158              		.loc 1 2208 8
 5159 00ea 002B     		cmp	r3, #0
 5160 00ec 12D0     		beq	.L201
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 5161              		.loc 1 2212 12
 5162 00ee 7B68     		ldr	r3, [r7, #4]
 5163 00f0 5B6F     		ldr	r3, [r3, #116]
 5164              		.loc 1 2212 40
 5165 00f2 264A     		ldr	r2, .L204+4
 5166 00f4 5A63     		str	r2, [r3, #52]
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5167              		.loc 1 2215 11
 5168 00f6 7B68     		ldr	r3, [r7, #4]
 5169 00f8 5B6F     		ldr	r3, [r3, #116]
 5170 00fa 1800     		movs	r0, r3
 5171 00fc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5172 0100 031E     		subs	r3, r0, #0
 5173              		.loc 1 2215 10
 5174 0102 3CD0     		beq	.L202
2216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 5175              		.loc 1 2218 14
 5176 0104 7B68     		ldr	r3, [r7, #4]
 5177 0106 5B6F     		ldr	r3, [r3, #116]
 5178              		.loc 1 2218 22
 5179 0108 5A6B     		ldr	r2, [r3, #52]
 5180              		.loc 1 2218 47
 5181 010a 7B68     		ldr	r3, [r7, #4]
 5182 010c 5B6F     		ldr	r3, [r3, #116]
 5183              		.loc 1 2218 9
 5184 010e 1800     		movs	r0, r3
 5185 0110 9047     		blx	r2
 5186              	.LVL1:
 5187 0112 34E0     		b	.L202
 5188              	.L201:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 140


2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Rx transfer counter */
2224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount = 0U;
 5189              		.loc 1 2224 26
 5190 0114 7B68     		ldr	r3, [r7, #4]
 5191 0116 5A22     		movs	r2, #90
 5192 0118 0021     		movs	r1, #0
 5193 011a 9952     		strh	r1, [r3, r2]
2225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear RxISR function pointer */
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
 5194              		.loc 1 2227 25
 5195 011c 7B68     		ldr	r3, [r7, #4]
 5196 011e 0022     		movs	r2, #0
 5197 0120 5A65     		str	r2, [r3, #84]
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
 5198              		.loc 1 2230 7
 5199 0122 7B68     		ldr	r3, [r7, #4]
 5200 0124 1B68     		ldr	r3, [r3]
 5201 0126 0F22     		movs	r2, #15
 5202 0128 1A62     		str	r2, [r3, #32]
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Discard the received data */
2233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 5203              		.loc 1 2233 7
 5204 012a 7B68     		ldr	r3, [r7, #4]
 5205 012c 1B68     		ldr	r3, [r3]
 5206 012e 9A69     		ldr	r2, [r3, #24]
 5207 0130 7B68     		ldr	r3, [r7, #4]
 5208 0132 1B68     		ldr	r3, [r3]
 5209 0134 0821     		movs	r1, #8
 5210 0136 0A43     		orrs	r2, r1
 5211 0138 9A61     		str	r2, [r3, #24]
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 5212              		.loc 1 2236 22
 5213 013a 7B68     		ldr	r3, [r7, #4]
 5214 013c 8022     		movs	r2, #128
 5215 013e 2021     		movs	r1, #32
 5216 0140 9950     		str	r1, [r3, r2]
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5217              		.loc 1 2237 28
 5218 0142 7B68     		ldr	r3, [r7, #4]
 5219 0144 0022     		movs	r2, #0
 5220 0146 1A66     		str	r2, [r3, #96]
2238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 141


2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 5221              		.loc 1 2245 7
 5222 0148 7B68     		ldr	r3, [r7, #4]
 5223 014a 1800     		movs	r0, r3
 5224 014c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 5225 0150 15E0     		b	.L202
 5226              	.L199:
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Rx transfer counter */
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 5227              		.loc 1 2252 24
 5228 0152 7B68     		ldr	r3, [r7, #4]
 5229 0154 5A22     		movs	r2, #90
 5230 0156 0021     		movs	r1, #0
 5231 0158 9952     		strh	r1, [r3, r2]
2253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RxISR function pointer */
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
 5232              		.loc 1 2255 23
 5233 015a 7B68     		ldr	r3, [r7, #4]
 5234 015c 0022     		movs	r2, #0
 5235 015e 5A65     		str	r2, [r3, #84]
2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 5236              		.loc 1 2258 5
 5237 0160 7B68     		ldr	r3, [r7, #4]
 5238 0162 1B68     		ldr	r3, [r3]
 5239 0164 0F22     		movs	r2, #15
 5240 0166 1A62     		str	r2, [r3, #32]
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 5241              		.loc 1 2261 20
 5242 0168 7B68     		ldr	r3, [r7, #4]
 5243 016a 8022     		movs	r2, #128
 5244 016c 2021     		movs	r1, #32
 5245 016e 9950     		str	r1, [r3, r2]
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5246              		.loc 1 2262 26
 5247 0170 7B68     		ldr	r3, [r7, #4]
 5248 0172 0022     		movs	r2, #0
 5249 0174 1A66     		str	r2, [r3, #96]
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 5250              		.loc 1 2270 5
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 142


 5251 0176 7B68     		ldr	r3, [r7, #4]
 5252 0178 1800     		movs	r0, r3
 5253 017a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 5254              	.L202:
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 5255              		.loc 1 2274 10
 5256 017e 0023     		movs	r3, #0
2275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5257              		.loc 1 2275 1
 5258 0180 1800     		movs	r0, r3
 5259 0182 BD46     		mov	sp, r7
 5260 0184 12B0     		add	sp, sp, #72
 5261              		@ sp needed
 5262 0186 80BD     		pop	{r7, pc}
 5263              	.L205:
 5264              		.align	2
 5265              	.L204:
 5266 0188 DFFEFFFF 		.word	-289
 5267 018c 00000000 		.word	UART_DMARxOnlyAbortCallback
 5268              		.cfi_endproc
 5269              	.LFE61:
 5271              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 5272              		.align	1
 5273              		.global	HAL_UART_IRQHandler
 5274              		.syntax unified
 5275              		.code	16
 5276              		.thumb_func
 5278              	HAL_UART_IRQHandler:
 5279              	.LFB62:
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 5280              		.loc 1 2283 1
 5281              		.cfi_startproc
 5282              		@ args = 0, pretend = 0, frame = 168
 5283              		@ frame_needed = 1, uses_anonymous_args = 0
 5284 0000 90B5     		push	{r4, r7, lr}
 5285              	.LCFI66:
 5286              		.cfi_def_cfa_offset 12
 5287              		.cfi_offset 4, -12
 5288              		.cfi_offset 7, -8
 5289              		.cfi_offset 14, -4
 5290 0002 ABB0     		sub	sp, sp, #172
 5291              	.LCFI67:
 5292              		.cfi_def_cfa_offset 184
 5293 0004 00AF     		add	r7, sp, #0
 5294              	.LCFI68:
 5295              		.cfi_def_cfa_register 7
 5296 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 143


2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 5297              		.loc 1 2284 25
 5298 0008 7B68     		ldr	r3, [r7, #4]
 5299 000a 1B68     		ldr	r3, [r3]
 5300              		.loc 1 2284 12
 5301 000c DB69     		ldr	r3, [r3, #28]
 5302 000e A422     		movs	r2, #164
 5303 0010 B918     		adds	r1, r7, r2
 5304 0012 0B60     		str	r3, [r1]
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 5305              		.loc 1 2285 25
 5306 0014 7B68     		ldr	r3, [r7, #4]
 5307 0016 1B68     		ldr	r3, [r3]
 5308              		.loc 1 2285 12
 5309 0018 1B68     		ldr	r3, [r3]
 5310 001a A020     		movs	r0, #160
 5311 001c 3918     		adds	r1, r7, r0
 5312 001e 0B60     		str	r3, [r1]
2286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 5313              		.loc 1 2286 25
 5314 0020 7B68     		ldr	r3, [r7, #4]
 5315 0022 1B68     		ldr	r3, [r3]
 5316              		.loc 1 2286 12
 5317 0024 9B68     		ldr	r3, [r3, #8]
 5318 0026 9C21     		movs	r1, #156
 5319 0028 7918     		adds	r1, r7, r1
 5320 002a 0B60     		str	r3, [r1]
2287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t errorflags;
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t errorcode;
2290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If no error occurs */
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
 5321              		.loc 1 2292 14
 5322 002c 1100     		movs	r1, r2
 5323 002e BB18     		adds	r3, r7, r2
 5324 0030 1B68     		ldr	r3, [r3]
 5325 0032 994A     		ldr	r2, .L247
 5326 0034 1340     		ands	r3, r2
 5327 0036 9822     		movs	r2, #152
 5328 0038 BC18     		adds	r4, r7, r2
 5329 003a 2360     		str	r3, [r4]
2293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == 0U)
 5330              		.loc 1 2293 6
 5331 003c BB18     		adds	r3, r7, r2
 5332 003e 1B68     		ldr	r3, [r3]
 5333 0040 002B     		cmp	r3, #0
 5334 0042 14D1     		bne	.L207
2294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
 5335              		.loc 1 2296 20
 5336 0044 7B18     		adds	r3, r7, r1
 5337 0046 1B68     		ldr	r3, [r3]
 5338 0048 2022     		movs	r2, #32
 5339 004a 1340     		ands	r3, r2
 5340              		.loc 1 2296 8
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 144


 5341 004c 0FD0     		beq	.L207
2297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
 5342              		.loc 1 2297 21
 5343 004e 3B18     		adds	r3, r7, r0
 5344 0050 1B68     		ldr	r3, [r3]
 5345 0052 2022     		movs	r2, #32
 5346 0054 1340     		ands	r3, r2
 5347              		.loc 1 2297 9
 5348 0056 0AD0     		beq	.L207
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (huart->RxISR != NULL)
 5349              		.loc 1 2299 16
 5350 0058 7B68     		ldr	r3, [r7, #4]
 5351 005a 9B6E     		ldr	r3, [r3, #104]
 5352              		.loc 1 2299 10
 5353 005c 002B     		cmp	r3, #0
 5354 005e 00D1     		bne	.LCB4012
 5355 0060 9EE2     		b	.L241	@long jump
 5356              	.LCB4012:
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxISR(huart);
 5357              		.loc 1 2301 14
 5358 0062 7B68     		ldr	r3, [r7, #4]
 5359 0064 9B6E     		ldr	r3, [r3, #104]
 5360              		.loc 1 2301 9
 5361 0066 7A68     		ldr	r2, [r7, #4]
 5362 0068 1000     		movs	r0, r2
 5363 006a 9847     		blx	r3
 5364              	.LVL2:
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
 5365              		.loc 1 2303 7
 5366 006c 98E2     		b	.L241
 5367              	.L207:
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If some errors occur */
2308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((errorflags != 0U)
 5368              		.loc 1 2308 6
 5369 006e 9823     		movs	r3, #152
 5370 0070 FB18     		adds	r3, r7, r3
 5371 0072 1B68     		ldr	r3, [r3]
 5372 0074 002B     		cmp	r3, #0
 5373 0076 00D1     		bne	.LCB4026
 5374 0078 14E1     		b	.L210	@long jump
 5375              	.LCB4026:
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 5376              		.loc 1 2309 20
 5377 007a 9C23     		movs	r3, #156
 5378 007c FB18     		adds	r3, r7, r3
 5379 007e 1B68     		ldr	r3, [r3]
 5380 0080 0122     		movs	r2, #1
 5381 0082 1340     		ands	r3, r2
 5382              		.loc 1 2309 7
 5383 0084 06D1     		bne	.L211
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 145


 5384              		.loc 1 2310 23
 5385 0086 A023     		movs	r3, #160
 5386 0088 FB18     		adds	r3, r7, r3
 5387 008a 1B68     		ldr	r3, [r3]
 5388 008c 834A     		ldr	r2, .L247+4
 5389 008e 1340     		ands	r3, r2
 5390              		.loc 1 2310 11
 5391 0090 00D1     		bne	.LCB4040
 5392 0092 07E1     		b	.L210	@long jump
 5393              	.LCB4040:
 5394              	.L211:
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 5395              		.loc 1 2313 20
 5396 0094 A423     		movs	r3, #164
 5397 0096 FB18     		adds	r3, r7, r3
 5398 0098 1B68     		ldr	r3, [r3]
 5399 009a 0122     		movs	r2, #1
 5400 009c 1340     		ands	r3, r2
 5401              		.loc 1 2313 8
 5402 009e 12D0     		beq	.L212
 5403              		.loc 1 2313 55 discriminator 1
 5404 00a0 A023     		movs	r3, #160
 5405 00a2 FB18     		adds	r3, r7, r3
 5406 00a4 1A68     		ldr	r2, [r3]
 5407 00a6 8023     		movs	r3, #128
 5408 00a8 5B00     		lsls	r3, r3, #1
 5409 00aa 1340     		ands	r3, r2
 5410              		.loc 1 2313 43 discriminator 1
 5411 00ac 0BD0     		beq	.L212
2314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 5412              		.loc 1 2315 7
 5413 00ae 7B68     		ldr	r3, [r7, #4]
 5414 00b0 1B68     		ldr	r3, [r3]
 5415 00b2 0122     		movs	r2, #1
 5416 00b4 1A62     		str	r2, [r3, #32]
2316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 5417              		.loc 1 2317 24
 5418 00b6 7B68     		ldr	r3, [r7, #4]
 5419 00b8 8422     		movs	r2, #132
 5420 00ba 9B58     		ldr	r3, [r3, r2]
 5421 00bc 0122     		movs	r2, #1
 5422 00be 1A43     		orrs	r2, r3
 5423 00c0 7B68     		ldr	r3, [r7, #4]
 5424 00c2 8421     		movs	r1, #132
 5425 00c4 5A50     		str	r2, [r3, r1]
 5426              	.L212:
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 5427              		.loc 1 2321 20
 5428 00c6 A423     		movs	r3, #164
 5429 00c8 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 146


 5430 00ca 1B68     		ldr	r3, [r3]
 5431 00cc 0222     		movs	r2, #2
 5432 00ce 1340     		ands	r3, r2
 5433              		.loc 1 2321 8
 5434 00d0 11D0     		beq	.L213
 5435              		.loc 1 2321 55 discriminator 1
 5436 00d2 9C23     		movs	r3, #156
 5437 00d4 FB18     		adds	r3, r7, r3
 5438 00d6 1B68     		ldr	r3, [r3]
 5439 00d8 0122     		movs	r2, #1
 5440 00da 1340     		ands	r3, r2
 5441              		.loc 1 2321 43 discriminator 1
 5442 00dc 0BD0     		beq	.L213
2322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 5443              		.loc 1 2323 7
 5444 00de 7B68     		ldr	r3, [r7, #4]
 5445 00e0 1B68     		ldr	r3, [r3]
 5446 00e2 0222     		movs	r2, #2
 5447 00e4 1A62     		str	r2, [r3, #32]
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 5448              		.loc 1 2325 24
 5449 00e6 7B68     		ldr	r3, [r7, #4]
 5450 00e8 8422     		movs	r2, #132
 5451 00ea 9B58     		ldr	r3, [r3, r2]
 5452 00ec 0422     		movs	r2, #4
 5453 00ee 1A43     		orrs	r2, r3
 5454 00f0 7B68     		ldr	r3, [r7, #4]
 5455 00f2 8421     		movs	r1, #132
 5456 00f4 5A50     		str	r2, [r3, r1]
 5457              	.L213:
2326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 5458              		.loc 1 2329 20
 5459 00f6 A423     		movs	r3, #164
 5460 00f8 FB18     		adds	r3, r7, r3
 5461 00fa 1B68     		ldr	r3, [r3]
 5462 00fc 0422     		movs	r2, #4
 5463 00fe 1340     		ands	r3, r2
 5464              		.loc 1 2329 8
 5465 0100 11D0     		beq	.L214
 5466              		.loc 1 2329 55 discriminator 1
 5467 0102 9C23     		movs	r3, #156
 5468 0104 FB18     		adds	r3, r7, r3
 5469 0106 1B68     		ldr	r3, [r3]
 5470 0108 0122     		movs	r2, #1
 5471 010a 1340     		ands	r3, r2
 5472              		.loc 1 2329 43 discriminator 1
 5473 010c 0BD0     		beq	.L214
2330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 5474              		.loc 1 2331 7
 5475 010e 7B68     		ldr	r3, [r7, #4]
 5476 0110 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 147


 5477 0112 0422     		movs	r2, #4
 5478 0114 1A62     		str	r2, [r3, #32]
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 5479              		.loc 1 2333 24
 5480 0116 7B68     		ldr	r3, [r7, #4]
 5481 0118 8422     		movs	r2, #132
 5482 011a 9B58     		ldr	r3, [r3, r2]
 5483 011c 0222     		movs	r2, #2
 5484 011e 1A43     		orrs	r2, r3
 5485 0120 7B68     		ldr	r3, [r7, #4]
 5486 0122 8421     		movs	r1, #132
 5487 0124 5A50     		str	r2, [r3, r1]
 5488              	.L214:
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
 5489              		.loc 1 2337 20
 5490 0126 A423     		movs	r3, #164
 5491 0128 FB18     		adds	r3, r7, r3
 5492 012a 1B68     		ldr	r3, [r3]
 5493 012c 0822     		movs	r2, #8
 5494 012e 1340     		ands	r3, r2
 5495              		.loc 1 2337 8
 5496 0130 17D0     		beq	.L215
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 5497              		.loc 1 2338 22
 5498 0132 A023     		movs	r3, #160
 5499 0134 FB18     		adds	r3, r7, r3
 5500 0136 1B68     		ldr	r3, [r3]
 5501 0138 2022     		movs	r2, #32
 5502 013a 1340     		ands	r3, r2
 5503              		.loc 1 2338 9
 5504 013c 05D1     		bne	.L216
2339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 5505              		.loc 1 2339 22 discriminator 1
 5506 013e 9C23     		movs	r3, #156
 5507 0140 FB18     		adds	r3, r7, r3
 5508 0142 1B68     		ldr	r3, [r3]
 5509 0144 0122     		movs	r2, #1
 5510 0146 1340     		ands	r3, r2
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 5511              		.loc 1 2338 49 discriminator 1
 5512 0148 0BD0     		beq	.L215
 5513              	.L216:
2340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 5514              		.loc 1 2341 7
 5515 014a 7B68     		ldr	r3, [r7, #4]
 5516 014c 1B68     		ldr	r3, [r3]
 5517 014e 0822     		movs	r2, #8
 5518 0150 1A62     		str	r2, [r3, #32]
2342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 5519              		.loc 1 2343 24
 5520 0152 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 148


 5521 0154 8422     		movs	r2, #132
 5522 0156 9B58     		ldr	r3, [r3, r2]
 5523 0158 0822     		movs	r2, #8
 5524 015a 1A43     		orrs	r2, r3
 5525 015c 7B68     		ldr	r3, [r7, #4]
 5526 015e 8421     		movs	r1, #132
 5527 0160 5A50     		str	r2, [r3, r1]
 5528              	.L215:
2344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 5529              		.loc 1 2347 20
 5530 0162 A423     		movs	r3, #164
 5531 0164 FB18     		adds	r3, r7, r3
 5532 0166 1A68     		ldr	r2, [r3]
 5533 0168 8023     		movs	r3, #128
 5534 016a 1B01     		lsls	r3, r3, #4
 5535 016c 1340     		ands	r3, r2
 5536              		.loc 1 2347 8
 5537 016e 13D0     		beq	.L217
 5538              		.loc 1 2347 57 discriminator 1
 5539 0170 A023     		movs	r3, #160
 5540 0172 FB18     		adds	r3, r7, r3
 5541 0174 1A68     		ldr	r2, [r3]
 5542 0176 8023     		movs	r3, #128
 5543 0178 DB04     		lsls	r3, r3, #19
 5544 017a 1340     		ands	r3, r2
 5545              		.loc 1 2347 45 discriminator 1
 5546 017c 0CD0     		beq	.L217
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 5547              		.loc 1 2349 7
 5548 017e 7B68     		ldr	r3, [r7, #4]
 5549 0180 1B68     		ldr	r3, [r3]
 5550 0182 8022     		movs	r2, #128
 5551 0184 1201     		lsls	r2, r2, #4
 5552 0186 1A62     		str	r2, [r3, #32]
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
 5553              		.loc 1 2351 24
 5554 0188 7B68     		ldr	r3, [r7, #4]
 5555 018a 8422     		movs	r2, #132
 5556 018c 9B58     		ldr	r3, [r3, r2]
 5557 018e 2022     		movs	r2, #32
 5558 0190 1A43     		orrs	r2, r3
 5559 0192 7B68     		ldr	r3, [r7, #4]
 5560 0194 8421     		movs	r1, #132
 5561 0196 5A50     		str	r2, [r3, r1]
 5562              	.L217:
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 5563              		.loc 1 2355 14
 5564 0198 7B68     		ldr	r3, [r7, #4]
 5565 019a 8422     		movs	r2, #132
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 149


 5566 019c 9B58     		ldr	r3, [r3, r2]
 5567              		.loc 1 2355 8
 5568 019e 002B     		cmp	r3, #0
 5569 01a0 00D1     		bne	.LCB4198
 5570 01a2 FFE1     		b	.L242	@long jump
 5571              	.LCB4198:
2356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
 5572              		.loc 1 2358 22
 5573 01a4 A423     		movs	r3, #164
 5574 01a6 FB18     		adds	r3, r7, r3
 5575 01a8 1B68     		ldr	r3, [r3]
 5576 01aa 2022     		movs	r2, #32
 5577 01ac 1340     		ands	r3, r2
 5578              		.loc 1 2358 10
 5579 01ae 0ED0     		beq	.L219
2359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 5580              		.loc 1 2359 23
 5581 01b0 A023     		movs	r3, #160
 5582 01b2 FB18     		adds	r3, r7, r3
 5583 01b4 1B68     		ldr	r3, [r3]
 5584 01b6 2022     		movs	r2, #32
 5585 01b8 1340     		ands	r3, r2
 5586              		.loc 1 2359 11
 5587 01ba 08D0     		beq	.L219
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (huart->RxISR != NULL)
 5588              		.loc 1 2361 18
 5589 01bc 7B68     		ldr	r3, [r7, #4]
 5590 01be 9B6E     		ldr	r3, [r3, #104]
 5591              		.loc 1 2361 12
 5592 01c0 002B     		cmp	r3, #0
 5593 01c2 04D0     		beq	.L219
2362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->RxISR(huart);
 5594              		.loc 1 2363 16
 5595 01c4 7B68     		ldr	r3, [r7, #4]
 5596 01c6 9B6E     		ldr	r3, [r3, #104]
 5597              		.loc 1 2363 11
 5598 01c8 7A68     		ldr	r2, [r7, #4]
 5599 01ca 1000     		movs	r0, r2
 5600 01cc 9847     		blx	r3
 5601              	.LVL3:
 5602              	.L219:
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
2365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           - Receiver Timeout error in Reception
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           - Overrun error in Reception
2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           - any error occurs in DMA mode reception
2371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       */
2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       errorcode = huart->ErrorCode;
 5603              		.loc 1 2372 17
 5604 01ce 7B68     		ldr	r3, [r7, #4]
 5605 01d0 8422     		movs	r2, #132
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 150


 5606 01d2 9B58     		ldr	r3, [r3, r2]
 5607 01d4 9421     		movs	r1, #148
 5608 01d6 7A18     		adds	r2, r7, r1
 5609 01d8 1360     		str	r3, [r2]
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 5610              		.loc 1 2373 12
 5611 01da 7B68     		ldr	r3, [r7, #4]
 5612 01dc 1B68     		ldr	r3, [r3]
 5613 01de 9B68     		ldr	r3, [r3, #8]
 5614 01e0 4022     		movs	r2, #64
 5615 01e2 1340     		ands	r3, r2
 5616              		.loc 1 2373 10
 5617 01e4 402B     		cmp	r3, #64
 5618 01e6 04D0     		beq	.L220
2374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 5619              		.loc 1 2374 23 discriminator 1
 5620 01e8 7B18     		adds	r3, r7, r1
 5621 01ea 1B68     		ldr	r3, [r3]
 5622 01ec 2822     		movs	r2, #40
 5623 01ee 1340     		ands	r3, r2
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 5624              		.loc 1 2373 66 discriminator 1
 5625 01f0 47D0     		beq	.L221
 5626              	.L220:
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 5627              		.loc 1 2379 9
 5628 01f2 7B68     		ldr	r3, [r7, #4]
 5629 01f4 1800     		movs	r0, r3
 5630 01f6 FFF7FEFF 		bl	UART_EndRxTransfer
2380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Abort the UART DMA Rx channel if enabled */
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5631              		.loc 1 2382 13
 5632 01fa 7B68     		ldr	r3, [r7, #4]
 5633 01fc 1B68     		ldr	r3, [r3]
 5634 01fe 9B68     		ldr	r3, [r3, #8]
 5635 0200 4022     		movs	r2, #64
 5636 0202 1340     		ands	r3, r2
 5637              		.loc 1 2382 12
 5638 0204 402B     		cmp	r3, #64
 5639 0206 37D1     		bne	.L222
 5640              	.LBB830:
 5641              	.LBB831:
 5642              	.LBB832:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5643              		.loc 2 386 3
 5644              		.syntax divided
 5645              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5646 0208 EFF31083 		MRS r3, primask
 5647              	@ 0 "" 2
 5648              		.thumb
 5649              		.syntax unified
 5650 020c 3B66     		str	r3, [r7, #96]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 151


 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5651              		.loc 2 387 9
 5652 020e 3B6E     		ldr	r3, [r7, #96]
 5653              	.LBE832:
 5654              	.LBE831:
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
2384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Disable the UART DMA Rx request if enabled */
2385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5655              		.loc 1 2385 11
 5656 0210 9020     		movs	r0, #144
 5657 0212 3A18     		adds	r2, r7, r0
 5658 0214 1360     		str	r3, [r2]
 5659 0216 0123     		movs	r3, #1
 5660 0218 7B66     		str	r3, [r7, #100]
 5661              	.LBB833:
 5662              	.LBB834:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5663              		.loc 2 414 3
 5664 021a 7B6E     		ldr	r3, [r7, #100]
 5665              		.syntax divided
 5666              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5667 021c 83F31088 		MSR primask, r3
 5668              	@ 0 "" 2
 5669              		.loc 2 415 1
 5670              		.thumb
 5671              		.syntax unified
 5672 0220 C046     		nop
 5673              	.LBE834:
 5674              	.LBE833:
 5675              		.loc 1 2385 11
 5676 0222 7B68     		ldr	r3, [r7, #4]
 5677 0224 1B68     		ldr	r3, [r3]
 5678 0226 9A68     		ldr	r2, [r3, #8]
 5679 0228 7B68     		ldr	r3, [r7, #4]
 5680 022a 1B68     		ldr	r3, [r3]
 5681 022c 4021     		movs	r1, #64
 5682 022e 8A43     		bics	r2, r1
 5683 0230 9A60     		str	r2, [r3, #8]
 5684 0232 3B18     		adds	r3, r7, r0
 5685 0234 1B68     		ldr	r3, [r3]
 5686 0236 BB66     		str	r3, [r7, #104]
 5687              	.LBB835:
 5688              	.LBB836:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5689              		.loc 2 414 3
 5690 0238 BB6E     		ldr	r3, [r7, #104]
 5691              		.syntax divided
 5692              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5693 023a 83F31088 		MSR primask, r3
 5694              	@ 0 "" 2
 5695              		.loc 2 415 1
 5696              		.thumb
 5697              		.syntax unified
 5698 023e C046     		nop
 5699              	.LBE836:
 5700              	.LBE835:
 5701              	.LBE830:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 152


2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 5702              		.loc 1 2388 20
 5703 0240 7B68     		ldr	r3, [r7, #4]
 5704 0242 5B6F     		ldr	r3, [r3, #116]
 5705              		.loc 1 2388 14
 5706 0244 002B     		cmp	r3, #0
 5707 0246 12D0     		beq	.L224
2389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 5708              		.loc 1 2392 18
 5709 0248 7B68     		ldr	r3, [r7, #4]
 5710 024a 5B6F     		ldr	r3, [r3, #116]
 5711              		.loc 1 2392 46
 5712 024c 144A     		ldr	r2, .L247+8
 5713 024e 5A63     		str	r2, [r3, #52]
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Abort DMA RX */
2395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5714              		.loc 1 2395 17
 5715 0250 7B68     		ldr	r3, [r7, #4]
 5716 0252 5B6F     		ldr	r3, [r3, #116]
 5717 0254 1800     		movs	r0, r3
 5718 0256 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5719 025a 031E     		subs	r3, r0, #0
 5720              		.loc 1 2395 16
 5721 025c 1AD0     		beq	.L243
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
2397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 5722              		.loc 1 2398 20
 5723 025e 7B68     		ldr	r3, [r7, #4]
 5724 0260 5B6F     		ldr	r3, [r3, #116]
 5725              		.loc 1 2398 28
 5726 0262 5A6B     		ldr	r2, [r3, #52]
 5727              		.loc 1 2398 53
 5728 0264 7B68     		ldr	r3, [r7, #4]
 5729 0266 5B6F     		ldr	r3, [r3, #116]
 5730              		.loc 1 2398 15
 5731 0268 1800     		movs	r0, r3
 5732 026a 9047     		blx	r2
 5733              	.LVL4:
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 5734              		.loc 1 2382 12
 5735 026c 12E0     		b	.L243
 5736              	.L224:
2399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
2401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           else
2402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Call user error callback */
2404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /*Call registered error callback*/
2406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             huart->ErrorCallback(huart);
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 153


2407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /*Call legacy weak error callback*/
2409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 5737              		.loc 1 2409 13
 5738 026e 7B68     		ldr	r3, [r7, #4]
 5739 0270 1800     		movs	r0, r3
 5740 0272 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 5741              		.loc 1 2382 12
 5742 0276 0DE0     		b	.L243
 5743              	.L222:
2410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
2413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
2414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         else
2415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
2416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Call user error callback */
2417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /*Call registered error callback*/
2419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCallback(huart);
2420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /*Call legacy weak error callback*/
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 5744              		.loc 1 2422 11
 5745 0278 7B68     		ldr	r3, [r7, #4]
 5746 027a 1800     		movs	r0, r3
 5747 027c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 5748              		.loc 1 2382 12
 5749 0280 08E0     		b	.L243
 5750              	.L221:
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
2425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
2427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Error is notified to user through user error callback */
2430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call registered error callback*/
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCallback(huart);
2433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call legacy weak error callback*/
2435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 5751              		.loc 1 2435 9
 5752 0282 7B68     		ldr	r3, [r7, #4]
 5753 0284 1800     		movs	r0, r3
 5754 0286 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 5755              		.loc 1 2437 26
 5756 028a 7B68     		ldr	r3, [r7, #4]
 5757 028c 8422     		movs	r2, #132
 5758 028e 0021     		movs	r1, #0
 5759 0290 9950     		str	r1, [r3, r2]
2438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 154


2439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 5760              		.loc 1 2440 5
 5761 0292 87E1     		b	.L242
 5762              	.L243:
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 5763              		.loc 1 2382 12
 5764 0294 C046     		nop
 5765              		.loc 1 2440 5
 5766 0296 85E1     		b	.L242
 5767              	.L248:
 5768              		.align	2
 5769              	.L247:
 5770 0298 0F080000 		.word	2063
 5771 029c 20010004 		.word	67109152
 5772 02a0 00000000 		.word	UART_DMAAbortOnError
 5773              	.L210:
2441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   } /* End if some error occurs */
2443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check current reception Mode :
2445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5774              		.loc 1 2446 13
 5775 02a4 7B68     		ldr	r3, [r7, #4]
 5776 02a6 1B6E     		ldr	r3, [r3, #96]
 5777              		.loc 1 2446 6
 5778 02a8 012B     		cmp	r3, #1
 5779 02aa 00D0     		beq	.LCB4362
 5780 02ac 39E1     		b	.L226	@long jump
 5781              	.LCB4362:
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && ((isrflags & USART_ISR_IDLE) != 0U)
 5782              		.loc 1 2447 21
 5783 02ae A423     		movs	r3, #164
 5784 02b0 FB18     		adds	r3, r7, r3
 5785 02b2 1B68     		ldr	r3, [r3]
 5786 02b4 1022     		movs	r2, #16
 5787 02b6 1340     		ands	r3, r2
 5788              		.loc 1 2447 7
 5789 02b8 00D1     		bne	.LCB4369
 5790 02ba 32E1     		b	.L226	@long jump
 5791              	.LCB4369:
2448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && ((cr1its & USART_ISR_IDLE) != 0U))
 5792              		.loc 1 2448 19
 5793 02bc A023     		movs	r3, #160
 5794 02be FB18     		adds	r3, r7, r3
 5795 02c0 1B68     		ldr	r3, [r3]
 5796 02c2 1022     		movs	r2, #16
 5797 02c4 1340     		ands	r3, r2
 5798              		.loc 1 2448 7
 5799 02c6 00D1     		bne	.LCB4376
 5800 02c8 2BE1     		b	.L226	@long jump
 5801              	.LCB4376:
2449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 5802              		.loc 1 2450 5
 5803 02ca 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 155


 5804 02cc 1B68     		ldr	r3, [r3]
 5805 02ce 1022     		movs	r2, #16
 5806 02d0 1A62     		str	r2, [r3, #32]
2451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5807              		.loc 1 2453 9
 5808 02d2 7B68     		ldr	r3, [r7, #4]
 5809 02d4 1B68     		ldr	r3, [r3]
 5810 02d6 9B68     		ldr	r3, [r3, #8]
 5811 02d8 4022     		movs	r2, #64
 5812 02da 1340     		ands	r3, r2
 5813              		.loc 1 2453 8
 5814 02dc 402B     		cmp	r3, #64
 5815 02de 00D0     		beq	.LCB4387
 5816 02e0 9FE0     		b	.L227	@long jump
 5817              	.LCB4387:
 5818              	.LBB837:
2454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* DMA mode enabled */
2456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          (DMA cplt callback will be called).
2458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 5819              		.loc 1 2459 50
 5820 02e2 7B68     		ldr	r3, [r7, #4]
 5821 02e4 5B6F     		ldr	r3, [r3, #116]
 5822 02e6 1B68     		ldr	r3, [r3]
 5823 02e8 5A68     		ldr	r2, [r3, #4]
 5824              		.loc 1 2459 16
 5825 02ea 7E21     		movs	r1, #126
 5826 02ec 7B18     		adds	r3, r7, r1
 5827 02ee 1A80     		strh	r2, [r3]
2460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 5828              		.loc 1 2460 10
 5829 02f0 7B18     		adds	r3, r7, r1
 5830 02f2 1B88     		ldrh	r3, [r3]
 5831 02f4 002B     		cmp	r3, #0
 5832 02f6 00D1     		bne	.LCB4400
 5833 02f8 56E1     		b	.L244	@long jump
 5834              	.LCB4400:
2461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
 5835              		.loc 1 2461 43
 5836 02fa 7B68     		ldr	r3, [r7, #4]
 5837 02fc 5822     		movs	r2, #88
 5838 02fe 9B5A     		ldrh	r3, [r3, r2]
 5839              		.loc 1 2461 11
 5840 0300 7A18     		adds	r2, r7, r1
 5841 0302 1288     		ldrh	r2, [r2]
 5842 0304 9A42     		cmp	r2, r3
 5843 0306 00D3     		bcc	.LCB4408
 5844 0308 4EE1     		b	.L244	@long jump
 5845              	.LCB4408:
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Reception is not complete */
2464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
 5846              		.loc 1 2464 28
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 156


 5847 030a 7B68     		ldr	r3, [r7, #4]
 5848 030c 7A18     		adds	r2, r7, r1
 5849 030e 5A21     		movs	r1, #90
 5850 0310 1288     		ldrh	r2, [r2]
 5851 0312 5A52     		strh	r2, [r3, r1]
2465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 5852              		.loc 1 2467 18
 5853 0314 7B68     		ldr	r3, [r7, #4]
 5854 0316 5B6F     		ldr	r3, [r3, #116]
 5855              		.loc 1 2467 32
 5856 0318 9B69     		ldr	r3, [r3, #24]
 5857              		.loc 1 2467 12
 5858 031a 202B     		cmp	r3, #32
 5859 031c 6FD0     		beq	.L229
 5860              	.LBB838:
 5861              	.LBB839:
 5862              	.LBB840:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5863              		.loc 2 386 3
 5864              		.syntax divided
 5865              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5866 031e EFF31083 		MRS r3, primask
 5867              	@ 0 "" 2
 5868              		.thumb
 5869              		.syntax unified
 5870 0322 3B63     		str	r3, [r7, #48]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5871              		.loc 2 387 9
 5872 0324 3B6B     		ldr	r3, [r7, #48]
 5873              	.LBE840:
 5874              	.LBE839:
2468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
2469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 5875              		.loc 1 2470 11
 5876 0326 BB67     		str	r3, [r7, #120]
 5877 0328 0123     		movs	r3, #1
 5878 032a 7B63     		str	r3, [r7, #52]
 5879              	.LBB841:
 5880              	.LBB842:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5881              		.loc 2 414 3
 5882 032c 7B6B     		ldr	r3, [r7, #52]
 5883              		.syntax divided
 5884              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5885 032e 83F31088 		MSR primask, r3
 5886              	@ 0 "" 2
 5887              		.loc 2 415 1
 5888              		.thumb
 5889              		.syntax unified
 5890 0332 C046     		nop
 5891              	.LBE842:
 5892              	.LBE841:
 5893              		.loc 1 2470 11
 5894 0334 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 157


 5895 0336 1B68     		ldr	r3, [r3]
 5896 0338 1A68     		ldr	r2, [r3]
 5897 033a 7B68     		ldr	r3, [r7, #4]
 5898 033c 1B68     		ldr	r3, [r3]
 5899 033e 9E49     		ldr	r1, .L249
 5900 0340 0A40     		ands	r2, r1
 5901 0342 1A60     		str	r2, [r3]
 5902 0344 BB6F     		ldr	r3, [r7, #120]
 5903 0346 BB63     		str	r3, [r7, #56]
 5904              	.LBB843:
 5905              	.LBB844:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5906              		.loc 2 414 3
 5907 0348 BB6B     		ldr	r3, [r7, #56]
 5908              		.syntax divided
 5909              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5910 034a 83F31088 		MSR primask, r3
 5911              	@ 0 "" 2
 5912              		.loc 2 415 1
 5913              		.thumb
 5914              		.syntax unified
 5915 034e C046     		nop
 5916              	.LBE844:
 5917              	.LBE843:
 5918              	.LBE838:
 5919              	.LBB845:
 5920              	.LBB846:
 5921              	.LBB847:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5922              		.loc 2 386 3
 5923              		.syntax divided
 5924              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5925 0350 EFF31083 		MRS r3, primask
 5926              	@ 0 "" 2
 5927              		.thumb
 5928              		.syntax unified
 5929 0354 FB63     		str	r3, [r7, #60]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5930              		.loc 2 387 9
 5931 0356 FB6B     		ldr	r3, [r7, #60]
 5932              	.LBE847:
 5933              	.LBE846:
2471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5934              		.loc 1 2471 11
 5935 0358 7B67     		str	r3, [r7, #116]
 5936 035a 0123     		movs	r3, #1
 5937 035c 3B64     		str	r3, [r7, #64]
 5938              	.LBB848:
 5939              	.LBB849:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5940              		.loc 2 414 3
 5941 035e 3B6C     		ldr	r3, [r7, #64]
 5942              		.syntax divided
 5943              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5944 0360 83F31088 		MSR primask, r3
 5945              	@ 0 "" 2
 5946              		.loc 2 415 1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 158


 5947              		.thumb
 5948              		.syntax unified
 5949 0364 C046     		nop
 5950              	.LBE849:
 5951              	.LBE848:
 5952              		.loc 1 2471 11
 5953 0366 7B68     		ldr	r3, [r7, #4]
 5954 0368 1B68     		ldr	r3, [r3]
 5955 036a 9A68     		ldr	r2, [r3, #8]
 5956 036c 7B68     		ldr	r3, [r7, #4]
 5957 036e 1B68     		ldr	r3, [r3]
 5958 0370 0121     		movs	r1, #1
 5959 0372 8A43     		bics	r2, r1
 5960 0374 9A60     		str	r2, [r3, #8]
 5961 0376 7B6F     		ldr	r3, [r7, #116]
 5962 0378 7B64     		str	r3, [r7, #68]
 5963              	.LBB850:
 5964              	.LBB851:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5965              		.loc 2 414 3
 5966 037a 7B6C     		ldr	r3, [r7, #68]
 5967              		.syntax divided
 5968              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5969 037c 83F31088 		MSR primask, r3
 5970              	@ 0 "" 2
 5971              		.loc 2 415 1
 5972              		.thumb
 5973              		.syntax unified
 5974 0380 C046     		nop
 5975              	.LBE851:
 5976              	.LBE850:
 5977              	.LBE845:
 5978              	.LBB852:
 5979              	.LBB853:
 5980              	.LBB854:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 5981              		.loc 2 386 3
 5982              		.syntax divided
 5983              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5984 0382 EFF31083 		MRS r3, primask
 5985              	@ 0 "" 2
 5986              		.thumb
 5987              		.syntax unified
 5988 0386 BB64     		str	r3, [r7, #72]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5989              		.loc 2 387 9
 5990 0388 BB6C     		ldr	r3, [r7, #72]
 5991              	.LBE854:
 5992              	.LBE853:
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              in the UART CR3 register */
2475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5993              		.loc 1 2475 11
 5994 038a 3B67     		str	r3, [r7, #112]
 5995 038c 0123     		movs	r3, #1
 5996 038e FB64     		str	r3, [r7, #76]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 159


 5997              	.LBB855:
 5998              	.LBB856:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5999              		.loc 2 414 3
 6000 0390 FB6C     		ldr	r3, [r7, #76]
 6001              		.syntax divided
 6002              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6003 0392 83F31088 		MSR primask, r3
 6004              	@ 0 "" 2
 6005              		.loc 2 415 1
 6006              		.thumb
 6007              		.syntax unified
 6008 0396 C046     		nop
 6009              	.LBE856:
 6010              	.LBE855:
 6011              		.loc 1 2475 11
 6012 0398 7B68     		ldr	r3, [r7, #4]
 6013 039a 1B68     		ldr	r3, [r3]
 6014 039c 9A68     		ldr	r2, [r3, #8]
 6015 039e 7B68     		ldr	r3, [r7, #4]
 6016 03a0 1B68     		ldr	r3, [r3]
 6017 03a2 4021     		movs	r1, #64
 6018 03a4 8A43     		bics	r2, r1
 6019 03a6 9A60     		str	r2, [r3, #8]
 6020 03a8 3B6F     		ldr	r3, [r7, #112]
 6021 03aa 3B65     		str	r3, [r7, #80]
 6022              	.LBB857:
 6023              	.LBB858:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6024              		.loc 2 414 3
 6025 03ac 3B6D     		ldr	r3, [r7, #80]
 6026              		.syntax divided
 6027              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6028 03ae 83F31088 		MSR primask, r3
 6029              	@ 0 "" 2
 6030              		.loc 2 415 1
 6031              		.thumb
 6032              		.syntax unified
 6033 03b2 C046     		nop
 6034              	.LBE858:
 6035              	.LBE857:
 6036              	.LBE852:
2476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 6037              		.loc 1 2478 26
 6038 03b4 7B68     		ldr	r3, [r7, #4]
 6039 03b6 8022     		movs	r2, #128
 6040 03b8 2021     		movs	r1, #32
 6041 03ba 9950     		str	r1, [r3, r2]
2479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 6042              		.loc 1 2479 32
 6043 03bc 7B68     		ldr	r3, [r7, #4]
 6044 03be 0022     		movs	r2, #0
 6045 03c0 1A66     		str	r2, [r3, #96]
 6046              	.LBB859:
 6047              	.LBB860:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 160


 6048              	.LBB861:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6049              		.loc 2 386 3
 6050              		.syntax divided
 6051              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6052 03c2 EFF31083 		MRS r3, primask
 6053              	@ 0 "" 2
 6054              		.thumb
 6055              		.syntax unified
 6056 03c6 7B65     		str	r3, [r7, #84]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6057              		.loc 2 387 9
 6058 03c8 7B6D     		ldr	r3, [r7, #84]
 6059              	.LBE861:
 6060              	.LBE860:
2480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 6061              		.loc 1 2481 11
 6062 03ca FB66     		str	r3, [r7, #108]
 6063 03cc 0123     		movs	r3, #1
 6064 03ce BB65     		str	r3, [r7, #88]
 6065              	.LBB862:
 6066              	.LBB863:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6067              		.loc 2 414 3
 6068 03d0 BB6D     		ldr	r3, [r7, #88]
 6069              		.syntax divided
 6070              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6071 03d2 83F31088 		MSR primask, r3
 6072              	@ 0 "" 2
 6073              		.loc 2 415 1
 6074              		.thumb
 6075              		.syntax unified
 6076 03d6 C046     		nop
 6077              	.LBE863:
 6078              	.LBE862:
 6079              		.loc 1 2481 11
 6080 03d8 7B68     		ldr	r3, [r7, #4]
 6081 03da 1B68     		ldr	r3, [r3]
 6082 03dc 1A68     		ldr	r2, [r3]
 6083 03de 7B68     		ldr	r3, [r7, #4]
 6084 03e0 1B68     		ldr	r3, [r3]
 6085 03e2 1021     		movs	r1, #16
 6086 03e4 8A43     		bics	r2, r1
 6087 03e6 1A60     		str	r2, [r3]
 6088 03e8 FB6E     		ldr	r3, [r7, #108]
 6089 03ea FB65     		str	r3, [r7, #92]
 6090              	.LBB864:
 6091              	.LBB865:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6092              		.loc 2 414 3
 6093 03ec FB6D     		ldr	r3, [r7, #92]
 6094              		.syntax divided
 6095              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6096 03ee 83F31088 		MSR primask, r3
 6097              	@ 0 "" 2
 6098              		.loc 2 415 1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 161


 6099              		.thumb
 6100              		.syntax unified
 6101 03f2 C046     		nop
 6102              	.LBE865:
 6103              	.LBE864:
 6104              	.LBE859:
2482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
 6105              		.loc 1 2484 17
 6106 03f4 7B68     		ldr	r3, [r7, #4]
 6107 03f6 5B6F     		ldr	r3, [r3, #116]
 6108 03f8 1800     		movs	r0, r3
 6109 03fa FFF7FEFF 		bl	HAL_DMA_Abort
 6110              	.L229:
2485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
2486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            In this case, Rx Event type is Idle Event */
2489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 6111              		.loc 1 2489 28
 6112 03fe 7B68     		ldr	r3, [r7, #4]
 6113 0400 0222     		movs	r2, #2
 6114 0402 5A66     		str	r2, [r3, #100]
2490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 6115              		.loc 1 2496 49
 6116 0404 7B68     		ldr	r3, [r7, #4]
 6117 0406 5822     		movs	r2, #88
 6118 0408 9A5A     		ldrh	r2, [r3, r2]
 6119              		.loc 1 2496 69
 6120 040a 7B68     		ldr	r3, [r7, #4]
 6121 040c 5A21     		movs	r1, #90
 6122 040e 5B5A     		ldrh	r3, [r3, r1]
 6123 0410 9BB2     		uxth	r3, r3
 6124              		.loc 1 2496 9
 6125 0412 D31A     		subs	r3, r2, r3
 6126 0414 9AB2     		uxth	r2, r3
 6127 0416 7B68     		ldr	r3, [r7, #4]
 6128 0418 1100     		movs	r1, r2
 6129 041a 1800     		movs	r0, r3
 6130 041c FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
 6131              		.loc 1 2499 7
 6132 0420 C2E0     		b	.L244
 6133              	.L227:
 6134              	.LBE837:
 6135              	.LBB866:
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 162


2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* DMA mode not enabled */
2504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 6136              		.loc 1 2506 34
 6137 0422 7B68     		ldr	r3, [r7, #4]
 6138 0424 5822     		movs	r2, #88
 6139 0426 995A     		ldrh	r1, [r3, r2]
 6140              		.loc 1 2506 54
 6141 0428 7B68     		ldr	r3, [r7, #4]
 6142 042a 5A22     		movs	r2, #90
 6143 042c 9B5A     		ldrh	r3, [r3, r2]
 6144 042e 9AB2     		uxth	r2, r3
 6145              		.loc 1 2506 16
 6146 0430 8E20     		movs	r0, #142
 6147 0432 3B18     		adds	r3, r7, r0
 6148 0434 8A1A     		subs	r2, r1, r2
 6149 0436 1A80     		strh	r2, [r3]
2507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 6150              		.loc 1 2507 17
 6151 0438 7B68     		ldr	r3, [r7, #4]
 6152 043a 5A22     		movs	r2, #90
 6153 043c 9B5A     		ldrh	r3, [r3, r2]
 6154 043e 9BB2     		uxth	r3, r3
 6155              		.loc 1 2507 10
 6156 0440 002B     		cmp	r3, #0
 6157 0442 00D1     		bne	.LCB4615
 6158 0444 B2E0     		b	.L245	@long jump
 6159              	.LCB4615:
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           && (nb_rx_data > 0U))
 6160              		.loc 1 2508 11
 6161 0446 3B18     		adds	r3, r7, r0
 6162 0448 1B88     		ldrh	r3, [r3]
 6163 044a 002B     		cmp	r3, #0
 6164 044c 00D1     		bne	.LCB4620
 6165 044e ADE0     		b	.L245	@long jump
 6166              	.LCB4620:
 6167              	.LBB867:
 6168              	.LBB868:
 6169              	.LBB869:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6170              		.loc 2 386 3
 6171              		.syntax divided
 6172              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6173 0450 EFF31083 		MRS r3, primask
 6174              	@ 0 "" 2
 6175              		.thumb
 6176              		.syntax unified
 6177 0454 FB60     		str	r3, [r7, #12]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6178              		.loc 2 387 9
 6179 0456 FB68     		ldr	r3, [r7, #12]
 6180              	.LBE869:
 6181              	.LBE868:
2509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 163


2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 6182              		.loc 1 2511 9
 6183 0458 8824     		movs	r4, #136
 6184 045a 3A19     		adds	r2, r7, r4
 6185 045c 1360     		str	r3, [r2]
 6186 045e 0123     		movs	r3, #1
 6187 0460 3B61     		str	r3, [r7, #16]
 6188              	.LBB870:
 6189              	.LBB871:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6190              		.loc 2 414 3
 6191 0462 3B69     		ldr	r3, [r7, #16]
 6192              		.syntax divided
 6193              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6194 0464 83F31088 		MSR primask, r3
 6195              	@ 0 "" 2
 6196              		.loc 2 415 1
 6197              		.thumb
 6198              		.syntax unified
 6199 0468 C046     		nop
 6200              	.LBE871:
 6201              	.LBE870:
 6202              		.loc 1 2511 9
 6203 046a 7B68     		ldr	r3, [r7, #4]
 6204 046c 1B68     		ldr	r3, [r3]
 6205 046e 1A68     		ldr	r2, [r3]
 6206 0470 7B68     		ldr	r3, [r7, #4]
 6207 0472 1B68     		ldr	r3, [r3]
 6208 0474 5149     		ldr	r1, .L249+4
 6209 0476 0A40     		ands	r2, r1
 6210 0478 1A60     		str	r2, [r3]
 6211 047a 3B19     		adds	r3, r7, r4
 6212 047c 1B68     		ldr	r3, [r3]
 6213 047e 7B61     		str	r3, [r7, #20]
 6214              	.LBB872:
 6215              	.LBB873:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6216              		.loc 2 414 3
 6217 0480 7B69     		ldr	r3, [r7, #20]
 6218              		.syntax divided
 6219              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6220 0482 83F31088 		MSR primask, r3
 6221              	@ 0 "" 2
 6222              		.loc 2 415 1
 6223              		.thumb
 6224              		.syntax unified
 6225 0486 C046     		nop
 6226              	.LBE873:
 6227              	.LBE872:
 6228              	.LBE867:
 6229              	.LBB874:
 6230              	.LBB875:
 6231              	.LBB876:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6232              		.loc 2 386 3
 6233              		.syntax divided
 6234              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 164


 6235 0488 EFF31083 		MRS r3, primask
 6236              	@ 0 "" 2
 6237              		.thumb
 6238              		.syntax unified
 6239 048c BB61     		str	r3, [r7, #24]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6240              		.loc 2 387 9
 6241 048e BB69     		ldr	r3, [r7, #24]
 6242              	.LBE876:
 6243              	.LBE875:
2512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6244              		.loc 1 2514 9
 6245 0490 8424     		movs	r4, #132
 6246 0492 3A19     		adds	r2, r7, r4
 6247 0494 1360     		str	r3, [r2]
 6248 0496 0123     		movs	r3, #1
 6249 0498 FB61     		str	r3, [r7, #28]
 6250              	.LBB877:
 6251              	.LBB878:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6252              		.loc 2 414 3
 6253 049a FB69     		ldr	r3, [r7, #28]
 6254              		.syntax divided
 6255              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6256 049c 83F31088 		MSR primask, r3
 6257              	@ 0 "" 2
 6258              		.loc 2 415 1
 6259              		.thumb
 6260              		.syntax unified
 6261 04a0 C046     		nop
 6262              	.LBE878:
 6263              	.LBE877:
 6264              		.loc 1 2514 9
 6265 04a2 7B68     		ldr	r3, [r7, #4]
 6266 04a4 1B68     		ldr	r3, [r3]
 6267 04a6 9A68     		ldr	r2, [r3, #8]
 6268 04a8 7B68     		ldr	r3, [r7, #4]
 6269 04aa 1B68     		ldr	r3, [r3]
 6270 04ac 0121     		movs	r1, #1
 6271 04ae 8A43     		bics	r2, r1
 6272 04b0 9A60     		str	r2, [r3, #8]
 6273 04b2 3B19     		adds	r3, r7, r4
 6274 04b4 1B68     		ldr	r3, [r3]
 6275 04b6 3B62     		str	r3, [r7, #32]
 6276              	.LBB879:
 6277              	.LBB880:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6278              		.loc 2 414 3
 6279 04b8 3B6A     		ldr	r3, [r7, #32]
 6280              		.syntax divided
 6281              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6282 04ba 83F31088 		MSR primask, r3
 6283              	@ 0 "" 2
 6284              		.loc 2 415 1
 6285              		.thumb
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 165


 6286              		.syntax unified
 6287 04be C046     		nop
 6288              	.LBE880:
 6289              	.LBE879:
 6290              	.LBE874:
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 6291              		.loc 1 2517 24
 6292 04c0 7B68     		ldr	r3, [r7, #4]
 6293 04c2 8022     		movs	r2, #128
 6294 04c4 2021     		movs	r1, #32
 6295 04c6 9950     		str	r1, [r3, r2]
2518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 6296              		.loc 1 2518 30
 6297 04c8 7B68     		ldr	r3, [r7, #4]
 6298 04ca 0022     		movs	r2, #0
 6299 04cc 1A66     		str	r2, [r3, #96]
2519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Clear RxISR function pointer */
2521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxISR = NULL;
 6300              		.loc 1 2521 22
 6301 04ce 7B68     		ldr	r3, [r7, #4]
 6302 04d0 0022     		movs	r2, #0
 6303 04d2 9A66     		str	r2, [r3, #104]
 6304              	.LBB881:
 6305              	.LBB882:
 6306              	.LBB883:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 6307              		.loc 2 386 3
 6308              		.syntax divided
 6309              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6310 04d4 EFF31083 		MRS r3, primask
 6311              	@ 0 "" 2
 6312              		.thumb
 6313              		.syntax unified
 6314 04d8 7B62     		str	r3, [r7, #36]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6315              		.loc 2 387 9
 6316 04da 7B6A     		ldr	r3, [r7, #36]
 6317              	.LBE883:
 6318              	.LBE882:
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 6319              		.loc 1 2523 9
 6320 04dc 8024     		movs	r4, #128
 6321 04de 3A19     		adds	r2, r7, r4
 6322 04e0 1360     		str	r3, [r2]
 6323 04e2 0123     		movs	r3, #1
 6324 04e4 BB62     		str	r3, [r7, #40]
 6325              	.LBB884:
 6326              	.LBB885:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6327              		.loc 2 414 3
 6328 04e6 BB6A     		ldr	r3, [r7, #40]
 6329              		.syntax divided
 6330              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 166


 6331 04e8 83F31088 		MSR primask, r3
 6332              	@ 0 "" 2
 6333              		.loc 2 415 1
 6334              		.thumb
 6335              		.syntax unified
 6336 04ec C046     		nop
 6337              	.LBE885:
 6338              	.LBE884:
 6339              		.loc 1 2523 9
 6340 04ee 7B68     		ldr	r3, [r7, #4]
 6341 04f0 1B68     		ldr	r3, [r3]
 6342 04f2 1A68     		ldr	r2, [r3]
 6343 04f4 7B68     		ldr	r3, [r7, #4]
 6344 04f6 1B68     		ldr	r3, [r3]
 6345 04f8 1021     		movs	r1, #16
 6346 04fa 8A43     		bics	r2, r1
 6347 04fc 1A60     		str	r2, [r3]
 6348 04fe 3B19     		adds	r3, r7, r4
 6349 0500 1B68     		ldr	r3, [r3]
 6350 0502 FB62     		str	r3, [r7, #44]
 6351              	.LBB886:
 6352              	.LBB887:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6353              		.loc 2 414 3
 6354 0504 FB6A     		ldr	r3, [r7, #44]
 6355              		.syntax divided
 6356              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6357 0506 83F31088 		MSR primask, r3
 6358              	@ 0 "" 2
 6359              		.loc 2 415 1
 6360              		.thumb
 6361              		.syntax unified
 6362 050a C046     		nop
 6363              	.LBE887:
 6364              	.LBE886:
 6365              	.LBE881:
2524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            In this case, Rx Event type is Idle Event */
2527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 6366              		.loc 1 2527 28
 6367 050c 7B68     		ldr	r3, [r7, #4]
 6368 050e 0222     		movs	r2, #2
 6369 0510 5A66     		str	r2, [r3, #100]
2528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 6370              		.loc 1 2534 9
 6371 0512 3B18     		adds	r3, r7, r0
 6372 0514 1A88     		ldrh	r2, [r3]
 6373 0516 7B68     		ldr	r3, [r7, #4]
 6374 0518 1100     		movs	r1, r2
 6375 051a 1800     		movs	r0, r3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 167


 6376 051c FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
 6377              		.loc 1 2537 7
 6378 0520 44E0     		b	.L245
 6379              	.L226:
 6380              	.LBE866:
2538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR1_UESM)
2541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR3_WUFIE)
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 6381              		.loc 1 2544 18
 6382 0522 A423     		movs	r3, #164
 6383 0524 FB18     		adds	r3, r7, r3
 6384 0526 1A68     		ldr	r2, [r3]
 6385 0528 8023     		movs	r3, #128
 6386 052a 5B03     		lsls	r3, r3, #13
 6387 052c 1340     		ands	r3, r2
 6388              		.loc 1 2544 6
 6389 052e 10D0     		beq	.L238
 6390              		.loc 1 2544 54 discriminator 1
 6391 0530 9C23     		movs	r3, #156
 6392 0532 FB18     		adds	r3, r7, r3
 6393 0534 1A68     		ldr	r2, [r3]
 6394 0536 8023     		movs	r3, #128
 6395 0538 DB03     		lsls	r3, r3, #15
 6396 053a 1340     		ands	r3, r2
 6397              		.loc 1 2544 42 discriminator 1
 6398 053c 09D0     		beq	.L238
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 6399              		.loc 1 2546 5
 6400 053e 7B68     		ldr	r3, [r7, #4]
 6401 0540 1B68     		ldr	r3, [r3]
 6402 0542 8022     		movs	r2, #128
 6403 0544 5203     		lsls	r2, r2, #13
 6404 0546 1A62     		str	r2, [r3, #32]
2547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->WakeupCallback(huart);
2554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
2555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 6405              		.loc 1 2556 5
 6406 0548 7B68     		ldr	r3, [r7, #4]
 6407 054a 1800     		movs	r0, r3
 6408 054c FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 168


 6409              		.loc 1 2558 5
 6410 0550 2FE0     		b	.L206
 6411              	.L238:
2559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_WUFIE */
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR1_UESM */
2562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
 6412              		.loc 1 2564 18
 6413 0552 A423     		movs	r3, #164
 6414 0554 FB18     		adds	r3, r7, r3
 6415 0556 1B68     		ldr	r3, [r3]
 6416 0558 8022     		movs	r2, #128
 6417 055a 1340     		ands	r3, r2
 6418              		.loc 1 2564 6
 6419 055c 0FD0     		beq	.L239
2565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
 6420              		.loc 1 2565 19
 6421 055e A023     		movs	r3, #160
 6422 0560 FB18     		adds	r3, r7, r3
 6423 0562 1B68     		ldr	r3, [r3]
 6424 0564 8022     		movs	r2, #128
 6425 0566 1340     		ands	r3, r2
 6426              		.loc 1 2565 7
 6427 0568 09D0     		beq	.L239
2566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->TxISR != NULL)
 6428              		.loc 1 2567 14
 6429 056a 7B68     		ldr	r3, [r7, #4]
 6430 056c DB6E     		ldr	r3, [r3, #108]
 6431              		.loc 1 2567 8
 6432 056e 002B     		cmp	r3, #0
 6433 0570 1ED0     		beq	.L246
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxISR(huart);
 6434              		.loc 1 2569 12
 6435 0572 7B68     		ldr	r3, [r7, #4]
 6436 0574 DB6E     		ldr	r3, [r3, #108]
 6437              		.loc 1 2569 7
 6438 0576 7A68     		ldr	r2, [r7, #4]
 6439 0578 1000     		movs	r0, r2
 6440 057a 9847     		blx	r3
 6441              	.LVL5:
2570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 6442              		.loc 1 2571 5
 6443 057c 18E0     		b	.L246
 6444              	.L239:
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 6445              		.loc 1 2575 18
 6446 057e A423     		movs	r3, #164
 6447 0580 FB18     		adds	r3, r7, r3
 6448 0582 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 169


 6449 0584 4022     		movs	r2, #64
 6450 0586 1340     		ands	r3, r2
 6451              		.loc 1 2575 6
 6452 0588 13D0     		beq	.L206
 6453              		.loc 1 2575 53 discriminator 1
 6454 058a A023     		movs	r3, #160
 6455 058c FB18     		adds	r3, r7, r3
 6456 058e 1B68     		ldr	r3, [r3]
 6457 0590 4022     		movs	r2, #64
 6458 0592 1340     		ands	r3, r2
 6459              		.loc 1 2575 41 discriminator 1
 6460 0594 0DD0     		beq	.L206
2576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 6461              		.loc 1 2577 5
 6462 0596 7B68     		ldr	r3, [r7, #4]
 6463 0598 1800     		movs	r0, r3
 6464 059a FFF7FEFF 		bl	UART_EndTransmit_IT
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 6465              		.loc 1 2578 5
 6466 059e 08E0     		b	.L206
 6467              	.L241:
2303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 6468              		.loc 1 2303 7
 6469 05a0 C046     		nop
 6470 05a2 06E0     		b	.L206
 6471              	.L242:
2440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 6472              		.loc 1 2440 5
 6473 05a4 C046     		nop
 6474 05a6 04E0     		b	.L206
 6475              	.L244:
 6476              	.LBB888:
2499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 6477              		.loc 1 2499 7
 6478 05a8 C046     		nop
 6479 05aa 02E0     		b	.L206
 6480              	.L245:
 6481              	.LBE888:
 6482              	.LBB889:
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 6483              		.loc 1 2537 7
 6484 05ac C046     		nop
 6485 05ae 00E0     		b	.L206
 6486              	.L246:
 6487              	.LBE889:
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 6488              		.loc 1 2571 5
 6489 05b0 C046     		nop
 6490              	.L206:
2579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6491              		.loc 1 2581 1
 6492 05b2 BD46     		mov	sp, r7
 6493 05b4 2BB0     		add	sp, sp, #172
 6494              		@ sp needed
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 170


 6495 05b6 90BD     		pop	{r4, r7, pc}
 6496              	.L250:
 6497              		.align	2
 6498              	.L249:
 6499 05b8 FFFEFFFF 		.word	-257
 6500 05bc DFFEFFFF 		.word	-289
 6501              		.cfi_endproc
 6502              	.LFE62:
 6504              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 6505              		.align	1
 6506              		.weak	HAL_UART_TxCpltCallback
 6507              		.syntax unified
 6508              		.code	16
 6509              		.thumb_func
 6511              	HAL_UART_TxCpltCallback:
 6512              	.LFB63:
2582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6513              		.loc 1 2589 1
 6514              		.cfi_startproc
 6515              		@ args = 0, pretend = 0, frame = 8
 6516              		@ frame_needed = 1, uses_anonymous_args = 0
 6517 0000 80B5     		push	{r7, lr}
 6518              	.LCFI69:
 6519              		.cfi_def_cfa_offset 8
 6520              		.cfi_offset 7, -8
 6521              		.cfi_offset 14, -4
 6522 0002 82B0     		sub	sp, sp, #8
 6523              	.LCFI70:
 6524              		.cfi_def_cfa_offset 16
 6525 0004 00AF     		add	r7, sp, #0
 6526              	.LCFI71:
 6527              		.cfi_def_cfa_register 7
 6528 0006 7860     		str	r0, [r7, #4]
2590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6529              		.loc 1 2596 1
 6530 0008 C046     		nop
 6531 000a BD46     		mov	sp, r7
 6532 000c 02B0     		add	sp, sp, #8
 6533              		@ sp needed
 6534 000e 80BD     		pop	{r7, pc}
 6535              		.cfi_endproc
 6536              	.LFE63:
 6538              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 6539              		.align	1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 171


 6540              		.weak	HAL_UART_TxHalfCpltCallback
 6541              		.syntax unified
 6542              		.code	16
 6543              		.thumb_func
 6545              	HAL_UART_TxHalfCpltCallback:
 6546              	.LFB64:
2597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6547              		.loc 1 2604 1
 6548              		.cfi_startproc
 6549              		@ args = 0, pretend = 0, frame = 8
 6550              		@ frame_needed = 1, uses_anonymous_args = 0
 6551 0000 80B5     		push	{r7, lr}
 6552              	.LCFI72:
 6553              		.cfi_def_cfa_offset 8
 6554              		.cfi_offset 7, -8
 6555              		.cfi_offset 14, -4
 6556 0002 82B0     		sub	sp, sp, #8
 6557              	.LCFI73:
 6558              		.cfi_def_cfa_offset 16
 6559 0004 00AF     		add	r7, sp, #0
 6560              	.LCFI74:
 6561              		.cfi_def_cfa_register 7
 6562 0006 7860     		str	r0, [r7, #4]
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6563              		.loc 1 2611 1
 6564 0008 C046     		nop
 6565 000a BD46     		mov	sp, r7
 6566 000c 02B0     		add	sp, sp, #8
 6567              		@ sp needed
 6568 000e 80BD     		pop	{r7, pc}
 6569              		.cfi_endproc
 6570              	.LFE64:
 6572              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 6573              		.align	1
 6574              		.weak	HAL_UART_RxCpltCallback
 6575              		.syntax unified
 6576              		.code	16
 6577              		.thumb_func
 6579              	HAL_UART_RxCpltCallback:
 6580              	.LFB65:
2612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 172


2616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6581              		.loc 1 2619 1
 6582              		.cfi_startproc
 6583              		@ args = 0, pretend = 0, frame = 8
 6584              		@ frame_needed = 1, uses_anonymous_args = 0
 6585 0000 80B5     		push	{r7, lr}
 6586              	.LCFI75:
 6587              		.cfi_def_cfa_offset 8
 6588              		.cfi_offset 7, -8
 6589              		.cfi_offset 14, -4
 6590 0002 82B0     		sub	sp, sp, #8
 6591              	.LCFI76:
 6592              		.cfi_def_cfa_offset 16
 6593 0004 00AF     		add	r7, sp, #0
 6594              	.LCFI77:
 6595              		.cfi_def_cfa_register 7
 6596 0006 7860     		str	r0, [r7, #4]
2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6597              		.loc 1 2626 1
 6598 0008 C046     		nop
 6599 000a BD46     		mov	sp, r7
 6600 000c 02B0     		add	sp, sp, #8
 6601              		@ sp needed
 6602 000e 80BD     		pop	{r7, pc}
 6603              		.cfi_endproc
 6604              	.LFE65:
 6606              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 6607              		.align	1
 6608              		.weak	HAL_UART_RxHalfCpltCallback
 6609              		.syntax unified
 6610              		.code	16
 6611              		.thumb_func
 6613              	HAL_UART_RxHalfCpltCallback:
 6614              	.LFB66:
2627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6615              		.loc 1 2634 1
 6616              		.cfi_startproc
 6617              		@ args = 0, pretend = 0, frame = 8
 6618              		@ frame_needed = 1, uses_anonymous_args = 0
 6619 0000 80B5     		push	{r7, lr}
 6620              	.LCFI78:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 173


 6621              		.cfi_def_cfa_offset 8
 6622              		.cfi_offset 7, -8
 6623              		.cfi_offset 14, -4
 6624 0002 82B0     		sub	sp, sp, #8
 6625              	.LCFI79:
 6626              		.cfi_def_cfa_offset 16
 6627 0004 00AF     		add	r7, sp, #0
 6628              	.LCFI80:
 6629              		.cfi_def_cfa_register 7
 6630 0006 7860     		str	r0, [r7, #4]
2635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6631              		.loc 1 2641 1
 6632 0008 C046     		nop
 6633 000a BD46     		mov	sp, r7
 6634 000c 02B0     		add	sp, sp, #8
 6635              		@ sp needed
 6636 000e 80BD     		pop	{r7, pc}
 6637              		.cfi_endproc
 6638              	.LFE66:
 6640              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 6641              		.align	1
 6642              		.weak	HAL_UART_ErrorCallback
 6643              		.syntax unified
 6644              		.code	16
 6645              		.thumb_func
 6647              	HAL_UART_ErrorCallback:
 6648              	.LFB67:
2642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART error callback.
2645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6649              		.loc 1 2649 1
 6650              		.cfi_startproc
 6651              		@ args = 0, pretend = 0, frame = 8
 6652              		@ frame_needed = 1, uses_anonymous_args = 0
 6653 0000 80B5     		push	{r7, lr}
 6654              	.LCFI81:
 6655              		.cfi_def_cfa_offset 8
 6656              		.cfi_offset 7, -8
 6657              		.cfi_offset 14, -4
 6658 0002 82B0     		sub	sp, sp, #8
 6659              	.LCFI82:
 6660              		.cfi_def_cfa_offset 16
 6661 0004 00AF     		add	r7, sp, #0
 6662              	.LCFI83:
 6663              		.cfi_def_cfa_register 7
 6664 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 174


2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6665              		.loc 1 2656 1
 6666 0008 C046     		nop
 6667 000a BD46     		mov	sp, r7
 6668 000c 02B0     		add	sp, sp, #8
 6669              		@ sp needed
 6670 000e 80BD     		pop	{r7, pc}
 6671              		.cfi_endproc
 6672              	.LFE67:
 6674              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 6675              		.align	1
 6676              		.weak	HAL_UART_AbortCpltCallback
 6677              		.syntax unified
 6678              		.code	16
 6679              		.thumb_func
 6681              	HAL_UART_AbortCpltCallback:
 6682              	.LFB68:
2657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6683              		.loc 1 2664 1
 6684              		.cfi_startproc
 6685              		@ args = 0, pretend = 0, frame = 8
 6686              		@ frame_needed = 1, uses_anonymous_args = 0
 6687 0000 80B5     		push	{r7, lr}
 6688              	.LCFI84:
 6689              		.cfi_def_cfa_offset 8
 6690              		.cfi_offset 7, -8
 6691              		.cfi_offset 14, -4
 6692 0002 82B0     		sub	sp, sp, #8
 6693              	.LCFI85:
 6694              		.cfi_def_cfa_offset 16
 6695 0004 00AF     		add	r7, sp, #0
 6696              	.LCFI86:
 6697              		.cfi_def_cfa_register 7
 6698 0006 7860     		str	r0, [r7, #4]
2665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6699              		.loc 1 2671 1
 6700 0008 C046     		nop
 6701 000a BD46     		mov	sp, r7
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 175


 6702 000c 02B0     		add	sp, sp, #8
 6703              		@ sp needed
 6704 000e 80BD     		pop	{r7, pc}
 6705              		.cfi_endproc
 6706              	.LFE68:
 6708              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 6709              		.align	1
 6710              		.weak	HAL_UART_AbortTransmitCpltCallback
 6711              		.syntax unified
 6712              		.code	16
 6713              		.thumb_func
 6715              	HAL_UART_AbortTransmitCpltCallback:
 6716              	.LFB69:
2672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6717              		.loc 1 2679 1
 6718              		.cfi_startproc
 6719              		@ args = 0, pretend = 0, frame = 8
 6720              		@ frame_needed = 1, uses_anonymous_args = 0
 6721 0000 80B5     		push	{r7, lr}
 6722              	.LCFI87:
 6723              		.cfi_def_cfa_offset 8
 6724              		.cfi_offset 7, -8
 6725              		.cfi_offset 14, -4
 6726 0002 82B0     		sub	sp, sp, #8
 6727              	.LCFI88:
 6728              		.cfi_def_cfa_offset 16
 6729 0004 00AF     		add	r7, sp, #0
 6730              	.LCFI89:
 6731              		.cfi_def_cfa_register 7
 6732 0006 7860     		str	r0, [r7, #4]
2680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6733              		.loc 1 2686 1
 6734 0008 C046     		nop
 6735 000a BD46     		mov	sp, r7
 6736 000c 02B0     		add	sp, sp, #8
 6737              		@ sp needed
 6738 000e 80BD     		pop	{r7, pc}
 6739              		.cfi_endproc
 6740              	.LFE69:
 6742              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 6743              		.align	1
 6744              		.weak	HAL_UART_AbortReceiveCpltCallback
 6745              		.syntax unified
 6746              		.code	16
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 176


 6747              		.thumb_func
 6749              	HAL_UART_AbortReceiveCpltCallback:
 6750              	.LFB70:
2687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6751              		.loc 1 2694 1
 6752              		.cfi_startproc
 6753              		@ args = 0, pretend = 0, frame = 8
 6754              		@ frame_needed = 1, uses_anonymous_args = 0
 6755 0000 80B5     		push	{r7, lr}
 6756              	.LCFI90:
 6757              		.cfi_def_cfa_offset 8
 6758              		.cfi_offset 7, -8
 6759              		.cfi_offset 14, -4
 6760 0002 82B0     		sub	sp, sp, #8
 6761              	.LCFI91:
 6762              		.cfi_def_cfa_offset 16
 6763 0004 00AF     		add	r7, sp, #0
 6764              	.LCFI92:
 6765              		.cfi_def_cfa_register 7
 6766 0006 7860     		str	r0, [r7, #4]
2695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6767              		.loc 1 2701 1
 6768 0008 C046     		nop
 6769 000a BD46     		mov	sp, r7
 6770 000c 02B0     		add	sp, sp, #8
 6771              		@ sp needed
 6772 000e 80BD     		pop	{r7, pc}
 6773              		.cfi_endproc
 6774              	.LFE70:
 6776              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 6777              		.align	1
 6778              		.weak	HAL_UARTEx_RxEventCallback
 6779              		.syntax unified
 6780              		.code	16
 6781              		.thumb_func
 6783              	HAL_UARTEx_RxEventCallback:
 6784              	.LFB71:
2702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               reception buffer until which, data are available)
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 177


2709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6785              		.loc 1 2711 1
 6786              		.cfi_startproc
 6787              		@ args = 0, pretend = 0, frame = 8
 6788              		@ frame_needed = 1, uses_anonymous_args = 0
 6789 0000 80B5     		push	{r7, lr}
 6790              	.LCFI93:
 6791              		.cfi_def_cfa_offset 8
 6792              		.cfi_offset 7, -8
 6793              		.cfi_offset 14, -4
 6794 0002 82B0     		sub	sp, sp, #8
 6795              	.LCFI94:
 6796              		.cfi_def_cfa_offset 16
 6797 0004 00AF     		add	r7, sp, #0
 6798              	.LCFI95:
 6799              		.cfi_def_cfa_register 7
 6800 0006 7860     		str	r0, [r7, #4]
 6801 0008 0A00     		movs	r2, r1
 6802 000a BB1C     		adds	r3, r7, #2
 6803 000c 1A80     		strh	r2, [r3]
2712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
2714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(Size);
2715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6804              		.loc 1 2719 1
 6805 000e C046     		nop
 6806 0010 BD46     		mov	sp, r7
 6807 0012 02B0     		add	sp, sp, #8
 6808              		@ sp needed
 6809 0014 80BD     		pop	{r7, pc}
 6810              		.cfi_endproc
 6811              	.LFE71:
 6813              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 6814              		.align	1
 6815              		.global	HAL_UART_ReceiverTimeout_Config
 6816              		.syntax unified
 6817              		.code	16
 6818              		.thumb_func
 6820              	HAL_UART_ReceiverTimeout_Config:
 6821              	.LFB72:
2720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief   UART control functions
2727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
2729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### Peripheral Control functions #####
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 178


2731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
2732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
2747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6822              		.loc 1 2759 1
 6823              		.cfi_startproc
 6824              		@ args = 0, pretend = 0, frame = 8
 6825              		@ frame_needed = 1, uses_anonymous_args = 0
 6826 0000 80B5     		push	{r7, lr}
 6827              	.LCFI96:
 6828              		.cfi_def_cfa_offset 8
 6829              		.cfi_offset 7, -8
 6830              		.cfi_offset 14, -4
 6831 0002 82B0     		sub	sp, sp, #8
 6832              	.LCFI97:
 6833              		.cfi_def_cfa_offset 16
 6834 0004 00AF     		add	r7, sp, #0
 6835              	.LCFI98:
 6836              		.cfi_def_cfa_register 7
 6837 0006 7860     		str	r0, [r7, #4]
 6838 0008 3960     		str	r1, [r7]
2760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
 6839              		.loc 1 2761 3
 6840 000a 7B68     		ldr	r3, [r7, #4]
 6841 000c 1B68     		ldr	r3, [r3]
 6842 000e 5B69     		ldr	r3, [r3, #20]
 6843 0010 1B0E     		lsrs	r3, r3, #24
 6844 0012 1906     		lsls	r1, r3, #24
 6845 0014 7B68     		ldr	r3, [r7, #4]
 6846 0016 1B68     		ldr	r3, [r3]
 6847 0018 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 179


 6848 001a 0A43     		orrs	r2, r1
 6849 001c 5A61     		str	r2, [r3, #20]
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6850              		.loc 1 2762 1
 6851 001e C046     		nop
 6852 0020 BD46     		mov	sp, r7
 6853 0022 02B0     		add	sp, sp, #8
 6854              		@ sp needed
 6855 0024 80BD     		pop	{r7, pc}
 6856              		.cfi_endproc
 6857              	.LFE72:
 6859              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 6860              		.align	1
 6861              		.global	HAL_UART_EnableReceiverTimeout
 6862              		.syntax unified
 6863              		.code	16
 6864              		.thumb_func
 6866              	HAL_UART_EnableReceiverTimeout:
 6867              	.LFB73:
2763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6868              		.loc 1 2771 1
 6869              		.cfi_startproc
 6870              		@ args = 0, pretend = 0, frame = 8
 6871              		@ frame_needed = 1, uses_anonymous_args = 0
 6872 0000 80B5     		push	{r7, lr}
 6873              	.LCFI99:
 6874              		.cfi_def_cfa_offset 8
 6875              		.cfi_offset 7, -8
 6876              		.cfi_offset 14, -4
 6877 0002 82B0     		sub	sp, sp, #8
 6878              	.LCFI100:
 6879              		.cfi_def_cfa_offset 16
 6880 0004 00AF     		add	r7, sp, #0
 6881              	.LCFI101:
 6882              		.cfi_def_cfa_register 7
 6883 0006 7860     		str	r0, [r7, #4]
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 6884              		.loc 1 2772 12
 6885 0008 7B68     		ldr	r3, [r7, #4]
 6886 000a DB6F     		ldr	r3, [r3, #124]
 6887              		.loc 1 2772 6
 6888 000c 202B     		cmp	r3, #32
 6889 000e 1FD1     		bne	.L262
2773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
2775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 6890              		.loc 1 2775 5
 6891 0010 7B68     		ldr	r3, [r7, #4]
 6892 0012 7822     		movs	r2, #120
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 180


 6893 0014 9B5C     		ldrb	r3, [r3, r2]
 6894 0016 012B     		cmp	r3, #1
 6895 0018 01D1     		bne	.L263
 6896              		.loc 1 2775 5 is_stmt 0 discriminator 1
 6897 001a 0223     		movs	r3, #2
 6898 001c 19E0     		b	.L264
 6899              	.L263:
 6900              		.loc 1 2775 5 discriminator 2
 6901 001e 7B68     		ldr	r3, [r7, #4]
 6902 0020 7822     		movs	r2, #120
 6903 0022 0121     		movs	r1, #1
 6904 0024 9954     		strb	r1, [r3, r2]
2776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY;
 6905              		.loc 1 2777 19 is_stmt 1 discriminator 2
 6906 0026 7B68     		ldr	r3, [r7, #4]
 6907 0028 2422     		movs	r2, #36
 6908 002a DA67     		str	r2, [r3, #124]
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the USART RTOEN bit */
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 6909              		.loc 1 2780 5 discriminator 2
 6910 002c 7B68     		ldr	r3, [r7, #4]
 6911 002e 1B68     		ldr	r3, [r3]
 6912 0030 5A68     		ldr	r2, [r3, #4]
 6913 0032 7B68     		ldr	r3, [r7, #4]
 6914 0034 1B68     		ldr	r3, [r3]
 6915 0036 8021     		movs	r1, #128
 6916 0038 0904     		lsls	r1, r1, #16
 6917 003a 0A43     		orrs	r2, r1
 6918 003c 5A60     		str	r2, [r3, #4]
2781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 6919              		.loc 1 2782 19 discriminator 2
 6920 003e 7B68     		ldr	r3, [r7, #4]
 6921 0040 2022     		movs	r2, #32
 6922 0042 DA67     		str	r2, [r3, #124]
2783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
2785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 6923              		.loc 1 2785 5 discriminator 2
 6924 0044 7B68     		ldr	r3, [r7, #4]
 6925 0046 7822     		movs	r2, #120
 6926 0048 0021     		movs	r1, #0
 6927 004a 9954     		strb	r1, [r3, r2]
2786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 6928              		.loc 1 2787 12 discriminator 2
 6929 004c 0023     		movs	r3, #0
 6930 004e 00E0     		b	.L264
 6931              	.L262:
2788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 6932              		.loc 1 2791 12
 6933 0050 0223     		movs	r3, #2
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 181


 6934              	.L264:
2792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 6935              		.loc 1 2793 1
 6936 0052 1800     		movs	r0, r3
 6937 0054 BD46     		mov	sp, r7
 6938 0056 02B0     		add	sp, sp, #8
 6939              		@ sp needed
 6940 0058 80BD     		pop	{r7, pc}
 6941              		.cfi_endproc
 6942              	.LFE73:
 6944              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 6945              		.align	1
 6946              		.global	HAL_UART_DisableReceiverTimeout
 6947              		.syntax unified
 6948              		.code	16
 6949              		.thumb_func
 6951              	HAL_UART_DisableReceiverTimeout:
 6952              	.LFB74:
2794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 6953              		.loc 1 2802 1
 6954              		.cfi_startproc
 6955              		@ args = 0, pretend = 0, frame = 8
 6956              		@ frame_needed = 1, uses_anonymous_args = 0
 6957 0000 80B5     		push	{r7, lr}
 6958              	.LCFI102:
 6959              		.cfi_def_cfa_offset 8
 6960              		.cfi_offset 7, -8
 6961              		.cfi_offset 14, -4
 6962 0002 82B0     		sub	sp, sp, #8
 6963              	.LCFI103:
 6964              		.cfi_def_cfa_offset 16
 6965 0004 00AF     		add	r7, sp, #0
 6966              	.LCFI104:
 6967              		.cfi_def_cfa_register 7
 6968 0006 7860     		str	r0, [r7, #4]
2803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 6969              		.loc 1 2803 12
 6970 0008 7B68     		ldr	r3, [r7, #4]
 6971 000a DB6F     		ldr	r3, [r3, #124]
 6972              		.loc 1 2803 6
 6973 000c 202B     		cmp	r3, #32
 6974 000e 1ED1     		bne	.L266
2804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
2806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 6975              		.loc 1 2806 5
 6976 0010 7B68     		ldr	r3, [r7, #4]
 6977 0012 7822     		movs	r2, #120
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 182


 6978 0014 9B5C     		ldrb	r3, [r3, r2]
 6979 0016 012B     		cmp	r3, #1
 6980 0018 01D1     		bne	.L267
 6981              		.loc 1 2806 5 is_stmt 0 discriminator 1
 6982 001a 0223     		movs	r3, #2
 6983 001c 18E0     		b	.L268
 6984              	.L267:
 6985              		.loc 1 2806 5 discriminator 2
 6986 001e 7B68     		ldr	r3, [r7, #4]
 6987 0020 7822     		movs	r2, #120
 6988 0022 0121     		movs	r1, #1
 6989 0024 9954     		strb	r1, [r3, r2]
2807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY;
 6990              		.loc 1 2808 19 is_stmt 1 discriminator 2
 6991 0026 7B68     		ldr	r3, [r7, #4]
 6992 0028 2422     		movs	r2, #36
 6993 002a DA67     		str	r2, [r3, #124]
2809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the USART RTOEN bit */
2811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 6994              		.loc 1 2811 5 discriminator 2
 6995 002c 7B68     		ldr	r3, [r7, #4]
 6996 002e 1B68     		ldr	r3, [r3]
 6997 0030 5A68     		ldr	r2, [r3, #4]
 6998 0032 7B68     		ldr	r3, [r7, #4]
 6999 0034 1B68     		ldr	r3, [r3]
 7000 0036 0849     		ldr	r1, .L269
 7001 0038 0A40     		ands	r2, r1
 7002 003a 5A60     		str	r2, [r3, #4]
2812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 7003              		.loc 1 2813 19 discriminator 2
 7004 003c 7B68     		ldr	r3, [r7, #4]
 7005 003e 2022     		movs	r2, #32
 7006 0040 DA67     		str	r2, [r3, #124]
2814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
2816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 7007              		.loc 1 2816 5 discriminator 2
 7008 0042 7B68     		ldr	r3, [r7, #4]
 7009 0044 7822     		movs	r2, #120
 7010 0046 0021     		movs	r1, #0
 7011 0048 9954     		strb	r1, [r3, r2]
2817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 7012              		.loc 1 2818 12 discriminator 2
 7013 004a 0023     		movs	r3, #0
 7014 004c 00E0     		b	.L268
 7015              	.L266:
2819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 7016              		.loc 1 2822 12
 7017 004e 0223     		movs	r3, #2
 7018              	.L268:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 183


2823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7019              		.loc 1 2824 1
 7020 0050 1800     		movs	r0, r3
 7021 0052 BD46     		mov	sp, r7
 7022 0054 02B0     		add	sp, sp, #8
 7023              		@ sp needed
 7024 0056 80BD     		pop	{r7, pc}
 7025              	.L270:
 7026              		.align	2
 7027              	.L269:
 7028 0058 FFFF7FFF 		.word	-8388609
 7029              		.cfi_endproc
 7030              	.LFE74:
 7032              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 7033              		.align	1
 7034              		.global	HAL_MultiProcessor_EnableMuteMode
 7035              		.syntax unified
 7036              		.code	16
 7037              		.thumb_func
 7039              	HAL_MultiProcessor_EnableMuteMode:
 7040              	.LFB75:
2825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7041              		.loc 1 2833 1
 7042              		.cfi_startproc
 7043              		@ args = 0, pretend = 0, frame = 24
 7044              		@ frame_needed = 1, uses_anonymous_args = 0
 7045 0000 80B5     		push	{r7, lr}
 7046              	.LCFI105:
 7047              		.cfi_def_cfa_offset 8
 7048              		.cfi_offset 7, -8
 7049              		.cfi_offset 14, -4
 7050 0002 86B0     		sub	sp, sp, #24
 7051              	.LCFI106:
 7052              		.cfi_def_cfa_offset 32
 7053 0004 00AF     		add	r7, sp, #0
 7054              	.LCFI107:
 7055              		.cfi_def_cfa_register 7
 7056 0006 7860     		str	r0, [r7, #4]
2834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 7057              		.loc 1 2834 3
 7058 0008 7B68     		ldr	r3, [r7, #4]
 7059 000a 7822     		movs	r2, #120
 7060 000c 9B5C     		ldrb	r3, [r3, r2]
 7061 000e 012B     		cmp	r3, #1
 7062 0010 01D1     		bne	.L272
 7063              		.loc 1 2834 3 is_stmt 0 discriminator 1
 7064 0012 0223     		movs	r3, #2
 7065 0014 28E0     		b	.L273
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 184


 7066              	.L272:
 7067              		.loc 1 2834 3 discriminator 2
 7068 0016 7B68     		ldr	r3, [r7, #4]
 7069 0018 7822     		movs	r2, #120
 7070 001a 0121     		movs	r1, #1
 7071 001c 9954     		strb	r1, [r3, r2]
2835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7072              		.loc 1 2836 17 is_stmt 1 discriminator 2
 7073 001e 7B68     		ldr	r3, [r7, #4]
 7074 0020 2422     		movs	r2, #36
 7075 0022 DA67     		str	r2, [r3, #124]
 7076              	.LBB890:
 7077              	.LBB891:
 7078              	.LBB892:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 7079              		.loc 2 386 3 discriminator 2
 7080              		.syntax divided
 7081              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7082 0024 EFF31083 		MRS r3, primask
 7083              	@ 0 "" 2
 7084              		.thumb
 7085              		.syntax unified
 7086 0028 BB60     		str	r3, [r7, #8]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7087              		.loc 2 387 9 discriminator 2
 7088 002a BB68     		ldr	r3, [r7, #8]
 7089              	.LBE892:
 7090              	.LBE891:
2837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 7091              		.loc 1 2839 3 discriminator 2
 7092 002c 7B61     		str	r3, [r7, #20]
 7093 002e 0123     		movs	r3, #1
 7094 0030 FB60     		str	r3, [r7, #12]
 7095              	.LBB893:
 7096              	.LBB894:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7097              		.loc 2 414 3 discriminator 2
 7098 0032 FB68     		ldr	r3, [r7, #12]
 7099              		.syntax divided
 7100              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7101 0034 83F31088 		MSR primask, r3
 7102              	@ 0 "" 2
 7103              		.loc 2 415 1 discriminator 2
 7104              		.thumb
 7105              		.syntax unified
 7106 0038 C046     		nop
 7107              	.LBE894:
 7108              	.LBE893:
 7109              		.loc 1 2839 3 discriminator 2
 7110 003a 7B68     		ldr	r3, [r7, #4]
 7111 003c 1B68     		ldr	r3, [r3]
 7112 003e 1A68     		ldr	r2, [r3]
 7113 0040 7B68     		ldr	r3, [r7, #4]
 7114 0042 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 185


 7115 0044 8021     		movs	r1, #128
 7116 0046 8901     		lsls	r1, r1, #6
 7117 0048 0A43     		orrs	r2, r1
 7118 004a 1A60     		str	r2, [r3]
 7119 004c 7B69     		ldr	r3, [r7, #20]
 7120 004e 3B61     		str	r3, [r7, #16]
 7121              	.LBB895:
 7122              	.LBB896:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7123              		.loc 2 414 3 discriminator 2
 7124 0050 3B69     		ldr	r3, [r7, #16]
 7125              		.syntax divided
 7126              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7127 0052 83F31088 		MSR primask, r3
 7128              	@ 0 "" 2
 7129              		.loc 2 415 1 discriminator 2
 7130              		.thumb
 7131              		.syntax unified
 7132 0056 C046     		nop
 7133              	.LBE896:
 7134              	.LBE895:
 7135              	.LBE890:
2840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7136              		.loc 1 2841 17 discriminator 2
 7137 0058 7B68     		ldr	r3, [r7, #4]
 7138 005a 2022     		movs	r2, #32
 7139 005c DA67     		str	r2, [r3, #124]
2842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 7140              		.loc 1 2843 11 discriminator 2
 7141 005e 7B68     		ldr	r3, [r7, #4]
 7142 0060 1800     		movs	r0, r3
 7143 0062 FFF7FEFF 		bl	UART_CheckIdleState
 7144 0066 0300     		movs	r3, r0
 7145              	.L273:
2844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7146              		.loc 1 2844 1
 7147 0068 1800     		movs	r0, r3
 7148 006a BD46     		mov	sp, r7
 7149 006c 06B0     		add	sp, sp, #24
 7150              		@ sp needed
 7151 006e 80BD     		pop	{r7, pc}
 7152              		.cfi_endproc
 7153              	.LFE75:
 7155              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 7156              		.align	1
 7157              		.global	HAL_MultiProcessor_DisableMuteMode
 7158              		.syntax unified
 7159              		.code	16
 7160              		.thumb_func
 7162              	HAL_MultiProcessor_DisableMuteMode:
 7163              	.LFB76:
2845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 186


2849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7164              		.loc 1 2853 1
 7165              		.cfi_startproc
 7166              		@ args = 0, pretend = 0, frame = 24
 7167              		@ frame_needed = 1, uses_anonymous_args = 0
 7168 0000 80B5     		push	{r7, lr}
 7169              	.LCFI108:
 7170              		.cfi_def_cfa_offset 8
 7171              		.cfi_offset 7, -8
 7172              		.cfi_offset 14, -4
 7173 0002 86B0     		sub	sp, sp, #24
 7174              	.LCFI109:
 7175              		.cfi_def_cfa_offset 32
 7176 0004 00AF     		add	r7, sp, #0
 7177              	.LCFI110:
 7178              		.cfi_def_cfa_register 7
 7179 0006 7860     		str	r0, [r7, #4]
2854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 7180              		.loc 1 2854 3
 7181 0008 7B68     		ldr	r3, [r7, #4]
 7182 000a 7822     		movs	r2, #120
 7183 000c 9B5C     		ldrb	r3, [r3, r2]
 7184 000e 012B     		cmp	r3, #1
 7185 0010 01D1     		bne	.L276
 7186              		.loc 1 2854 3 is_stmt 0 discriminator 1
 7187 0012 0223     		movs	r3, #2
 7188 0014 27E0     		b	.L277
 7189              	.L276:
 7190              		.loc 1 2854 3 discriminator 2
 7191 0016 7B68     		ldr	r3, [r7, #4]
 7192 0018 7822     		movs	r2, #120
 7193 001a 0121     		movs	r1, #1
 7194 001c 9954     		strb	r1, [r3, r2]
2855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7195              		.loc 1 2856 17 is_stmt 1 discriminator 2
 7196 001e 7B68     		ldr	r3, [r7, #4]
 7197 0020 2422     		movs	r2, #36
 7198 0022 DA67     		str	r2, [r3, #124]
 7199              	.LBB897:
 7200              	.LBB898:
 7201              	.LBB899:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 7202              		.loc 2 386 3 discriminator 2
 7203              		.syntax divided
 7204              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7205 0024 EFF31083 		MRS r3, primask
 7206              	@ 0 "" 2
 7207              		.thumb
 7208              		.syntax unified
 7209 0028 BB60     		str	r3, [r7, #8]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7210              		.loc 2 387 9 discriminator 2
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 187


 7211 002a BB68     		ldr	r3, [r7, #8]
 7212              	.LBE899:
 7213              	.LBE898:
2857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 7214              		.loc 1 2859 3 discriminator 2
 7215 002c 7B61     		str	r3, [r7, #20]
 7216 002e 0123     		movs	r3, #1
 7217 0030 FB60     		str	r3, [r7, #12]
 7218              	.LBB900:
 7219              	.LBB901:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7220              		.loc 2 414 3 discriminator 2
 7221 0032 FB68     		ldr	r3, [r7, #12]
 7222              		.syntax divided
 7223              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7224 0034 83F31088 		MSR primask, r3
 7225              	@ 0 "" 2
 7226              		.loc 2 415 1 discriminator 2
 7227              		.thumb
 7228              		.syntax unified
 7229 0038 C046     		nop
 7230              	.LBE901:
 7231              	.LBE900:
 7232              		.loc 1 2859 3 discriminator 2
 7233 003a 7B68     		ldr	r3, [r7, #4]
 7234 003c 1B68     		ldr	r3, [r3]
 7235 003e 1A68     		ldr	r2, [r3]
 7236 0040 7B68     		ldr	r3, [r7, #4]
 7237 0042 1B68     		ldr	r3, [r3]
 7238 0044 0A49     		ldr	r1, .L279
 7239 0046 0A40     		ands	r2, r1
 7240 0048 1A60     		str	r2, [r3]
 7241 004a 7B69     		ldr	r3, [r7, #20]
 7242 004c 3B61     		str	r3, [r7, #16]
 7243              	.LBB902:
 7244              	.LBB903:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7245              		.loc 2 414 3 discriminator 2
 7246 004e 3B69     		ldr	r3, [r7, #16]
 7247              		.syntax divided
 7248              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7249 0050 83F31088 		MSR primask, r3
 7250              	@ 0 "" 2
 7251              		.loc 2 415 1 discriminator 2
 7252              		.thumb
 7253              		.syntax unified
 7254 0054 C046     		nop
 7255              	.LBE903:
 7256              	.LBE902:
 7257              	.LBE897:
2860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7258              		.loc 1 2861 17 discriminator 2
 7259 0056 7B68     		ldr	r3, [r7, #4]
 7260 0058 2022     		movs	r2, #32
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 188


 7261 005a DA67     		str	r2, [r3, #124]
2862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 7262              		.loc 1 2863 11 discriminator 2
 7263 005c 7B68     		ldr	r3, [r7, #4]
 7264 005e 1800     		movs	r0, r3
 7265 0060 FFF7FEFF 		bl	UART_CheckIdleState
 7266 0064 0300     		movs	r3, r0
 7267              	.L277:
2864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7268              		.loc 1 2864 1
 7269 0066 1800     		movs	r0, r3
 7270 0068 BD46     		mov	sp, r7
 7271 006a 06B0     		add	sp, sp, #24
 7272              		@ sp needed
 7273 006c 80BD     		pop	{r7, pc}
 7274              	.L280:
 7275 006e C046     		.align	2
 7276              	.L279:
 7277 0070 FFDFFFFF 		.word	-8193
 7278              		.cfi_endproc
 7279              	.LFE76:
 7281              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 7282              		.align	1
 7283              		.global	HAL_MultiProcessor_EnterMuteMode
 7284              		.syntax unified
 7285              		.code	16
 7286              		.thumb_func
 7288              	HAL_MultiProcessor_EnterMuteMode:
 7289              	.LFB77:
2865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7290              		.loc 1 2873 1
 7291              		.cfi_startproc
 7292              		@ args = 0, pretend = 0, frame = 8
 7293              		@ frame_needed = 1, uses_anonymous_args = 0
 7294 0000 80B5     		push	{r7, lr}
 7295              	.LCFI111:
 7296              		.cfi_def_cfa_offset 8
 7297              		.cfi_offset 7, -8
 7298              		.cfi_offset 14, -4
 7299 0002 82B0     		sub	sp, sp, #8
 7300              	.LCFI112:
 7301              		.cfi_def_cfa_offset 16
 7302 0004 00AF     		add	r7, sp, #0
 7303              	.LCFI113:
 7304              		.cfi_def_cfa_register 7
 7305 0006 7860     		str	r0, [r7, #4]
2874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 7306              		.loc 1 2874 3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 189


 7307 0008 7B68     		ldr	r3, [r7, #4]
 7308 000a 1B68     		ldr	r3, [r3]
 7309 000c 9A69     		ldr	r2, [r3, #24]
 7310 000e 7B68     		ldr	r3, [r7, #4]
 7311 0010 1B68     		ldr	r3, [r3]
 7312 0012 0421     		movs	r1, #4
 7313 0014 0A43     		orrs	r2, r1
 7314 0016 9A61     		str	r2, [r3, #24]
2875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7315              		.loc 1 2875 1
 7316 0018 C046     		nop
 7317 001a BD46     		mov	sp, r7
 7318 001c 02B0     		add	sp, sp, #8
 7319              		@ sp needed
 7320 001e 80BD     		pop	{r7, pc}
 7321              		.cfi_endproc
 7322              	.LFE77:
 7324              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 7325              		.align	1
 7326              		.global	HAL_HalfDuplex_EnableTransmitter
 7327              		.syntax unified
 7328              		.code	16
 7329              		.thumb_func
 7331              	HAL_HalfDuplex_EnableTransmitter:
 7332              	.LFB78:
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7333              		.loc 1 2883 1
 7334              		.cfi_startproc
 7335              		@ args = 0, pretend = 0, frame = 40
 7336              		@ frame_needed = 1, uses_anonymous_args = 0
 7337 0000 80B5     		push	{r7, lr}
 7338              	.LCFI114:
 7339              		.cfi_def_cfa_offset 8
 7340              		.cfi_offset 7, -8
 7341              		.cfi_offset 14, -4
 7342 0002 8AB0     		sub	sp, sp, #40
 7343              	.LCFI115:
 7344              		.cfi_def_cfa_offset 48
 7345 0004 00AF     		add	r7, sp, #0
 7346              	.LCFI116:
 7347              		.cfi_def_cfa_register 7
 7348 0006 7860     		str	r0, [r7, #4]
2884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 7349              		.loc 1 2884 3
 7350 0008 7B68     		ldr	r3, [r7, #4]
 7351 000a 7822     		movs	r2, #120
 7352 000c 9B5C     		ldrb	r3, [r3, r2]
 7353 000e 012B     		cmp	r3, #1
 7354 0010 01D1     		bne	.L283
 7355              		.loc 1 2884 3 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 190


 7356 0012 0223     		movs	r3, #2
 7357 0014 40E0     		b	.L284
 7358              	.L283:
 7359              		.loc 1 2884 3 discriminator 2
 7360 0016 7B68     		ldr	r3, [r7, #4]
 7361 0018 7822     		movs	r2, #120
 7362 001a 0121     		movs	r1, #1
 7363 001c 9954     		strb	r1, [r3, r2]
2885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7364              		.loc 1 2885 17 is_stmt 1 discriminator 2
 7365 001e 7B68     		ldr	r3, [r7, #4]
 7366 0020 2422     		movs	r2, #36
 7367 0022 DA67     		str	r2, [r3, #124]
 7368              	.LBB904:
 7369              	.LBB905:
 7370              	.LBB906:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 7371              		.loc 2 386 3 discriminator 2
 7372              		.syntax divided
 7373              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7374 0024 EFF31083 		MRS r3, primask
 7375              	@ 0 "" 2
 7376              		.thumb
 7377              		.syntax unified
 7378 0028 BB60     		str	r3, [r7, #8]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7379              		.loc 2 387 9 discriminator 2
 7380 002a BB68     		ldr	r3, [r7, #8]
 7381              	.LBE906:
 7382              	.LBE905:
2886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 7383              		.loc 1 2888 3 discriminator 2
 7384 002c 7B62     		str	r3, [r7, #36]
 7385 002e 0123     		movs	r3, #1
 7386 0030 FB60     		str	r3, [r7, #12]
 7387              	.LBB907:
 7388              	.LBB908:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7389              		.loc 2 414 3 discriminator 2
 7390 0032 FB68     		ldr	r3, [r7, #12]
 7391              		.syntax divided
 7392              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7393 0034 83F31088 		MSR primask, r3
 7394              	@ 0 "" 2
 7395              		.loc 2 415 1 discriminator 2
 7396              		.thumb
 7397              		.syntax unified
 7398 0038 C046     		nop
 7399              	.LBE908:
 7400              	.LBE907:
 7401              		.loc 1 2888 3 discriminator 2
 7402 003a 7B68     		ldr	r3, [r7, #4]
 7403 003c 1B68     		ldr	r3, [r3]
 7404 003e 1A68     		ldr	r2, [r3]
 7405 0040 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 191


 7406 0042 1B68     		ldr	r3, [r3]
 7407 0044 0C21     		movs	r1, #12
 7408 0046 8A43     		bics	r2, r1
 7409 0048 1A60     		str	r2, [r3]
 7410 004a 7B6A     		ldr	r3, [r7, #36]
 7411 004c 3B61     		str	r3, [r7, #16]
 7412              	.LBB909:
 7413              	.LBB910:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7414              		.loc 2 414 3 discriminator 2
 7415 004e 3B69     		ldr	r3, [r7, #16]
 7416              		.syntax divided
 7417              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7418 0050 83F31088 		MSR primask, r3
 7419              	@ 0 "" 2
 7420              		.loc 2 415 1 discriminator 2
 7421              		.thumb
 7422              		.syntax unified
 7423 0054 C046     		nop
 7424              	.LBE910:
 7425              	.LBE909:
 7426              	.LBE904:
 7427              	.LBB911:
 7428              	.LBB912:
 7429              	.LBB913:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 7430              		.loc 2 386 3 discriminator 2
 7431              		.syntax divided
 7432              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7433 0056 EFF31083 		MRS r3, primask
 7434              	@ 0 "" 2
 7435              		.thumb
 7436              		.syntax unified
 7437 005a 7B61     		str	r3, [r7, #20]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7438              		.loc 2 387 9 discriminator 2
 7439 005c 7B69     		ldr	r3, [r7, #20]
 7440              	.LBE913:
 7441              	.LBE912:
2889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 7442              		.loc 1 2891 3 discriminator 2
 7443 005e 3B62     		str	r3, [r7, #32]
 7444 0060 0123     		movs	r3, #1
 7445 0062 BB61     		str	r3, [r7, #24]
 7446              	.LBB914:
 7447              	.LBB915:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7448              		.loc 2 414 3 discriminator 2
 7449 0064 BB69     		ldr	r3, [r7, #24]
 7450              		.syntax divided
 7451              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7452 0066 83F31088 		MSR primask, r3
 7453              	@ 0 "" 2
 7454              		.loc 2 415 1 discriminator 2
 7455              		.thumb
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 192


 7456              		.syntax unified
 7457 006a C046     		nop
 7458              	.LBE915:
 7459              	.LBE914:
 7460              		.loc 1 2891 3 discriminator 2
 7461 006c 7B68     		ldr	r3, [r7, #4]
 7462 006e 1B68     		ldr	r3, [r3]
 7463 0070 1A68     		ldr	r2, [r3]
 7464 0072 7B68     		ldr	r3, [r7, #4]
 7465 0074 1B68     		ldr	r3, [r3]
 7466 0076 0821     		movs	r1, #8
 7467 0078 0A43     		orrs	r2, r1
 7468 007a 1A60     		str	r2, [r3]
 7469 007c 3B6A     		ldr	r3, [r7, #32]
 7470 007e FB61     		str	r3, [r7, #28]
 7471              	.LBB916:
 7472              	.LBB917:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7473              		.loc 2 414 3 discriminator 2
 7474 0080 FB69     		ldr	r3, [r7, #28]
 7475              		.syntax divided
 7476              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7477 0082 83F31088 		MSR primask, r3
 7478              	@ 0 "" 2
 7479              		.loc 2 415 1 discriminator 2
 7480              		.thumb
 7481              		.syntax unified
 7482 0086 C046     		nop
 7483              	.LBE917:
 7484              	.LBE916:
 7485              	.LBE911:
2892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7486              		.loc 1 2893 17 discriminator 2
 7487 0088 7B68     		ldr	r3, [r7, #4]
 7488 008a 2022     		movs	r2, #32
 7489 008c DA67     		str	r2, [r3, #124]
2894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 7490              		.loc 1 2895 3 discriminator 2
 7491 008e 7B68     		ldr	r3, [r7, #4]
 7492 0090 7822     		movs	r2, #120
 7493 0092 0021     		movs	r1, #0
 7494 0094 9954     		strb	r1, [r3, r2]
2896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 7495              		.loc 1 2897 10 discriminator 2
 7496 0096 0023     		movs	r3, #0
 7497              	.L284:
2898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7498              		.loc 1 2898 1
 7499 0098 1800     		movs	r0, r3
 7500 009a BD46     		mov	sp, r7
 7501 009c 0AB0     		add	sp, sp, #40
 7502              		@ sp needed
 7503 009e 80BD     		pop	{r7, pc}
 7504              		.cfi_endproc
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 193


 7505              	.LFE78:
 7507              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 7508              		.align	1
 7509              		.global	HAL_HalfDuplex_EnableReceiver
 7510              		.syntax unified
 7511              		.code	16
 7512              		.thumb_func
 7514              	HAL_HalfDuplex_EnableReceiver:
 7515              	.LFB79:
2899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status.
2904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7516              		.loc 1 2906 1
 7517              		.cfi_startproc
 7518              		@ args = 0, pretend = 0, frame = 40
 7519              		@ frame_needed = 1, uses_anonymous_args = 0
 7520 0000 80B5     		push	{r7, lr}
 7521              	.LCFI117:
 7522              		.cfi_def_cfa_offset 8
 7523              		.cfi_offset 7, -8
 7524              		.cfi_offset 14, -4
 7525 0002 8AB0     		sub	sp, sp, #40
 7526              	.LCFI118:
 7527              		.cfi_def_cfa_offset 48
 7528 0004 00AF     		add	r7, sp, #0
 7529              	.LCFI119:
 7530              		.cfi_def_cfa_register 7
 7531 0006 7860     		str	r0, [r7, #4]
2907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 7532              		.loc 1 2907 3
 7533 0008 7B68     		ldr	r3, [r7, #4]
 7534 000a 7822     		movs	r2, #120
 7535 000c 9B5C     		ldrb	r3, [r3, r2]
 7536 000e 012B     		cmp	r3, #1
 7537 0010 01D1     		bne	.L288
 7538              		.loc 1 2907 3 is_stmt 0 discriminator 1
 7539 0012 0223     		movs	r3, #2
 7540 0014 40E0     		b	.L289
 7541              	.L288:
 7542              		.loc 1 2907 3 discriminator 2
 7543 0016 7B68     		ldr	r3, [r7, #4]
 7544 0018 7822     		movs	r2, #120
 7545 001a 0121     		movs	r1, #1
 7546 001c 9954     		strb	r1, [r3, r2]
2908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7547              		.loc 1 2908 17 is_stmt 1 discriminator 2
 7548 001e 7B68     		ldr	r3, [r7, #4]
 7549 0020 2422     		movs	r2, #36
 7550 0022 DA67     		str	r2, [r3, #124]
 7551              	.LBB918:
 7552              	.LBB919:
 7553              	.LBB920:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 194


 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 7554              		.loc 2 386 3 discriminator 2
 7555              		.syntax divided
 7556              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7557 0024 EFF31083 		MRS r3, primask
 7558              	@ 0 "" 2
 7559              		.thumb
 7560              		.syntax unified
 7561 0028 BB60     		str	r3, [r7, #8]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7562              		.loc 2 387 9 discriminator 2
 7563 002a BB68     		ldr	r3, [r7, #8]
 7564              	.LBE920:
 7565              	.LBE919:
2909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 7566              		.loc 1 2911 3 discriminator 2
 7567 002c 7B62     		str	r3, [r7, #36]
 7568 002e 0123     		movs	r3, #1
 7569 0030 FB60     		str	r3, [r7, #12]
 7570              	.LBB921:
 7571              	.LBB922:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7572              		.loc 2 414 3 discriminator 2
 7573 0032 FB68     		ldr	r3, [r7, #12]
 7574              		.syntax divided
 7575              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7576 0034 83F31088 		MSR primask, r3
 7577              	@ 0 "" 2
 7578              		.loc 2 415 1 discriminator 2
 7579              		.thumb
 7580              		.syntax unified
 7581 0038 C046     		nop
 7582              	.LBE922:
 7583              	.LBE921:
 7584              		.loc 1 2911 3 discriminator 2
 7585 003a 7B68     		ldr	r3, [r7, #4]
 7586 003c 1B68     		ldr	r3, [r3]
 7587 003e 1A68     		ldr	r2, [r3]
 7588 0040 7B68     		ldr	r3, [r7, #4]
 7589 0042 1B68     		ldr	r3, [r3]
 7590 0044 0C21     		movs	r1, #12
 7591 0046 8A43     		bics	r2, r1
 7592 0048 1A60     		str	r2, [r3]
 7593 004a 7B6A     		ldr	r3, [r7, #36]
 7594 004c 3B61     		str	r3, [r7, #16]
 7595              	.LBB923:
 7596              	.LBB924:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7597              		.loc 2 414 3 discriminator 2
 7598 004e 3B69     		ldr	r3, [r7, #16]
 7599              		.syntax divided
 7600              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7601 0050 83F31088 		MSR primask, r3
 7602              	@ 0 "" 2
 7603              		.loc 2 415 1 discriminator 2
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 195


 7604              		.thumb
 7605              		.syntax unified
 7606 0054 C046     		nop
 7607              	.LBE924:
 7608              	.LBE923:
 7609              	.LBE918:
 7610              	.LBB925:
 7611              	.LBB926:
 7612              	.LBB927:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 7613              		.loc 2 386 3 discriminator 2
 7614              		.syntax divided
 7615              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7616 0056 EFF31083 		MRS r3, primask
 7617              	@ 0 "" 2
 7618              		.thumb
 7619              		.syntax unified
 7620 005a 7B61     		str	r3, [r7, #20]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7621              		.loc 2 387 9 discriminator 2
 7622 005c 7B69     		ldr	r3, [r7, #20]
 7623              	.LBE927:
 7624              	.LBE926:
2912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 7625              		.loc 1 2914 3 discriminator 2
 7626 005e 3B62     		str	r3, [r7, #32]
 7627 0060 0123     		movs	r3, #1
 7628 0062 BB61     		str	r3, [r7, #24]
 7629              	.LBB928:
 7630              	.LBB929:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7631              		.loc 2 414 3 discriminator 2
 7632 0064 BB69     		ldr	r3, [r7, #24]
 7633              		.syntax divided
 7634              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7635 0066 83F31088 		MSR primask, r3
 7636              	@ 0 "" 2
 7637              		.loc 2 415 1 discriminator 2
 7638              		.thumb
 7639              		.syntax unified
 7640 006a C046     		nop
 7641              	.LBE929:
 7642              	.LBE928:
 7643              		.loc 1 2914 3 discriminator 2
 7644 006c 7B68     		ldr	r3, [r7, #4]
 7645 006e 1B68     		ldr	r3, [r3]
 7646 0070 1A68     		ldr	r2, [r3]
 7647 0072 7B68     		ldr	r3, [r7, #4]
 7648 0074 1B68     		ldr	r3, [r3]
 7649 0076 0421     		movs	r1, #4
 7650 0078 0A43     		orrs	r2, r1
 7651 007a 1A60     		str	r2, [r3]
 7652 007c 3B6A     		ldr	r3, [r7, #32]
 7653 007e FB61     		str	r3, [r7, #28]
 7654              	.LBB930:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 196


 7655              	.LBB931:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7656              		.loc 2 414 3 discriminator 2
 7657 0080 FB69     		ldr	r3, [r7, #28]
 7658              		.syntax divided
 7659              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7660 0082 83F31088 		MSR primask, r3
 7661              	@ 0 "" 2
 7662              		.loc 2 415 1 discriminator 2
 7663              		.thumb
 7664              		.syntax unified
 7665 0086 C046     		nop
 7666              	.LBE931:
 7667              	.LBE930:
 7668              	.LBE925:
2915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7669              		.loc 1 2916 17 discriminator 2
 7670 0088 7B68     		ldr	r3, [r7, #4]
 7671 008a 2022     		movs	r2, #32
 7672 008c DA67     		str	r2, [r3, #124]
2917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 7673              		.loc 1 2918 3 discriminator 2
 7674 008e 7B68     		ldr	r3, [r7, #4]
 7675 0090 7822     		movs	r2, #120
 7676 0092 0021     		movs	r1, #0
 7677 0094 9954     		strb	r1, [r3, r2]
2919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 7678              		.loc 1 2920 10 discriminator 2
 7679 0096 0023     		movs	r3, #0
 7680              	.L289:
2921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7681              		.loc 1 2921 1
 7682 0098 1800     		movs	r0, r3
 7683 009a BD46     		mov	sp, r7
 7684 009c 0AB0     		add	sp, sp, #40
 7685              		@ sp needed
 7686 009e 80BD     		pop	{r7, pc}
 7687              		.cfi_endproc
 7688              	.LFE79:
 7690              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 7691              		.align	1
 7692              		.global	HAL_LIN_SendBreak
 7693              		.syntax unified
 7694              		.code	16
 7695              		.thumb_func
 7697              	HAL_LIN_SendBreak:
 7698              	.LFB80:
2922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if   defined(USART_CR2_LINEN)
2925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Transmit break characters.
2927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 197


2929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7699              		.loc 1 2931 1
 7700              		.cfi_startproc
 7701              		@ args = 0, pretend = 0, frame = 8
 7702              		@ frame_needed = 1, uses_anonymous_args = 0
 7703 0000 80B5     		push	{r7, lr}
 7704              	.LCFI120:
 7705              		.cfi_def_cfa_offset 8
 7706              		.cfi_offset 7, -8
 7707              		.cfi_offset 14, -4
 7708 0002 82B0     		sub	sp, sp, #8
 7709              	.LCFI121:
 7710              		.cfi_def_cfa_offset 16
 7711 0004 00AF     		add	r7, sp, #0
 7712              	.LCFI122:
 7713              		.cfi_def_cfa_register 7
 7714 0006 7860     		str	r0, [r7, #4]
2932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
2933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
 7715              		.loc 1 2935 3
 7716 0008 7B68     		ldr	r3, [r7, #4]
 7717 000a 7822     		movs	r2, #120
 7718 000c 9B5C     		ldrb	r3, [r3, r2]
 7719 000e 012B     		cmp	r3, #1
 7720 0010 01D1     		bne	.L293
 7721              		.loc 1 2935 3 is_stmt 0 discriminator 1
 7722 0012 0223     		movs	r3, #2
 7723 0014 16E0     		b	.L294
 7724              	.L293:
 7725              		.loc 1 2935 3 discriminator 2
 7726 0016 7B68     		ldr	r3, [r7, #4]
 7727 0018 7822     		movs	r2, #120
 7728 001a 0121     		movs	r1, #1
 7729 001c 9954     		strb	r1, [r3, r2]
2936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7730              		.loc 1 2937 17 is_stmt 1 discriminator 2
 7731 001e 7B68     		ldr	r3, [r7, #4]
 7732 0020 2422     		movs	r2, #36
 7733 0022 DA67     		str	r2, [r3, #124]
2938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Send break characters */
2940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
 7734              		.loc 1 2940 3 discriminator 2
 7735 0024 7B68     		ldr	r3, [r7, #4]
 7736 0026 1B68     		ldr	r3, [r3]
 7737 0028 9A69     		ldr	r2, [r3, #24]
 7738 002a 7B68     		ldr	r3, [r7, #4]
 7739 002c 1B68     		ldr	r3, [r3]
 7740 002e 0221     		movs	r1, #2
 7741 0030 0A43     		orrs	r2, r1
 7742 0032 9A61     		str	r2, [r3, #24]
2941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 198


2942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7743              		.loc 1 2942 17 discriminator 2
 7744 0034 7B68     		ldr	r3, [r7, #4]
 7745 0036 2022     		movs	r2, #32
 7746 0038 DA67     		str	r2, [r3, #124]
2943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 7747              		.loc 1 2944 3 discriminator 2
 7748 003a 7B68     		ldr	r3, [r7, #4]
 7749 003c 7822     		movs	r2, #120
 7750 003e 0021     		movs	r1, #0
 7751 0040 9954     		strb	r1, [r3, r2]
2945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 7752              		.loc 1 2946 10 discriminator 2
 7753 0042 0023     		movs	r3, #0
 7754              	.L294:
2947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7755              		.loc 1 2947 1
 7756 0044 1800     		movs	r0, r3
 7757 0046 BD46     		mov	sp, r7
 7758 0048 02B0     		add	sp, sp, #8
 7759              		@ sp needed
 7760 004a 80BD     		pop	{r7, pc}
 7761              		.cfi_endproc
 7762              	.LFE80:
 7764              		.section	.text.HAL_UART_GetState,"ax",%progbits
 7765              		.align	1
 7766              		.global	HAL_UART_GetState
 7767              		.syntax unified
 7768              		.code	16
 7769              		.thumb_func
 7771              	HAL_UART_GetState:
 7772              	.LFB81:
2948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR2_LINEN */
2949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
2957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
2958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
2962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides functions allowing to :
2963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle state.
2964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle error code
2965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
2967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 199


2971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Return the UART handle state.
2972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL state
2975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(const UART_HandleTypeDef *huart)
2977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7773              		.loc 1 2977 1
 7774              		.cfi_startproc
 7775              		@ args = 0, pretend = 0, frame = 16
 7776              		@ frame_needed = 1, uses_anonymous_args = 0
 7777 0000 80B5     		push	{r7, lr}
 7778              	.LCFI123:
 7779              		.cfi_def_cfa_offset 8
 7780              		.cfi_offset 7, -8
 7781              		.cfi_offset 14, -4
 7782 0002 84B0     		sub	sp, sp, #16
 7783              	.LCFI124:
 7784              		.cfi_def_cfa_offset 24
 7785 0004 00AF     		add	r7, sp, #0
 7786              	.LCFI125:
 7787              		.cfi_def_cfa_register 7
 7788 0006 7860     		str	r0, [r7, #4]
2978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1;
2979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp2;
2980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp1 = huart->gState;
 7789              		.loc 1 2980 9
 7790 0008 7B68     		ldr	r3, [r7, #4]
 7791 000a DB6F     		ldr	r3, [r3, #124]
 7792 000c FB60     		str	r3, [r7, #12]
2981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
 7793              		.loc 1 2981 9
 7794 000e 7B68     		ldr	r3, [r7, #4]
 7795 0010 8022     		movs	r2, #128
 7796 0012 9B58     		ldr	r3, [r3, r2]
 7797 0014 BB60     		str	r3, [r7, #8]
2982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 7798              		.loc 1 2983 10
 7799 0016 FA68     		ldr	r2, [r7, #12]
 7800 0018 BB68     		ldr	r3, [r7, #8]
 7801 001a 1343     		orrs	r3, r2
2984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7802              		.loc 1 2984 1
 7803 001c 1800     		movs	r0, r3
 7804 001e BD46     		mov	sp, r7
 7805 0020 04B0     		add	sp, sp, #16
 7806              		@ sp needed
 7807 0022 80BD     		pop	{r7, pc}
 7808              		.cfi_endproc
 7809              	.LFE81:
 7811              		.section	.text.HAL_UART_GetError,"ax",%progbits
 7812              		.align	1
 7813              		.global	HAL_UART_GetError
 7814              		.syntax unified
 7815              		.code	16
 7816              		.thumb_func
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 200


 7818              	HAL_UART_GetError:
 7819              	.LFB82:
2985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval UART Error Code
2991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** uint32_t HAL_UART_GetError(const UART_HandleTypeDef *huart)
2993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7820              		.loc 1 2993 1
 7821              		.cfi_startproc
 7822              		@ args = 0, pretend = 0, frame = 8
 7823              		@ frame_needed = 1, uses_anonymous_args = 0
 7824 0000 80B5     		push	{r7, lr}
 7825              	.LCFI126:
 7826              		.cfi_def_cfa_offset 8
 7827              		.cfi_offset 7, -8
 7828              		.cfi_offset 14, -4
 7829 0002 82B0     		sub	sp, sp, #8
 7830              	.LCFI127:
 7831              		.cfi_def_cfa_offset 16
 7832 0004 00AF     		add	r7, sp, #0
 7833              	.LCFI128:
 7834              		.cfi_def_cfa_register 7
 7835 0006 7860     		str	r0, [r7, #4]
2994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
 7836              		.loc 1 2994 15
 7837 0008 7B68     		ldr	r3, [r7, #4]
 7838 000a 8422     		movs	r2, #132
 7839 000c 9B58     		ldr	r3, [r3, r2]
2995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 7840              		.loc 1 2995 1
 7841 000e 1800     		movs	r0, r3
 7842 0010 BD46     		mov	sp, r7
 7843 0012 02B0     		add	sp, sp, #8
 7844              		@ sp needed
 7845 0014 80BD     		pop	{r7, pc}
 7846              		.cfi_endproc
 7847              	.LFE82:
 7849              		.global	__aeabi_uidiv
 7850              		.section	.text.UART_SetConfig,"ax",%progbits
 7851              		.align	1
 7852              		.global	UART_SetConfig
 7853              		.syntax unified
 7854              		.code	16
 7855              		.thumb_func
 7857              	UART_SetConfig:
 7858              	.LFB83:
2996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
3002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 201


3003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
3005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
3006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
3010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
3011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval none
3012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
3015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
3016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Init the UART Callback settings */
3017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
3018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
3019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
3020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
3021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
3022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
3023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
3024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
3025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR1_UESM)
3026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined(USART_CR3_WUFIE)
3027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
3028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR3_WUFIE */
3029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USART_CR1_UESM */
3030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
3031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
3033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral.
3037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
3039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
3041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 7859              		.loc 1 3041 1
 7860              		.cfi_startproc
 7861              		@ args = 0, pretend = 0, frame = 32
 7862              		@ frame_needed = 1, uses_anonymous_args = 0
 7863 0000 80B5     		push	{r7, lr}
 7864              	.LCFI129:
 7865              		.cfi_def_cfa_offset 8
 7866              		.cfi_offset 7, -8
 7867              		.cfi_offset 14, -4
 7868 0002 88B0     		sub	sp, sp, #32
 7869              	.LCFI130:
 7870              		.cfi_def_cfa_offset 40
 7871 0004 00AF     		add	r7, sp, #0
 7872              	.LCFI131:
 7873              		.cfi_def_cfa_register 7
 7874 0006 7860     		str	r0, [r7, #4]
3042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg;
3043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t brrtemp;
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 202


3044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
3045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t usartdiv;
3046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 7875              		.loc 1 3046 21
 7876 0008 1E23     		movs	r3, #30
 7877 000a FB18     		adds	r3, r7, r3
 7878 000c 0022     		movs	r2, #0
 7879 000e 1A70     		strb	r2, [r3]
3047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t pclk;
3048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
3050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
3052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
3054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
3058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
3059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
3062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
3063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
3064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
3065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
3066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
3067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 7880              		.loc 1 3067 33
 7881 0010 7B68     		ldr	r3, [r7, #4]
 7882 0012 9A68     		ldr	r2, [r3, #8]
 7883              		.loc 1 3067 58
 7884 0014 7B68     		ldr	r3, [r7, #4]
 7885 0016 1B69     		ldr	r3, [r3, #16]
 7886              		.loc 1 3067 45
 7887 0018 1A43     		orrs	r2, r3
 7888              		.loc 1 3067 79
 7889 001a 7B68     		ldr	r3, [r7, #4]
 7890 001c 5B69     		ldr	r3, [r3, #20]
 7891              		.loc 1 3067 66
 7892 001e 1A43     		orrs	r2, r3
 7893              		.loc 1 3067 98
 7894 0020 7B68     		ldr	r3, [r7, #4]
 7895 0022 DB69     		ldr	r3, [r3, #28]
 7896              		.loc 1 3067 10
 7897 0024 1343     		orrs	r3, r2
 7898 0026 7B61     		str	r3, [r7, #20]
3068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 7899              		.loc 1 3068 3
 7900 0028 7B68     		ldr	r3, [r7, #4]
 7901 002a 1B68     		ldr	r3, [r3]
 7902 002c 1B68     		ldr	r3, [r3]
 7903 002e 834A     		ldr	r2, .L325
 7904 0030 1340     		ands	r3, r2
 7905 0032 1900     		movs	r1, r3
 7906 0034 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 203


 7907 0036 1B68     		ldr	r3, [r3]
 7908 0038 7A69     		ldr	r2, [r7, #20]
 7909 003a 0A43     		orrs	r2, r1
 7910 003c 1A60     		str	r2, [r3]
3069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
3072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * to huart->Init.StopBits value */
3073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 7911              		.loc 1 3073 3
 7912 003e 7B68     		ldr	r3, [r7, #4]
 7913 0040 1B68     		ldr	r3, [r3]
 7914 0042 5B68     		ldr	r3, [r3, #4]
 7915 0044 7E4A     		ldr	r2, .L325+4
 7916 0046 1340     		ands	r3, r2
 7917 0048 1900     		movs	r1, r3
 7918 004a 7B68     		ldr	r3, [r7, #4]
 7919 004c DA68     		ldr	r2, [r3, #12]
 7920 004e 7B68     		ldr	r3, [r7, #4]
 7921 0050 1B68     		ldr	r3, [r3]
 7922 0052 0A43     		orrs	r2, r1
 7923 0054 5A60     		str	r2, [r3, #4]
3074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure
3077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
3078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
3079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
3080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
3081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 7924              		.loc 1 3081 10
 7925 0056 7B68     		ldr	r3, [r7, #4]
 7926 0058 9B69     		ldr	r3, [r3, #24]
 7927 005a 7B61     		str	r3, [r7, #20]
3082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg |= huart->Init.OneBitSampling;
 7928              		.loc 1 3083 24
 7929 005c 7B68     		ldr	r3, [r7, #4]
 7930 005e 1B6A     		ldr	r3, [r3, #32]
 7931              		.loc 1 3083 10
 7932 0060 7A69     		ldr	r2, [r7, #20]
 7933 0062 1343     		orrs	r3, r2
 7934 0064 7B61     		str	r3, [r7, #20]
3084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 7935              		.loc 1 3084 3
 7936 0066 7B68     		ldr	r3, [r7, #4]
 7937 0068 1B68     		ldr	r3, [r3]
 7938 006a 9B68     		ldr	r3, [r3, #8]
 7939 006c 754A     		ldr	r2, .L325+8
 7940 006e 1340     		ands	r3, r2
 7941 0070 1900     		movs	r1, r3
 7942 0072 7B68     		ldr	r3, [r7, #4]
 7943 0074 1B68     		ldr	r3, [r3]
 7944 0076 7A69     		ldr	r2, [r7, #20]
 7945 0078 0A43     		orrs	r2, r1
 7946 007a 9A60     		str	r2, [r3, #8]
3085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 204


3086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
3088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 7947              		.loc 1 3088 3
 7948 007c 724B     		ldr	r3, .L325+12
 7949 007e 1B6B     		ldr	r3, [r3, #48]
 7950 0080 0322     		movs	r2, #3
 7951 0082 1340     		ands	r3, r2
 7952 0084 032B     		cmp	r3, #3
 7953 0086 0DD0     		beq	.L300
 7954 0088 1BD8     		bhi	.L301
 7955 008a 022B     		cmp	r3, #2
 7956 008c 14D0     		beq	.L302
 7957 008e 18D8     		bhi	.L301
 7958 0090 002B     		cmp	r3, #0
 7959 0092 02D0     		beq	.L303
 7960 0094 012B     		cmp	r3, #1
 7961 0096 0AD0     		beq	.L304
 7962 0098 13E0     		b	.L301
 7963              	.L303:
 7964              		.loc 1 3088 3 is_stmt 0 discriminator 2
 7965 009a 1F23     		movs	r3, #31
 7966 009c FB18     		adds	r3, r7, r3
 7967 009e 0022     		movs	r2, #0
 7968 00a0 1A70     		strb	r2, [r3]
 7969 00a2 12E0     		b	.L324
 7970              	.L300:
 7971              		.loc 1 3088 3 discriminator 5
 7972 00a4 1F23     		movs	r3, #31
 7973 00a6 FB18     		adds	r3, r7, r3
 7974 00a8 0222     		movs	r2, #2
 7975 00aa 1A70     		strb	r2, [r3]
 7976 00ac 0DE0     		b	.L324
 7977              	.L304:
 7978              		.loc 1 3088 3 discriminator 3
 7979 00ae 1F23     		movs	r3, #31
 7980 00b0 FB18     		adds	r3, r7, r3
 7981 00b2 0422     		movs	r2, #4
 7982 00b4 1A70     		strb	r2, [r3]
 7983 00b6 08E0     		b	.L324
 7984              	.L302:
 7985              		.loc 1 3088 3 discriminator 4
 7986 00b8 1F23     		movs	r3, #31
 7987 00ba FB18     		adds	r3, r7, r3
 7988 00bc 0822     		movs	r2, #8
 7989 00be 1A70     		strb	r2, [r3]
 7990 00c0 03E0     		b	.L324
 7991              	.L301:
 7992              		.loc 1 3088 3 discriminator 1
 7993 00c2 1F23     		movs	r3, #31
 7994 00c4 FB18     		adds	r3, r7, r3
 7995 00c6 1022     		movs	r2, #16
 7996 00c8 1A70     		strb	r2, [r3]
 7997              	.L324:
 7998              		.loc 1 3088 3
 7999 00ca C046     		nop
3089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 205


3090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8000              		.loc 1 3090 18 is_stmt 1
 8001 00cc 7B68     		ldr	r3, [r7, #4]
 8002 00ce DA69     		ldr	r2, [r3, #28]
 8003              		.loc 1 3090 6
 8004 00d0 8023     		movs	r3, #128
 8005 00d2 1B02     		lsls	r3, r3, #8
 8006 00d4 9A42     		cmp	r2, r3
 8007 00d6 5CD1     		bne	.L306
3091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
 8008              		.loc 1 3092 5
 8009 00d8 1F23     		movs	r3, #31
 8010 00da FB18     		adds	r3, r7, r3
 8011 00dc 1B78     		ldrb	r3, [r3]
 8012 00de 082B     		cmp	r3, #8
 8013 00e0 15D0     		beq	.L307
 8014 00e2 18DC     		bgt	.L308
 8015 00e4 042B     		cmp	r3, #4
 8016 00e6 0DD0     		beq	.L309
 8017 00e8 15DC     		bgt	.L308
 8018 00ea 002B     		cmp	r3, #0
 8019 00ec 02D0     		beq	.L310
 8020 00ee 022B     		cmp	r3, #2
 8021 00f0 05D0     		beq	.L311
 8022 00f2 10E0     		b	.L308
 8023              	.L310:
3093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 8024              		.loc 1 3095 16
 8025 00f4 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 8026 00f8 0300     		movs	r3, r0
 8027 00fa BB61     		str	r3, [r7, #24]
3096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 8028              		.loc 1 3096 9
 8029 00fc 12E0     		b	.L312
 8030              	.L311:
3097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
 8031              		.loc 1 3098 14
 8032 00fe 534B     		ldr	r3, .L325+16
 8033 0100 BB61     		str	r3, [r7, #24]
3099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 8034              		.loc 1 3099 9
 8035 0102 0FE0     		b	.L312
 8036              	.L309:
3100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
 8037              		.loc 1 3101 16
 8038 0104 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 8039 0108 0300     		movs	r3, r0
 8040 010a BB61     		str	r3, [r7, #24]
3102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 8041              		.loc 1 3102 9
 8042 010c 0AE0     		b	.L312
 8043              	.L307:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 206


3103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
 8044              		.loc 1 3104 14
 8045 010e 8023     		movs	r3, #128
 8046 0110 1B02     		lsls	r3, r3, #8
 8047 0112 BB61     		str	r3, [r7, #24]
3105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 8048              		.loc 1 3105 9
 8049 0114 06E0     		b	.L312
 8050              	.L308:
3106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
3107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = 0U;
 8051              		.loc 1 3107 14
 8052 0116 0023     		movs	r3, #0
 8053 0118 BB61     		str	r3, [r7, #24]
3108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
 8054              		.loc 1 3108 13
 8055 011a 1E23     		movs	r3, #30
 8056 011c FB18     		adds	r3, r7, r3
 8057 011e 0122     		movs	r2, #1
 8058 0120 1A70     		strb	r2, [r3]
3109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 8059              		.loc 1 3109 9
 8060 0122 C046     		nop
 8061              	.L312:
3110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (pclk != 0U)
 8062              		.loc 1 3113 8
 8063 0124 BB69     		ldr	r3, [r7, #24]
 8064 0126 002B     		cmp	r3, #0
 8065 0128 00D1     		bne	.LCB6123
 8066 012a 7AE0     		b	.L315	@long jump
 8067              	.LCB6123:
3114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8068              		.loc 1 3115 29
 8069 012c BB69     		ldr	r3, [r7, #24]
 8070 012e 5A00     		lsls	r2, r3, #1
 8071 0130 7B68     		ldr	r3, [r7, #4]
 8072 0132 5B68     		ldr	r3, [r3, #4]
 8073 0134 5B08     		lsrs	r3, r3, #1
 8074 0136 D218     		adds	r2, r2, r3
 8075 0138 7B68     		ldr	r3, [r7, #4]
 8076 013a 5B68     		ldr	r3, [r3, #4]
 8077              		.loc 1 3115 16
 8078 013c 1900     		movs	r1, r3
 8079 013e 1000     		movs	r0, r2
 8080 0140 FFF7FEFF 		bl	__aeabi_uidiv
 8081 0144 0300     		movs	r3, r0
 8082 0146 3B61     		str	r3, [r7, #16]
3116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8083              		.loc 1 3116 10
 8084 0148 3B69     		ldr	r3, [r7, #16]
 8085 014a 0F2B     		cmp	r3, #15
 8086 014c 1CD9     		bls	.L314
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 207


 8087              		.loc 1 3116 38 discriminator 1
 8088 014e 3A69     		ldr	r2, [r7, #16]
 8089 0150 8023     		movs	r3, #128
 8090 0152 5B02     		lsls	r3, r3, #9
 8091 0154 9A42     		cmp	r2, r3
 8092 0156 17D2     		bcs	.L314
3117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
3118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8093              		.loc 1 3118 19
 8094 0158 3B69     		ldr	r3, [r7, #16]
 8095 015a 9AB2     		uxth	r2, r3
 8096              		.loc 1 3118 17
 8097 015c 0E20     		movs	r0, #14
 8098 015e 3B18     		adds	r3, r7, r0
 8099 0160 0F21     		movs	r1, #15
 8100 0162 8A43     		bics	r2, r1
 8101 0164 1A80     		strh	r2, [r3]
3119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8102              		.loc 1 3119 62
 8103 0166 3B69     		ldr	r3, [r7, #16]
 8104 0168 5B08     		lsrs	r3, r3, #1
 8105              		.loc 1 3119 20
 8106 016a 9BB2     		uxth	r3, r3
 8107 016c 0722     		movs	r2, #7
 8108 016e 1340     		ands	r3, r2
 8109 0170 99B2     		uxth	r1, r3
 8110              		.loc 1 3119 17
 8111 0172 3B18     		adds	r3, r7, r0
 8112 0174 3A18     		adds	r2, r7, r0
 8113 0176 1288     		ldrh	r2, [r2]
 8114 0178 0A43     		orrs	r2, r1
 8115 017a 1A80     		strh	r2, [r3]
3120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
 8116              		.loc 1 3120 14
 8117 017c 7B68     		ldr	r3, [r7, #4]
 8118 017e 1B68     		ldr	r3, [r3]
 8119              		.loc 1 3120 30
 8120 0180 3A18     		adds	r2, r7, r0
 8121 0182 1288     		ldrh	r2, [r2]
 8122 0184 DA60     		str	r2, [r3, #12]
 8123 0186 4CE0     		b	.L315
 8124              	.L314:
3121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
3122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
3123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
3124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
 8125              		.loc 1 3124 13
 8126 0188 1E23     		movs	r3, #30
 8127 018a FB18     		adds	r3, r7, r3
 8128 018c 0122     		movs	r2, #1
 8129 018e 1A70     		strb	r2, [r3]
 8130 0190 47E0     		b	.L315
 8131              	.L306:
3125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
3126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 208


3129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
 8132              		.loc 1 3130 5
 8133 0192 1F23     		movs	r3, #31
 8134 0194 FB18     		adds	r3, r7, r3
 8135 0196 1B78     		ldrb	r3, [r3]
 8136 0198 082B     		cmp	r3, #8
 8137 019a 15D0     		beq	.L316
 8138 019c 18DC     		bgt	.L317
 8139 019e 042B     		cmp	r3, #4
 8140 01a0 0DD0     		beq	.L318
 8141 01a2 15DC     		bgt	.L317
 8142 01a4 002B     		cmp	r3, #0
 8143 01a6 02D0     		beq	.L319
 8144 01a8 022B     		cmp	r3, #2
 8145 01aa 05D0     		beq	.L320
 8146 01ac 10E0     		b	.L317
 8147              	.L319:
3131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 8148              		.loc 1 3133 16
 8149 01ae FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 8150 01b2 0300     		movs	r3, r0
 8151 01b4 BB61     		str	r3, [r7, #24]
3134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 8152              		.loc 1 3134 9
 8153 01b6 12E0     		b	.L321
 8154              	.L320:
3135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
 8155              		.loc 1 3136 14
 8156 01b8 244B     		ldr	r3, .L325+16
 8157 01ba BB61     		str	r3, [r7, #24]
3137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 8158              		.loc 1 3137 9
 8159 01bc 0FE0     		b	.L321
 8160              	.L318:
3138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
 8161              		.loc 1 3139 16
 8162 01be FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 8163 01c2 0300     		movs	r3, r0
 8164 01c4 BB61     		str	r3, [r7, #24]
3140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 8165              		.loc 1 3140 9
 8166 01c6 0AE0     		b	.L321
 8167              	.L316:
3141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
 8168              		.loc 1 3142 14
 8169 01c8 8023     		movs	r3, #128
 8170 01ca 1B02     		lsls	r3, r3, #8
 8171 01cc BB61     		str	r3, [r7, #24]
3143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 8172              		.loc 1 3143 9
 8173 01ce 06E0     		b	.L321
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 209


 8174              	.L317:
3144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
3145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pclk = 0U;
 8175              		.loc 1 3145 14
 8176 01d0 0023     		movs	r3, #0
 8177 01d2 BB61     		str	r3, [r7, #24]
3146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
 8178              		.loc 1 3146 13
 8179 01d4 1E23     		movs	r3, #30
 8180 01d6 FB18     		adds	r3, r7, r3
 8181 01d8 0122     		movs	r2, #1
 8182 01da 1A70     		strb	r2, [r3]
3147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 8183              		.loc 1 3147 9
 8184 01dc C046     		nop
 8185              	.L321:
3148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (pclk != 0U)
 8186              		.loc 1 3150 8
 8187 01de BB69     		ldr	r3, [r7, #24]
 8188 01e0 002B     		cmp	r3, #0
 8189 01e2 1ED0     		beq	.L315
3151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* USARTDIV must be greater than or equal to 0d16 */
3153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8190              		.loc 1 3153 29
 8191 01e4 7B68     		ldr	r3, [r7, #4]
 8192 01e6 5B68     		ldr	r3, [r3, #4]
 8193 01e8 5A08     		lsrs	r2, r3, #1
 8194 01ea BB69     		ldr	r3, [r7, #24]
 8195 01ec D218     		adds	r2, r2, r3
 8196 01ee 7B68     		ldr	r3, [r7, #4]
 8197 01f0 5B68     		ldr	r3, [r3, #4]
 8198              		.loc 1 3153 16
 8199 01f2 1900     		movs	r1, r3
 8200 01f4 1000     		movs	r0, r2
 8201 01f6 FFF7FEFF 		bl	__aeabi_uidiv
 8202 01fa 0300     		movs	r3, r0
 8203 01fc 3B61     		str	r3, [r7, #16]
3154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8204              		.loc 1 3154 10
 8205 01fe 3B69     		ldr	r3, [r7, #16]
 8206 0200 0F2B     		cmp	r3, #15
 8207 0202 0AD9     		bls	.L322
 8208              		.loc 1 3154 38 discriminator 1
 8209 0204 3A69     		ldr	r2, [r7, #16]
 8210 0206 8023     		movs	r3, #128
 8211 0208 5B02     		lsls	r3, r3, #9
 8212 020a 9A42     		cmp	r2, r3
 8213 020c 05D2     		bcs	.L322
3155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
3156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)usartdiv;
 8214              		.loc 1 3156 32
 8215 020e 3B69     		ldr	r3, [r7, #16]
 8216 0210 9AB2     		uxth	r2, r3
 8217              		.loc 1 3156 14
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 210


 8218 0212 7B68     		ldr	r3, [r7, #4]
 8219 0214 1B68     		ldr	r3, [r3]
 8220              		.loc 1 3156 30
 8221 0216 DA60     		str	r2, [r3, #12]
 8222 0218 03E0     		b	.L315
 8223              	.L322:
3157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
3158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
3159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
3160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
 8224              		.loc 1 3160 13
 8225 021a 1E23     		movs	r3, #30
 8226 021c FB18     		adds	r3, r7, r3
 8227 021e 0122     		movs	r2, #1
 8228 0220 1A70     		strb	r2, [r3]
 8229              	.L315:
3161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
3162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear ISR function pointers */
3167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxISR = NULL;
 8230              		.loc 1 3167 16
 8231 0222 7B68     		ldr	r3, [r7, #4]
 8232 0224 0022     		movs	r2, #0
 8233 0226 9A66     		str	r2, [r3, #104]
3168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxISR = NULL;
 8234              		.loc 1 3168 16
 8235 0228 7B68     		ldr	r3, [r7, #4]
 8236 022a 0022     		movs	r2, #0
 8237 022c DA66     		str	r2, [r3, #108]
3169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return ret;
 8238              		.loc 1 3170 10
 8239 022e 1E23     		movs	r3, #30
 8240 0230 FB18     		adds	r3, r7, r3
 8241 0232 1B78     		ldrb	r3, [r3]
3171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 8242              		.loc 1 3171 1
 8243 0234 1800     		movs	r0, r3
 8244 0236 BD46     		mov	sp, r7
 8245 0238 08B0     		add	sp, sp, #32
 8246              		@ sp needed
 8247 023a 80BD     		pop	{r7, pc}
 8248              	.L326:
 8249              		.align	2
 8250              	.L325:
 8251 023c F369FFFF 		.word	-38413
 8252 0240 FFCFFFFF 		.word	-12289
 8253 0244 FFF4FFFF 		.word	-2817
 8254 0248 00100240 		.word	1073876992
 8255 024c 00127A00 		.word	8000000
 8256              		.cfi_endproc
 8257              	.LFE83:
 8259              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 8260              		.align	1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 211


 8261              		.global	UART_AdvFeatureConfig
 8262              		.syntax unified
 8263              		.code	16
 8264              		.thumb_func
 8266              	UART_AdvFeatureConfig:
 8267              	.LFB84:
3172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 8268              		.loc 1 3179 1
 8269              		.cfi_startproc
 8270              		@ args = 0, pretend = 0, frame = 8
 8271              		@ frame_needed = 1, uses_anonymous_args = 0
 8272 0000 80B5     		push	{r7, lr}
 8273              	.LCFI132:
 8274              		.cfi_def_cfa_offset 8
 8275              		.cfi_offset 7, -8
 8276              		.cfi_offset 14, -4
 8277 0002 82B0     		sub	sp, sp, #8
 8278              	.LCFI133:
 8279              		.cfi_def_cfa_offset 16
 8280 0004 00AF     		add	r7, sp, #0
 8281              	.LCFI134:
 8282              		.cfi_def_cfa_register 7
 8283 0006 7860     		str	r0, [r7, #4]
3180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8284              		.loc 1 3184 7
 8285 0008 7B68     		ldr	r3, [r7, #4]
 8286 000a 5B6A     		ldr	r3, [r3, #36]
 8287 000c 0122     		movs	r2, #1
 8288 000e 1340     		ands	r3, r2
 8289              		.loc 1 3184 6
 8290 0010 0BD0     		beq	.L328
3185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8291              		.loc 1 3187 5
 8292 0012 7B68     		ldr	r3, [r7, #4]
 8293 0014 1B68     		ldr	r3, [r3]
 8294 0016 5B68     		ldr	r3, [r3, #4]
 8295 0018 4A4A     		ldr	r2, .L337
 8296 001a 1340     		ands	r3, r2
 8297 001c 1900     		movs	r1, r3
 8298 001e 7B68     		ldr	r3, [r7, #4]
 8299 0020 9A6A     		ldr	r2, [r3, #40]
 8300 0022 7B68     		ldr	r3, [r7, #4]
 8301 0024 1B68     		ldr	r3, [r3]
 8302 0026 0A43     		orrs	r2, r1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 212


 8303 0028 5A60     		str	r2, [r3, #4]
 8304              	.L328:
3188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8305              		.loc 1 3191 7
 8306 002a 7B68     		ldr	r3, [r7, #4]
 8307 002c 5B6A     		ldr	r3, [r3, #36]
 8308 002e 0222     		movs	r2, #2
 8309 0030 1340     		ands	r3, r2
 8310              		.loc 1 3191 6
 8311 0032 0BD0     		beq	.L329
3192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8312              		.loc 1 3194 5
 8313 0034 7B68     		ldr	r3, [r7, #4]
 8314 0036 1B68     		ldr	r3, [r3]
 8315 0038 5B68     		ldr	r3, [r3, #4]
 8316 003a 434A     		ldr	r2, .L337+4
 8317 003c 1340     		ands	r3, r2
 8318 003e 1900     		movs	r1, r3
 8319 0040 7B68     		ldr	r3, [r7, #4]
 8320 0042 DA6A     		ldr	r2, [r3, #44]
 8321 0044 7B68     		ldr	r3, [r7, #4]
 8322 0046 1B68     		ldr	r3, [r3]
 8323 0048 0A43     		orrs	r2, r1
 8324 004a 5A60     		str	r2, [r3, #4]
 8325              	.L329:
3195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure data inversion */
3198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8326              		.loc 1 3198 7
 8327 004c 7B68     		ldr	r3, [r7, #4]
 8328 004e 5B6A     		ldr	r3, [r3, #36]
 8329 0050 0422     		movs	r2, #4
 8330 0052 1340     		ands	r3, r2
 8331              		.loc 1 3198 6
 8332 0054 0BD0     		beq	.L330
3199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8333              		.loc 1 3201 5
 8334 0056 7B68     		ldr	r3, [r7, #4]
 8335 0058 1B68     		ldr	r3, [r3]
 8336 005a 5B68     		ldr	r3, [r3, #4]
 8337 005c 3B4A     		ldr	r2, .L337+8
 8338 005e 1340     		ands	r3, r2
 8339 0060 1900     		movs	r1, r3
 8340 0062 7B68     		ldr	r3, [r7, #4]
 8341 0064 1A6B     		ldr	r2, [r3, #48]
 8342 0066 7B68     		ldr	r3, [r7, #4]
 8343 0068 1B68     		ldr	r3, [r3]
 8344 006a 0A43     		orrs	r2, r1
 8345 006c 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 213


 8346              	.L330:
3202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8347              		.loc 1 3205 7
 8348 006e 7B68     		ldr	r3, [r7, #4]
 8349 0070 5B6A     		ldr	r3, [r3, #36]
 8350 0072 0822     		movs	r2, #8
 8351 0074 1340     		ands	r3, r2
 8352              		.loc 1 3205 6
 8353 0076 0BD0     		beq	.L331
3206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8354              		.loc 1 3208 5
 8355 0078 7B68     		ldr	r3, [r7, #4]
 8356 007a 1B68     		ldr	r3, [r3]
 8357 007c 5B68     		ldr	r3, [r3, #4]
 8358 007e 344A     		ldr	r2, .L337+12
 8359 0080 1340     		ands	r3, r2
 8360 0082 1900     		movs	r1, r3
 8361 0084 7B68     		ldr	r3, [r7, #4]
 8362 0086 5A6B     		ldr	r2, [r3, #52]
 8363 0088 7B68     		ldr	r3, [r7, #4]
 8364 008a 1B68     		ldr	r3, [r3]
 8365 008c 0A43     		orrs	r2, r1
 8366 008e 5A60     		str	r2, [r3, #4]
 8367              	.L331:
3209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8368              		.loc 1 3212 7
 8369 0090 7B68     		ldr	r3, [r7, #4]
 8370 0092 5B6A     		ldr	r3, [r3, #36]
 8371 0094 1022     		movs	r2, #16
 8372 0096 1340     		ands	r3, r2
 8373              		.loc 1 3212 6
 8374 0098 0BD0     		beq	.L332
3213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8375              		.loc 1 3215 5
 8376 009a 7B68     		ldr	r3, [r7, #4]
 8377 009c 1B68     		ldr	r3, [r3]
 8378 009e 9B68     		ldr	r3, [r3, #8]
 8379 00a0 2C4A     		ldr	r2, .L337+16
 8380 00a2 1340     		ands	r3, r2
 8381 00a4 1900     		movs	r1, r3
 8382 00a6 7B68     		ldr	r3, [r7, #4]
 8383 00a8 9A6B     		ldr	r2, [r3, #56]
 8384 00aa 7B68     		ldr	r3, [r7, #4]
 8385 00ac 1B68     		ldr	r3, [r3]
 8386 00ae 0A43     		orrs	r2, r1
 8387 00b0 9A60     		str	r2, [r3, #8]
 8388              	.L332:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 214


3216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8389              		.loc 1 3219 7
 8390 00b2 7B68     		ldr	r3, [r7, #4]
 8391 00b4 5B6A     		ldr	r3, [r3, #36]
 8392 00b6 2022     		movs	r2, #32
 8393 00b8 1340     		ands	r3, r2
 8394              		.loc 1 3219 6
 8395 00ba 0BD0     		beq	.L333
3220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8396              		.loc 1 3222 5
 8397 00bc 7B68     		ldr	r3, [r7, #4]
 8398 00be 1B68     		ldr	r3, [r3]
 8399 00c0 9B68     		ldr	r3, [r3, #8]
 8400 00c2 254A     		ldr	r2, .L337+20
 8401 00c4 1340     		ands	r3, r2
 8402 00c6 1900     		movs	r1, r3
 8403 00c8 7B68     		ldr	r3, [r7, #4]
 8404 00ca DA6B     		ldr	r2, [r3, #60]
 8405 00cc 7B68     		ldr	r3, [r7, #4]
 8406 00ce 1B68     		ldr	r3, [r3]
 8407 00d0 0A43     		orrs	r2, r1
 8408 00d2 9A60     		str	r2, [r3, #8]
 8409              	.L333:
3223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8410              		.loc 1 3226 7
 8411 00d4 7B68     		ldr	r3, [r7, #4]
 8412 00d6 5B6A     		ldr	r3, [r3, #36]
 8413 00d8 4022     		movs	r2, #64
 8414 00da 1340     		ands	r3, r2
 8415              		.loc 1 3226 6
 8416 00dc 1DD0     		beq	.L334
3227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8417              		.loc 1 3230 5
 8418 00de 7B68     		ldr	r3, [r7, #4]
 8419 00e0 1B68     		ldr	r3, [r3]
 8420 00e2 5B68     		ldr	r3, [r3, #4]
 8421 00e4 1D4A     		ldr	r2, .L337+24
 8422 00e6 1340     		ands	r3, r2
 8423 00e8 1900     		movs	r1, r3
 8424 00ea 7B68     		ldr	r3, [r7, #4]
 8425 00ec 1A6C     		ldr	r2, [r3, #64]
 8426 00ee 7B68     		ldr	r3, [r7, #4]
 8427 00f0 1B68     		ldr	r3, [r3]
 8428 00f2 0A43     		orrs	r2, r1
 8429 00f4 5A60     		str	r2, [r3, #4]
3231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 215


3232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8430              		.loc 1 3232 28
 8431 00f6 7B68     		ldr	r3, [r7, #4]
 8432 00f8 1A6C     		ldr	r2, [r3, #64]
 8433              		.loc 1 3232 8
 8434 00fa 8023     		movs	r3, #128
 8435 00fc 5B03     		lsls	r3, r3, #13
 8436 00fe 9A42     		cmp	r2, r3
 8437 0100 0BD1     		bne	.L334
3233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8438              		.loc 1 3235 7
 8439 0102 7B68     		ldr	r3, [r7, #4]
 8440 0104 1B68     		ldr	r3, [r3]
 8441 0106 5B68     		ldr	r3, [r3, #4]
 8442 0108 154A     		ldr	r2, .L337+28
 8443 010a 1340     		ands	r3, r2
 8444 010c 1900     		movs	r1, r3
 8445 010e 7B68     		ldr	r3, [r7, #4]
 8446 0110 5A6C     		ldr	r2, [r3, #68]
 8447 0112 7B68     		ldr	r3, [r7, #4]
 8448 0114 1B68     		ldr	r3, [r3]
 8449 0116 0A43     		orrs	r2, r1
 8450 0118 5A60     		str	r2, [r3, #4]
 8451              	.L334:
3236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8452              		.loc 1 3240 7
 8453 011a 7B68     		ldr	r3, [r7, #4]
 8454 011c 5B6A     		ldr	r3, [r3, #36]
 8455 011e 8022     		movs	r2, #128
 8456 0120 1340     		ands	r3, r2
 8457              		.loc 1 3240 6
 8458 0122 0BD0     		beq	.L336
3241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8459              		.loc 1 3243 5
 8460 0124 7B68     		ldr	r3, [r7, #4]
 8461 0126 1B68     		ldr	r3, [r3]
 8462 0128 5B68     		ldr	r3, [r3, #4]
 8463 012a 0E4A     		ldr	r2, .L337+32
 8464 012c 1340     		ands	r3, r2
 8465 012e 1900     		movs	r1, r3
 8466 0130 7B68     		ldr	r3, [r7, #4]
 8467 0132 9A6C     		ldr	r2, [r3, #72]
 8468 0134 7B68     		ldr	r3, [r7, #4]
 8469 0136 1B68     		ldr	r3, [r3]
 8470 0138 0A43     		orrs	r2, r1
 8471 013a 5A60     		str	r2, [r3, #4]
 8472              	.L336:
3244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 216


 8473              		.loc 1 3245 1
 8474 013c C046     		nop
 8475 013e BD46     		mov	sp, r7
 8476 0140 02B0     		add	sp, sp, #8
 8477              		@ sp needed
 8478 0142 80BD     		pop	{r7, pc}
 8479              	.L338:
 8480              		.align	2
 8481              	.L337:
 8482 0144 FFFFFDFF 		.word	-131073
 8483 0148 FFFFFEFF 		.word	-65537
 8484 014c FFFFFBFF 		.word	-262145
 8485 0150 FF7FFFFF 		.word	-32769
 8486 0154 FFEFFFFF 		.word	-4097
 8487 0158 FFDFFFFF 		.word	-8193
 8488 015c FFFFEFFF 		.word	-1048577
 8489 0160 FFFF9FFF 		.word	-6291457
 8490 0164 FFFFF7FF 		.word	-524289
 8491              		.cfi_endproc
 8492              	.LFE84:
 8494              		.section	.text.UART_CheckIdleState,"ax",%progbits
 8495              		.align	1
 8496              		.global	UART_CheckIdleState
 8497              		.syntax unified
 8498              		.code	16
 8499              		.thumb_func
 8501              	UART_CheckIdleState:
 8502              	.LFB85:
3246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Check the UART Idle State.
3249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
3251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 8503              		.loc 1 3253 1
 8504              		.cfi_startproc
 8505              		@ args = 0, pretend = 0, frame = 64
 8506              		@ frame_needed = 1, uses_anonymous_args = 0
 8507 0000 80B5     		push	{r7, lr}
 8508              	.LCFI135:
 8509              		.cfi_def_cfa_offset 8
 8510              		.cfi_offset 7, -8
 8511              		.cfi_offset 14, -4
 8512 0002 92B0     		sub	sp, sp, #72
 8513              	.LCFI136:
 8514              		.cfi_def_cfa_offset 80
 8515 0004 02AF     		add	r7, sp, #8
 8516              	.LCFI137:
 8517              		.cfi_def_cfa 7, 72
 8518 0006 7860     		str	r0, [r7, #4]
3254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart;
3255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8519              		.loc 1 3257 20
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 217


 8520 0008 7B68     		ldr	r3, [r7, #4]
 8521 000a 8422     		movs	r2, #132
 8522 000c 0021     		movs	r1, #0
 8523 000e 9950     		str	r1, [r3, r2]
3258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Init tickstart for timeout management */
3260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tickstart = HAL_GetTick();
 8524              		.loc 1 3260 15
 8525 0010 FFF7FEFF 		bl	HAL_GetTick
 8526 0014 0300     		movs	r3, r0
 8527 0016 FB63     		str	r3, [r7, #60]
3261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8528              		.loc 1 3263 13
 8529 0018 7B68     		ldr	r3, [r7, #4]
 8530 001a 1B68     		ldr	r3, [r3]
 8531              		.loc 1 3263 23
 8532 001c 1B68     		ldr	r3, [r3]
 8533              		.loc 1 3263 29
 8534 001e 0822     		movs	r2, #8
 8535 0020 1340     		ands	r3, r2
 8536              		.loc 1 3263 6
 8537 0022 082B     		cmp	r3, #8
 8538 0024 2CD1     		bne	.L340
3264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 8539              		.loc 1 3266 9
 8540 0026 FB6B     		ldr	r3, [r7, #60]
 8541 0028 8022     		movs	r2, #128
 8542 002a 9103     		lsls	r1, r2, #14
 8543 002c 7868     		ldr	r0, [r7, #4]
 8544 002e 464A     		ldr	r2, .L346
 8545 0030 0092     		str	r2, [sp]
 8546 0032 0022     		movs	r2, #0
 8547 0034 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 8548 0038 031E     		subs	r3, r0, #0
 8549              		.loc 1 3266 8
 8550 003a 21D0     		beq	.L340
 8551              	.LBB932:
 8552              	.LBB933:
 8553              	.LBB934:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 8554              		.loc 2 386 3
 8555              		.syntax divided
 8556              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8557 003c EFF31083 		MRS r3, primask
 8558              	@ 0 "" 2
 8559              		.thumb
 8560              		.syntax unified
 8561 0040 7B62     		str	r3, [r7, #36]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8562              		.loc 2 387 9
 8563 0042 7B6A     		ldr	r3, [r7, #36]
 8564              	.LBE934:
 8565              	.LBE933:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 218


3267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable TXE interrupt for the interrupt process */
3269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE));
 8566              		.loc 1 3269 7
 8567 0044 BB63     		str	r3, [r7, #56]
 8568 0046 0123     		movs	r3, #1
 8569 0048 BB62     		str	r3, [r7, #40]
 8570              	.LBB935:
 8571              	.LBB936:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8572              		.loc 2 414 3
 8573 004a BB6A     		ldr	r3, [r7, #40]
 8574              		.syntax divided
 8575              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8576 004c 83F31088 		MSR primask, r3
 8577              	@ 0 "" 2
 8578              		.loc 2 415 1
 8579              		.thumb
 8580              		.syntax unified
 8581 0050 C046     		nop
 8582              	.LBE936:
 8583              	.LBE935:
 8584              		.loc 1 3269 7
 8585 0052 7B68     		ldr	r3, [r7, #4]
 8586 0054 1B68     		ldr	r3, [r3]
 8587 0056 1A68     		ldr	r2, [r3]
 8588 0058 7B68     		ldr	r3, [r7, #4]
 8589 005a 1B68     		ldr	r3, [r3]
 8590 005c 8021     		movs	r1, #128
 8591 005e 8A43     		bics	r2, r1
 8592 0060 1A60     		str	r2, [r3]
 8593 0062 BB6B     		ldr	r3, [r7, #56]
 8594 0064 FB62     		str	r3, [r7, #44]
 8595              	.LBB937:
 8596              	.LBB938:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8597              		.loc 2 414 3
 8598 0066 FB6A     		ldr	r3, [r7, #44]
 8599              		.syntax divided
 8600              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8601 0068 83F31088 		MSR primask, r3
 8602              	@ 0 "" 2
 8603              		.loc 2 415 1
 8604              		.thumb
 8605              		.syntax unified
 8606 006c C046     		nop
 8607              	.LBE938:
 8608              	.LBE937:
 8609              	.LBE932:
3270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 8610              		.loc 1 3271 21
 8611 006e 7B68     		ldr	r3, [r7, #4]
 8612 0070 2022     		movs	r2, #32
 8613 0072 DA67     		str	r2, [r3, #124]
3272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UNLOCK(huart);
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 219


 8614              		.loc 1 3273 7
 8615 0074 7B68     		ldr	r3, [r7, #4]
 8616 0076 7822     		movs	r2, #120
 8617 0078 0021     		movs	r1, #0
 8618 007a 9954     		strb	r1, [r3, r2]
3274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Timeout occurred */
3276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
 8619              		.loc 1 3276 14
 8620 007c 0323     		movs	r3, #3
 8621 007e 5FE0     		b	.L342
 8622              	.L340:
3277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8623              		.loc 1 3281 13
 8624 0080 7B68     		ldr	r3, [r7, #4]
 8625 0082 1B68     		ldr	r3, [r3]
 8626              		.loc 1 3281 23
 8627 0084 1B68     		ldr	r3, [r3]
 8628              		.loc 1 3281 29
 8629 0086 0422     		movs	r2, #4
 8630 0088 1340     		ands	r3, r2
 8631              		.loc 1 3281 6
 8632 008a 042B     		cmp	r3, #4
 8633 008c 46D1     		bne	.L343
3282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Wait until REACK flag is set */
3284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 8634              		.loc 1 3284 9
 8635 008e FB6B     		ldr	r3, [r7, #60]
 8636 0090 8022     		movs	r2, #128
 8637 0092 D103     		lsls	r1, r2, #15
 8638 0094 7868     		ldr	r0, [r7, #4]
 8639 0096 2C4A     		ldr	r2, .L346
 8640 0098 0092     		str	r2, [sp]
 8641 009a 0022     		movs	r2, #0
 8642 009c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 8643 00a0 031E     		subs	r3, r0, #0
 8644              		.loc 1 3284 8
 8645 00a2 3BD0     		beq	.L343
 8646              	.LBB939:
 8647              	.LBB940:
 8648              	.LBB941:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 8649              		.loc 2 386 3
 8650              		.syntax divided
 8651              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8652 00a4 EFF31083 		MRS r3, primask
 8653              	@ 0 "" 2
 8654              		.thumb
 8655              		.syntax unified
 8656 00a8 FB60     		str	r3, [r7, #12]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8657              		.loc 2 387 9
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 220


 8658 00aa FB68     		ldr	r3, [r7, #12]
 8659              	.LBE941:
 8660              	.LBE940:
3285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error)
3287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       interrupts for the interrupt process */
3288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8661              		.loc 1 3288 7
 8662 00ac 7B63     		str	r3, [r7, #52]
 8663 00ae 0123     		movs	r3, #1
 8664 00b0 3B61     		str	r3, [r7, #16]
 8665              	.LBB942:
 8666              	.LBB943:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8667              		.loc 2 414 3
 8668 00b2 3B69     		ldr	r3, [r7, #16]
 8669              		.syntax divided
 8670              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8671 00b4 83F31088 		MSR primask, r3
 8672              	@ 0 "" 2
 8673              		.loc 2 415 1
 8674              		.thumb
 8675              		.syntax unified
 8676 00b8 C046     		nop
 8677              	.LBE943:
 8678              	.LBE942:
 8679              		.loc 1 3288 7
 8680 00ba 7B68     		ldr	r3, [r7, #4]
 8681 00bc 1B68     		ldr	r3, [r3]
 8682 00be 1A68     		ldr	r2, [r3]
 8683 00c0 7B68     		ldr	r3, [r7, #4]
 8684 00c2 1B68     		ldr	r3, [r3]
 8685 00c4 2149     		ldr	r1, .L346+4
 8686 00c6 0A40     		ands	r2, r1
 8687 00c8 1A60     		str	r2, [r3]
 8688 00ca 7B6B     		ldr	r3, [r7, #52]
 8689 00cc 7B61     		str	r3, [r7, #20]
 8690              	.LBB944:
 8691              	.LBB945:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8692              		.loc 2 414 3
 8693 00ce 7B69     		ldr	r3, [r7, #20]
 8694              		.syntax divided
 8695              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8696 00d0 83F31088 		MSR primask, r3
 8697              	@ 0 "" 2
 8698              		.loc 2 415 1
 8699              		.thumb
 8700              		.syntax unified
 8701 00d4 C046     		nop
 8702              	.LBE945:
 8703              	.LBE944:
 8704              	.LBE939:
 8705              	.LBB946:
 8706              	.LBB947:
 8707              	.LBB948:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 221


 8708              		.loc 2 386 3
 8709              		.syntax divided
 8710              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8711 00d6 EFF31083 		MRS r3, primask
 8712              	@ 0 "" 2
 8713              		.thumb
 8714              		.syntax unified
 8715 00da BB61     		str	r3, [r7, #24]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8716              		.loc 2 387 9
 8717 00dc BB69     		ldr	r3, [r7, #24]
 8718              	.LBE948:
 8719              	.LBE947:
3289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8720              		.loc 1 3289 7
 8721 00de 3B63     		str	r3, [r7, #48]
 8722 00e0 0123     		movs	r3, #1
 8723 00e2 FB61     		str	r3, [r7, #28]
 8724              	.LBB949:
 8725              	.LBB950:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8726              		.loc 2 414 3
 8727 00e4 FB69     		ldr	r3, [r7, #28]
 8728              		.syntax divided
 8729              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8730 00e6 83F31088 		MSR primask, r3
 8731              	@ 0 "" 2
 8732              		.loc 2 415 1
 8733              		.thumb
 8734              		.syntax unified
 8735 00ea C046     		nop
 8736              	.LBE950:
 8737              	.LBE949:
 8738              		.loc 1 3289 7
 8739 00ec 7B68     		ldr	r3, [r7, #4]
 8740 00ee 1B68     		ldr	r3, [r3]
 8741 00f0 9A68     		ldr	r2, [r3, #8]
 8742 00f2 7B68     		ldr	r3, [r7, #4]
 8743 00f4 1B68     		ldr	r3, [r3]
 8744 00f6 0121     		movs	r1, #1
 8745 00f8 8A43     		bics	r2, r1
 8746 00fa 9A60     		str	r2, [r3, #8]
 8747 00fc 3B6B     		ldr	r3, [r7, #48]
 8748 00fe 3B62     		str	r3, [r7, #32]
 8749              	.LBB951:
 8750              	.LBB952:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8751              		.loc 2 414 3
 8752 0100 3B6A     		ldr	r3, [r7, #32]
 8753              		.syntax divided
 8754              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8755 0102 83F31088 		MSR primask, r3
 8756              	@ 0 "" 2
 8757              		.loc 2 415 1
 8758              		.thumb
 8759              		.syntax unified
 8760 0106 C046     		nop
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 222


 8761              	.LBE952:
 8762              	.LBE951:
 8763              	.LBE946:
3290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 8764              		.loc 1 3291 22
 8765 0108 7B68     		ldr	r3, [r7, #4]
 8766 010a 8022     		movs	r2, #128
 8767 010c 2021     		movs	r1, #32
 8768 010e 9950     		str	r1, [r3, r2]
3292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 8769              		.loc 1 3293 7
 8770 0110 7B68     		ldr	r3, [r7, #4]
 8771 0112 7822     		movs	r2, #120
 8772 0114 0021     		movs	r1, #0
 8773 0116 9954     		strb	r1, [r3, r2]
3294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Timeout occurred */
3296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
 8774              		.loc 1 3296 14
 8775 0118 0323     		movs	r3, #3
 8776 011a 11E0     		b	.L342
 8777              	.L343:
3297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART State */
3301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8778              		.loc 1 3301 17
 8779 011c 7B68     		ldr	r3, [r7, #4]
 8780 011e 2022     		movs	r2, #32
 8781 0120 DA67     		str	r2, [r3, #124]
3302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8782              		.loc 1 3302 18
 8783 0122 7B68     		ldr	r3, [r7, #4]
 8784 0124 8022     		movs	r2, #128
 8785 0126 2021     		movs	r1, #32
 8786 0128 9950     		str	r1, [r3, r2]
3303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8787              		.loc 1 3303 24
 8788 012a 7B68     		ldr	r3, [r7, #4]
 8789 012c 0022     		movs	r2, #0
 8790 012e 1A66     		str	r2, [r3, #96]
3304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 8791              		.loc 1 3304 22
 8792 0130 7B68     		ldr	r3, [r7, #4]
 8793 0132 0022     		movs	r2, #0
 8794 0134 5A66     		str	r2, [r3, #100]
3305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 8795              		.loc 1 3306 3
 8796 0136 7B68     		ldr	r3, [r7, #4]
 8797 0138 7822     		movs	r2, #120
 8798 013a 0021     		movs	r1, #0
 8799 013c 9954     		strb	r1, [r3, r2]
3307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 223


3308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 8800              		.loc 1 3308 10
 8801 013e 0023     		movs	r3, #0
 8802              	.L342:
3309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 8803              		.loc 1 3309 1
 8804 0140 1800     		movs	r0, r3
 8805 0142 BD46     		mov	sp, r7
 8806 0144 10B0     		add	sp, sp, #64
 8807              		@ sp needed
 8808 0146 80BD     		pop	{r7, pc}
 8809              	.L347:
 8810              		.align	2
 8811              	.L346:
 8812 0148 FFFFFF01 		.word	33554431
 8813 014c DFFEFFFF 		.word	-289
 8814              		.cfi_endproc
 8815              	.LFE85:
 8817              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 8818              		.align	1
 8819              		.global	UART_WaitOnFlagUntilTimeout
 8820              		.syntax unified
 8821              		.code	16
 8822              		.thumb_func
 8824              	UART_WaitOnFlagUntilTimeout:
 8825              	.LFB86:
3310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout. It waits
3313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                  until a flag is no longer in the specified status.
3314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart     UART handle.
3315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Status    The actual Flag status (SET or RESET)
3317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Tickstart Tick start value
3318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout   Timeout duration
3319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
3320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 8826              		.loc 1 3323 1
 8827              		.cfi_startproc
 8828              		@ args = 4, pretend = 0, frame = 16
 8829              		@ frame_needed = 1, uses_anonymous_args = 0
 8830 0000 80B5     		push	{r7, lr}
 8831              	.LCFI138:
 8832              		.cfi_def_cfa_offset 8
 8833              		.cfi_offset 7, -8
 8834              		.cfi_offset 14, -4
 8835 0002 84B0     		sub	sp, sp, #16
 8836              	.LCFI139:
 8837              		.cfi_def_cfa_offset 24
 8838 0004 00AF     		add	r7, sp, #0
 8839              	.LCFI140:
 8840              		.cfi_def_cfa_register 7
 8841 0006 F860     		str	r0, [r7, #12]
 8842 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 224


 8843 000a 3B60     		str	r3, [r7]
 8844 000c FB1D     		adds	r3, r7, #7
 8845 000e 1A70     		strb	r2, [r3]
3324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
3325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8846              		.loc 1 3325 9
 8847 0010 4BE0     		b	.L349
 8848              	.L354:
3326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check for the Timeout */
3328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 8849              		.loc 1 3328 8
 8850 0012 BB69     		ldr	r3, [r7, #24]
 8851 0014 0133     		adds	r3, r3, #1
 8852 0016 48D0     		beq	.L349
3329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8853              		.loc 1 3330 13
 8854 0018 FFF7FEFF 		bl	HAL_GetTick
 8855 001c 0200     		movs	r2, r0
 8856              		.loc 1 3330 27
 8857 001e 3B68     		ldr	r3, [r7]
 8858 0020 D31A     		subs	r3, r2, r3
 8859              		.loc 1 3330 10
 8860 0022 BA69     		ldr	r2, [r7, #24]
 8861 0024 9A42     		cmp	r2, r3
 8862 0026 02D3     		bcc	.L350
 8863              		.loc 1 3330 51 discriminator 1
 8864 0028 BB69     		ldr	r3, [r7, #24]
 8865 002a 002B     		cmp	r3, #0
 8866 002c 01D1     		bne	.L351
 8867              	.L350:
3331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
3332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 8868              		.loc 1 3333 16
 8869 002e 0323     		movs	r3, #3
 8870 0030 4BE0     		b	.L352
 8871              	.L351:
3334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
3335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8872              		.loc 1 3336 11
 8873 0032 FB68     		ldr	r3, [r7, #12]
 8874 0034 1B68     		ldr	r3, [r3]
 8875 0036 1B68     		ldr	r3, [r3]
 8876 0038 0422     		movs	r2, #4
 8877 003a 1340     		ands	r3, r2
 8878              		.loc 1 3336 10
 8879 003c 35D0     		beq	.L349
3337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
3338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8880              		.loc 1 3338 13
 8881 003e FB68     		ldr	r3, [r7, #12]
 8882 0040 1B68     		ldr	r3, [r3]
 8883 0042 DB69     		ldr	r3, [r3, #28]
 8884 0044 0822     		movs	r2, #8
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 225


 8885 0046 1340     		ands	r3, r2
 8886              		.loc 1 3338 12
 8887 0048 082B     		cmp	r3, #8
 8888 004a 11D1     		bne	.L353
3339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
3340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            /* Clear Overrun Error flag*/
3341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8889              		.loc 1 3341 12
 8890 004c FB68     		ldr	r3, [r7, #12]
 8891 004e 1B68     		ldr	r3, [r3]
 8892 0050 0822     		movs	r2, #8
 8893 0052 1A62     		str	r2, [r3, #32]
3342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            /* Blocking error : transfer is aborted
3344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
3345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Disable Rx Interrupts if ongoing */
3346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            UART_EndRxTransfer(huart);
 8894              		.loc 1 3346 12
 8895 0054 FB68     		ldr	r3, [r7, #12]
 8896 0056 1800     		movs	r0, r3
 8897 0058 FFF7FEFF 		bl	UART_EndRxTransfer
3347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            huart->ErrorCode = HAL_UART_ERROR_ORE;
 8898              		.loc 1 3348 29
 8899 005c FB68     		ldr	r3, [r7, #12]
 8900 005e 8422     		movs	r2, #132
 8901 0060 0821     		movs	r1, #8
 8902 0062 9950     		str	r1, [r3, r2]
3349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            /* Process Unlocked */
3351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            __HAL_UNLOCK(huart);
 8903              		.loc 1 3351 12
 8904 0064 FB68     		ldr	r3, [r7, #12]
 8905 0066 7822     		movs	r2, #120
 8906 0068 0021     		movs	r1, #0
 8907 006a 9954     		strb	r1, [r3, r2]
3352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            return HAL_ERROR;
 8908              		.loc 1 3353 19
 8909 006c 0123     		movs	r3, #1
 8910 006e 2CE0     		b	.L352
 8911              	.L353:
3354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
3355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8912              		.loc 1 3355 13
 8913 0070 FB68     		ldr	r3, [r7, #12]
 8914 0072 1B68     		ldr	r3, [r3]
 8915 0074 DA69     		ldr	r2, [r3, #28]
 8916 0076 8023     		movs	r3, #128
 8917 0078 1B01     		lsls	r3, r3, #4
 8918 007a 1A40     		ands	r2, r3
 8919              		.loc 1 3355 12
 8920 007c 8023     		movs	r3, #128
 8921 007e 1B01     		lsls	r3, r3, #4
 8922 0080 9A42     		cmp	r2, r3
 8923 0082 12D1     		bne	.L349
3356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 226


3357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8924              		.loc 1 3358 11
 8925 0084 FB68     		ldr	r3, [r7, #12]
 8926 0086 1B68     		ldr	r3, [r3]
 8927 0088 8022     		movs	r2, #128
 8928 008a 1201     		lsls	r2, r2, #4
 8929 008c 1A62     		str	r2, [r3, #32]
3359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Blocking error : transfer is aborted
3361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           Set the UART state ready to be able to start again the process,
3362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           Disable Rx Interrupts if ongoing */
3363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           UART_EndRxTransfer(huart);
 8930              		.loc 1 3363 11
 8931 008e FB68     		ldr	r3, [r7, #12]
 8932 0090 1800     		movs	r0, r3
 8933 0092 FFF7FEFF 		bl	UART_EndRxTransfer
3364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 8934              		.loc 1 3365 28
 8935 0096 FB68     		ldr	r3, [r7, #12]
 8936 0098 8422     		movs	r2, #132
 8937 009a 2021     		movs	r1, #32
 8938 009c 9950     		str	r1, [r3, r2]
3366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Process Unlocked */
3368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 8939              		.loc 1 3368 11
 8940 009e FB68     		ldr	r3, [r7, #12]
 8941 00a0 7822     		movs	r2, #120
 8942 00a2 0021     		movs	r1, #0
 8943 00a4 9954     		strb	r1, [r3, r2]
3369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           return HAL_TIMEOUT;
 8944              		.loc 1 3370 18
 8945 00a6 0323     		movs	r3, #3
 8946 00a8 0FE0     		b	.L352
 8947              	.L349:
3325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 8948              		.loc 1 3325 11
 8949 00aa FB68     		ldr	r3, [r7, #12]
 8950 00ac 1B68     		ldr	r3, [r3]
 8951 00ae DB69     		ldr	r3, [r3, #28]
 8952 00b0 BA68     		ldr	r2, [r7, #8]
 8953 00b2 1340     		ands	r3, r2
3325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 8954              		.loc 1 3325 50
 8955 00b4 BA68     		ldr	r2, [r7, #8]
 8956 00b6 D31A     		subs	r3, r2, r3
 8957 00b8 5A42     		rsbs	r2, r3, #0
 8958 00ba 5341     		adcs	r3, r3, r2
 8959 00bc DBB2     		uxtb	r3, r3
 8960 00be 1A00     		movs	r2, r3
3325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 8961              		.loc 1 3325 59
 8962 00c0 FB1D     		adds	r3, r7, #7
 8963 00c2 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 227


3325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 8964              		.loc 1 3325 9
 8965 00c4 9A42     		cmp	r2, r3
 8966 00c6 A4D0     		beq	.L354
3371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
3372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
3373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 8967              		.loc 1 3375 10
 8968 00c8 0023     		movs	r3, #0
 8969              	.L352:
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 8970              		.loc 1 3376 1
 8971 00ca 1800     		movs	r0, r3
 8972 00cc BD46     		mov	sp, r7
 8973 00ce 04B0     		add	sp, sp, #16
 8974              		@ sp needed
 8975 00d0 80BD     		pop	{r7, pc}
 8976              		.cfi_endproc
 8977              	.LFE86:
 8979              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 8980              		.align	1
 8981              		.global	UART_Start_Receive_IT
 8982              		.syntax unified
 8983              		.code	16
 8984              		.thumb_func
 8986              	UART_Start_Receive_IT:
 8987              	.LFB87:
3377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
3385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
3388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 8988              		.loc 1 3390 1
 8989              		.cfi_startproc
 8990              		@ args = 0, pretend = 0, frame = 64
 8991              		@ frame_needed = 1, uses_anonymous_args = 0
 8992 0000 80B5     		push	{r7, lr}
 8993              	.LCFI141:
 8994              		.cfi_def_cfa_offset 8
 8995              		.cfi_offset 7, -8
 8996              		.cfi_offset 14, -4
 8997 0002 90B0     		sub	sp, sp, #64
 8998              	.LCFI142:
 8999              		.cfi_def_cfa_offset 72
 9000 0004 00AF     		add	r7, sp, #0
 9001              	.LCFI143:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 228


 9002              		.cfi_def_cfa_register 7
 9003 0006 F860     		str	r0, [r7, #12]
 9004 0008 B960     		str	r1, [r7, #8]
 9005 000a BB1D     		adds	r3, r7, #6
 9006 000c 1A80     		strh	r2, [r3]
3391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
 9007              		.loc 1 3391 22
 9008 000e FB68     		ldr	r3, [r7, #12]
 9009 0010 BA68     		ldr	r2, [r7, #8]
 9010 0012 5A65     		str	r2, [r3, #84]
3392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferSize  = Size;
 9011              		.loc 1 3392 22
 9012 0014 FB68     		ldr	r3, [r7, #12]
 9013 0016 BA1D     		adds	r2, r7, #6
 9014 0018 5821     		movs	r1, #88
 9015 001a 1288     		ldrh	r2, [r2]
 9016 001c 5A52     		strh	r2, [r3, r1]
3393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = Size;
 9017              		.loc 1 3393 22
 9018 001e FB68     		ldr	r3, [r7, #12]
 9019 0020 BA1D     		adds	r2, r7, #6
 9020 0022 5A21     		movs	r1, #90
 9021 0024 1288     		ldrh	r2, [r2]
 9022 0026 5A52     		strh	r2, [r3, r1]
3394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxISR       = NULL;
 9023              		.loc 1 3394 22
 9024 0028 FB68     		ldr	r3, [r7, #12]
 9025 002a 0022     		movs	r2, #0
 9026 002c 9A66     		str	r2, [r3, #104]
3395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Computation of UART mask to apply to RDR register */
3397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_MASK_COMPUTATION(huart);
 9027              		.loc 1 3397 3
 9028 002e FB68     		ldr	r3, [r7, #12]
 9029 0030 9A68     		ldr	r2, [r3, #8]
 9030 0032 8023     		movs	r3, #128
 9031 0034 5B01     		lsls	r3, r3, #5
 9032 0036 9A42     		cmp	r2, r3
 9033 0038 0DD1     		bne	.L356
 9034              		.loc 1 3397 3 is_stmt 0 discriminator 1
 9035 003a FB68     		ldr	r3, [r7, #12]
 9036 003c 1B69     		ldr	r3, [r3, #16]
 9037 003e 002B     		cmp	r3, #0
 9038 0040 04D1     		bne	.L357
 9039              		.loc 1 3397 3 discriminator 3
 9040 0042 FB68     		ldr	r3, [r7, #12]
 9041 0044 5C22     		movs	r2, #92
 9042 0046 4649     		ldr	r1, .L369
 9043 0048 9952     		strh	r1, [r3, r2]
 9044 004a 1AE0     		b	.L358
 9045              	.L357:
 9046              		.loc 1 3397 3 discriminator 4
 9047 004c FB68     		ldr	r3, [r7, #12]
 9048 004e 5C22     		movs	r2, #92
 9049 0050 FF21     		movs	r1, #255
 9050 0052 9952     		strh	r1, [r3, r2]
 9051 0054 15E0     		b	.L358
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 229


 9052              	.L356:
 9053              		.loc 1 3397 3 discriminator 2
 9054 0056 FB68     		ldr	r3, [r7, #12]
 9055 0058 9B68     		ldr	r3, [r3, #8]
 9056 005a 002B     		cmp	r3, #0
 9057 005c 0DD1     		bne	.L359
 9058              		.loc 1 3397 3 discriminator 5
 9059 005e FB68     		ldr	r3, [r7, #12]
 9060 0060 1B69     		ldr	r3, [r3, #16]
 9061 0062 002B     		cmp	r3, #0
 9062 0064 04D1     		bne	.L360
 9063              		.loc 1 3397 3 discriminator 7
 9064 0066 FB68     		ldr	r3, [r7, #12]
 9065 0068 5C22     		movs	r2, #92
 9066 006a FF21     		movs	r1, #255
 9067 006c 9952     		strh	r1, [r3, r2]
 9068 006e 08E0     		b	.L358
 9069              	.L360:
 9070              		.loc 1 3397 3 discriminator 8
 9071 0070 FB68     		ldr	r3, [r7, #12]
 9072 0072 5C22     		movs	r2, #92
 9073 0074 7F21     		movs	r1, #127
 9074 0076 9952     		strh	r1, [r3, r2]
 9075 0078 03E0     		b	.L358
 9076              	.L359:
 9077              		.loc 1 3397 3 discriminator 6
 9078 007a FB68     		ldr	r3, [r7, #12]
 9079 007c 5C22     		movs	r2, #92
 9080 007e 0021     		movs	r1, #0
 9081 0080 9952     		strh	r1, [r3, r2]
 9082              	.L358:
3398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 9083              		.loc 1 3399 20 is_stmt 1
 9084 0082 FB68     		ldr	r3, [r7, #12]
 9085 0084 8422     		movs	r2, #132
 9086 0086 0021     		movs	r1, #0
 9087 0088 9950     		str	r1, [r3, r2]
3400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 9088              		.loc 1 3400 18
 9089 008a FB68     		ldr	r3, [r7, #12]
 9090 008c 8022     		movs	r2, #128
 9091 008e 2221     		movs	r1, #34
 9092 0090 9950     		str	r1, [r3, r2]
 9093              	.LBB953:
 9094              	.LBB954:
 9095              	.LBB955:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 9096              		.loc 2 386 3
 9097              		.syntax divided
 9098              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9099 0092 EFF31083 		MRS r3, primask
 9100              	@ 0 "" 2
 9101              		.thumb
 9102              		.syntax unified
 9103 0096 BB62     		str	r3, [r7, #40]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 230


 9104              		.loc 2 387 9
 9105 0098 BB6A     		ldr	r3, [r7, #40]
 9106              	.LBE955:
 9107              	.LBE954:
3401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 9108              		.loc 1 3403 3
 9109 009a FB63     		str	r3, [r7, #60]
 9110 009c 0123     		movs	r3, #1
 9111 009e FB62     		str	r3, [r7, #44]
 9112              	.LBB956:
 9113              	.LBB957:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9114              		.loc 2 414 3
 9115 00a0 FB6A     		ldr	r3, [r7, #44]
 9116              		.syntax divided
 9117              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9118 00a2 83F31088 		MSR primask, r3
 9119              	@ 0 "" 2
 9120              		.loc 2 415 1
 9121              		.thumb
 9122              		.syntax unified
 9123 00a6 C046     		nop
 9124              	.LBE957:
 9125              	.LBE956:
 9126              		.loc 1 3403 3
 9127 00a8 FB68     		ldr	r3, [r7, #12]
 9128 00aa 1B68     		ldr	r3, [r3]
 9129 00ac 9A68     		ldr	r2, [r3, #8]
 9130 00ae FB68     		ldr	r3, [r7, #12]
 9131 00b0 1B68     		ldr	r3, [r3]
 9132 00b2 0121     		movs	r1, #1
 9133 00b4 0A43     		orrs	r2, r1
 9134 00b6 9A60     		str	r2, [r3, #8]
 9135 00b8 FB6B     		ldr	r3, [r7, #60]
 9136 00ba 3B63     		str	r3, [r7, #48]
 9137              	.LBB958:
 9138              	.LBB959:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9139              		.loc 2 414 3
 9140 00bc 3B6B     		ldr	r3, [r7, #48]
 9141              		.syntax divided
 9142              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9143 00be 83F31088 		MSR primask, r3
 9144              	@ 0 "" 2
 9145              		.loc 2 415 1
 9146              		.thumb
 9147              		.syntax unified
 9148 00c2 C046     		nop
 9149              	.LBE959:
 9150              	.LBE958:
 9151              	.LBE953:
3404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the Rx ISR function pointer according to the data word length */
3406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 9152              		.loc 1 3406 19
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 231


 9153 00c4 FB68     		ldr	r3, [r7, #12]
 9154 00c6 9A68     		ldr	r2, [r3, #8]
 9155              		.loc 1 3406 6
 9156 00c8 8023     		movs	r3, #128
 9157 00ca 5B01     		lsls	r3, r3, #5
 9158 00cc 9A42     		cmp	r2, r3
 9159 00ce 07D1     		bne	.L362
 9160              		.loc 1 3406 69 discriminator 1
 9161 00d0 FB68     		ldr	r3, [r7, #12]
 9162 00d2 1B69     		ldr	r3, [r3, #16]
 9163              		.loc 1 3406 54 discriminator 1
 9164 00d4 002B     		cmp	r3, #0
 9165 00d6 03D1     		bne	.L362
3407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxISR = UART_RxISR_16BIT;
 9166              		.loc 1 3408 18
 9167 00d8 FB68     		ldr	r3, [r7, #12]
 9168 00da 224A     		ldr	r2, .L369+4
 9169 00dc 9A66     		str	r2, [r3, #104]
 9170 00de 02E0     		b	.L363
 9171              	.L362:
3409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
3411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxISR = UART_RxISR_8BIT;
 9172              		.loc 1 3412 18
 9173 00e0 FB68     		ldr	r3, [r7, #12]
 9174 00e2 214A     		ldr	r2, .L369+8
 9175 00e4 9A66     		str	r2, [r3, #104]
 9176              	.L363:
3413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
3416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
 9177              		.loc 1 3416 18
 9178 00e6 FB68     		ldr	r3, [r7, #12]
 9179 00e8 1B69     		ldr	r3, [r3, #16]
 9180              		.loc 1 3416 6
 9181 00ea 002B     		cmp	r3, #0
 9182 00ec 19D0     		beq	.L364
 9183              	.LBB960:
 9184              	.LBB961:
 9185              	.LBB962:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 9186              		.loc 2 386 3
 9187              		.syntax divided
 9188              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9189 00ee EFF31083 		MRS r3, primask
 9190              	@ 0 "" 2
 9191              		.thumb
 9192              		.syntax unified
 9193 00f2 FB61     		str	r3, [r7, #28]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9194              		.loc 2 387 9
 9195 00f4 FB69     		ldr	r3, [r7, #28]
 9196              	.LBE962:
 9197              	.LBE961:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 232


3417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 9198              		.loc 1 3418 5
 9199 00f6 7B63     		str	r3, [r7, #52]
 9200 00f8 0123     		movs	r3, #1
 9201 00fa 3B62     		str	r3, [r7, #32]
 9202              	.LBB963:
 9203              	.LBB964:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9204              		.loc 2 414 3
 9205 00fc 3B6A     		ldr	r3, [r7, #32]
 9206              		.syntax divided
 9207              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9208 00fe 83F31088 		MSR primask, r3
 9209              	@ 0 "" 2
 9210              		.loc 2 415 1
 9211              		.thumb
 9212              		.syntax unified
 9213 0102 C046     		nop
 9214              	.LBE964:
 9215              	.LBE963:
 9216              		.loc 1 3418 5
 9217 0104 FB68     		ldr	r3, [r7, #12]
 9218 0106 1B68     		ldr	r3, [r3]
 9219 0108 1A68     		ldr	r2, [r3]
 9220 010a FB68     		ldr	r3, [r7, #12]
 9221 010c 1B68     		ldr	r3, [r3]
 9222 010e 9021     		movs	r1, #144
 9223 0110 4900     		lsls	r1, r1, #1
 9224 0112 0A43     		orrs	r2, r1
 9225 0114 1A60     		str	r2, [r3]
 9226 0116 7B6B     		ldr	r3, [r7, #52]
 9227 0118 7B62     		str	r3, [r7, #36]
 9228              	.LBB965:
 9229              	.LBB966:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9230              		.loc 2 414 3
 9231 011a 7B6A     		ldr	r3, [r7, #36]
 9232              		.syntax divided
 9233              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9234 011c 83F31088 		MSR primask, r3
 9235              	@ 0 "" 2
 9236              		.loc 2 415 1
 9237              		.thumb
 9238              		.syntax unified
 9239 0120 18E0     		b	.L366
 9240              	.L364:
 9241              	.LBE966:
 9242              	.LBE965:
 9243              	.LBE960:
 9244              	.LBB967:
 9245              	.LBB968:
 9246              	.LBB969:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 9247              		.loc 2 386 3
 9248              		.syntax divided
 9249              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 233


 9250 0122 EFF31083 		MRS r3, primask
 9251              	@ 0 "" 2
 9252              		.thumb
 9253              		.syntax unified
 9254 0126 3B61     		str	r3, [r7, #16]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9255              		.loc 2 387 9
 9256 0128 3B69     		ldr	r3, [r7, #16]
 9257              	.LBE969:
 9258              	.LBE968:
3419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
3421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE);
 9259              		.loc 1 3422 5
 9260 012a BB63     		str	r3, [r7, #56]
 9261 012c 0123     		movs	r3, #1
 9262 012e 7B61     		str	r3, [r7, #20]
 9263              	.LBB970:
 9264              	.LBB971:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9265              		.loc 2 414 3
 9266 0130 7B69     		ldr	r3, [r7, #20]
 9267              		.syntax divided
 9268              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9269 0132 83F31088 		MSR primask, r3
 9270              	@ 0 "" 2
 9271              		.loc 2 415 1
 9272              		.thumb
 9273              		.syntax unified
 9274 0136 C046     		nop
 9275              	.LBE971:
 9276              	.LBE970:
 9277              		.loc 1 3422 5
 9278 0138 FB68     		ldr	r3, [r7, #12]
 9279 013a 1B68     		ldr	r3, [r3]
 9280 013c 1A68     		ldr	r2, [r3]
 9281 013e FB68     		ldr	r3, [r7, #12]
 9282 0140 1B68     		ldr	r3, [r3]
 9283 0142 2021     		movs	r1, #32
 9284 0144 0A43     		orrs	r2, r1
 9285 0146 1A60     		str	r2, [r3]
 9286 0148 BB6B     		ldr	r3, [r7, #56]
 9287 014a BB61     		str	r3, [r7, #24]
 9288              	.LBB972:
 9289              	.LBB973:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9290              		.loc 2 414 3
 9291 014c BB69     		ldr	r3, [r7, #24]
 9292              		.syntax divided
 9293              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9294 014e 83F31088 		MSR primask, r3
 9295              	@ 0 "" 2
 9296              		.loc 2 415 1
 9297              		.thumb
 9298              		.syntax unified
 9299 0152 C046     		nop
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 234


 9300              	.L366:
 9301              	.LBE973:
 9302              	.LBE972:
 9303              	.LBE967:
3423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 9304              		.loc 1 3424 10
 9305 0154 0023     		movs	r3, #0
3425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 9306              		.loc 1 3425 1
 9307 0156 1800     		movs	r0, r3
 9308 0158 BD46     		mov	sp, r7
 9309 015a 10B0     		add	sp, sp, #64
 9310              		@ sp needed
 9311 015c 80BD     		pop	{r7, pc}
 9312              	.L370:
 9313 015e C046     		.align	2
 9314              	.L369:
 9315 0160 FF010000 		.word	511
 9316 0164 00000000 		.word	UART_RxISR_16BIT
 9317 0168 00000000 		.word	UART_RxISR_8BIT
 9318              		.cfi_endproc
 9319              	.LFE87:
 9321              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 9322              		.align	1
 9323              		.global	UART_Start_Receive_DMA
 9324              		.syntax unified
 9325              		.code	16
 9326              		.thumb_func
 9328              	UART_Start_Receive_DMA:
 9329              	.LFB88:
3426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
3434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
3437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 9330              		.loc 1 3439 1
 9331              		.cfi_startproc
 9332              		@ args = 0, pretend = 0, frame = 64
 9333              		@ frame_needed = 1, uses_anonymous_args = 0
 9334 0000 80B5     		push	{r7, lr}
 9335              	.LCFI144:
 9336              		.cfi_def_cfa_offset 8
 9337              		.cfi_offset 7, -8
 9338              		.cfi_offset 14, -4
 9339 0002 90B0     		sub	sp, sp, #64
 9340              	.LCFI145:
 9341              		.cfi_def_cfa_offset 72
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 235


 9342 0004 00AF     		add	r7, sp, #0
 9343              	.LCFI146:
 9344              		.cfi_def_cfa_register 7
 9345 0006 F860     		str	r0, [r7, #12]
 9346 0008 B960     		str	r1, [r7, #8]
 9347 000a BB1D     		adds	r3, r7, #6
 9348 000c 1A80     		strh	r2, [r3]
3440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 9349              		.loc 1 3440 21
 9350 000e FB68     		ldr	r3, [r7, #12]
 9351 0010 BA68     		ldr	r2, [r7, #8]
 9352 0012 5A65     		str	r2, [r3, #84]
3441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferSize = Size;
 9353              		.loc 1 3441 21
 9354 0014 FB68     		ldr	r3, [r7, #12]
 9355 0016 BA1D     		adds	r2, r7, #6
 9356 0018 5821     		movs	r1, #88
 9357 001a 1288     		ldrh	r2, [r2]
 9358 001c 5A52     		strh	r2, [r3, r1]
3442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 9359              		.loc 1 3443 20
 9360 001e FB68     		ldr	r3, [r7, #12]
 9361 0020 8422     		movs	r2, #132
 9362 0022 0021     		movs	r1, #0
 9363 0024 9950     		str	r1, [r3, r2]
3444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 9364              		.loc 1 3444 18
 9365 0026 FB68     		ldr	r3, [r7, #12]
 9366 0028 8022     		movs	r2, #128
 9367 002a 2221     		movs	r1, #34
 9368 002c 9950     		str	r1, [r3, r2]
3445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 9369              		.loc 1 3446 12
 9370 002e FB68     		ldr	r3, [r7, #12]
 9371 0030 5B6F     		ldr	r3, [r3, #116]
 9372              		.loc 1 3446 6
 9373 0032 002B     		cmp	r3, #0
 9374 0034 28D0     		beq	.L372
3447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
3449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 9375              		.loc 1 3449 10
 9376 0036 FB68     		ldr	r3, [r7, #12]
 9377 0038 5B6F     		ldr	r3, [r3, #116]
 9378              		.loc 1 3449 37
 9379 003a 3E4A     		ldr	r2, .L378
 9380 003c 9A62     		str	r2, [r3, #40]
3450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
3452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 9381              		.loc 1 3452 10
 9382 003e FB68     		ldr	r3, [r7, #12]
 9383 0040 5B6F     		ldr	r3, [r3, #116]
 9384              		.loc 1 3452 41
 9385 0042 3D4A     		ldr	r2, .L378+4
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 236


 9386 0044 DA62     		str	r2, [r3, #44]
3453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA error callback */
3455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 9387              		.loc 1 3455 10
 9388 0046 FB68     		ldr	r3, [r7, #12]
 9389 0048 5B6F     		ldr	r3, [r3, #116]
 9390              		.loc 1 3455 38
 9391 004a 3C4A     		ldr	r2, .L378+8
 9392 004c 1A63     		str	r2, [r3, #48]
3456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA abort callback */
3458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 9393              		.loc 1 3458 10
 9394 004e FB68     		ldr	r3, [r7, #12]
 9395 0050 5B6F     		ldr	r3, [r3, #116]
 9396              		.loc 1 3458 38
 9397 0052 0022     		movs	r2, #0
 9398 0054 5A63     		str	r2, [r3, #52]
3459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA channel */
3461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPt
 9399              		.loc 1 3461 9
 9400 0056 FB68     		ldr	r3, [r7, #12]
 9401 0058 586F     		ldr	r0, [r3, #116]
 9402              		.loc 1 3461 57
 9403 005a FB68     		ldr	r3, [r7, #12]
 9404 005c 1B68     		ldr	r3, [r3]
 9405              		.loc 1 3461 51
 9406 005e 2433     		adds	r3, r3, #36
 9407              		.loc 1 3461 9
 9408 0060 1900     		movs	r1, r3
 9409              		.loc 1 3461 89
 9410 0062 FB68     		ldr	r3, [r7, #12]
 9411 0064 5B6D     		ldr	r3, [r3, #84]
 9412              		.loc 1 3461 9
 9413 0066 1A00     		movs	r2, r3
 9414 0068 BB1D     		adds	r3, r7, #6
 9415 006a 1B88     		ldrh	r3, [r3]
 9416 006c FFF7FEFF 		bl	HAL_DMA_Start_IT
 9417 0070 031E     		subs	r3, r0, #0
 9418              		.loc 1 3461 8
 9419 0072 09D0     		beq	.L372
3462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set error code to DMA */
3464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode = HAL_UART_ERROR_DMA;
 9420              		.loc 1 3464 24
 9421 0074 FB68     		ldr	r3, [r7, #12]
 9422 0076 8422     		movs	r2, #132
 9423 0078 1021     		movs	r1, #16
 9424 007a 9950     		str	r1, [r3, r2]
3465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->RxState to ready */
3467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 9425              		.loc 1 3467 22
 9426 007c FB68     		ldr	r3, [r7, #12]
 9427 007e 8022     		movs	r2, #128
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 237


 9428 0080 2021     		movs	r1, #32
 9429 0082 9950     		str	r1, [r3, r2]
3468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 9430              		.loc 1 3469 14
 9431 0084 0123     		movs	r3, #1
 9432 0086 50E0     		b	.L373
 9433              	.L372:
3470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
 9434              		.loc 1 3474 18
 9435 0088 FB68     		ldr	r3, [r7, #12]
 9436 008a 1B69     		ldr	r3, [r3, #16]
 9437              		.loc 1 3474 6
 9438 008c 002B     		cmp	r3, #0
 9439 008e 19D0     		beq	.L374
 9440              	.LBB974:
 9441              	.LBB975:
 9442              	.LBB976:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 9443              		.loc 2 386 3
 9444              		.syntax divided
 9445              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9446 0090 EFF31083 		MRS r3, primask
 9447              	@ 0 "" 2
 9448              		.thumb
 9449              		.syntax unified
 9450 0094 BB62     		str	r3, [r7, #40]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9451              		.loc 2 387 9
 9452 0096 BB6A     		ldr	r3, [r7, #40]
 9453              	.LBE976:
 9454              	.LBE975:
3475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 9455              		.loc 1 3476 5
 9456 0098 FB63     		str	r3, [r7, #60]
 9457 009a 0123     		movs	r3, #1
 9458 009c FB62     		str	r3, [r7, #44]
 9459              	.LBB977:
 9460              	.LBB978:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9461              		.loc 2 414 3
 9462 009e FB6A     		ldr	r3, [r7, #44]
 9463              		.syntax divided
 9464              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9465 00a0 83F31088 		MSR primask, r3
 9466              	@ 0 "" 2
 9467              		.loc 2 415 1
 9468              		.thumb
 9469              		.syntax unified
 9470 00a4 C046     		nop
 9471              	.LBE978:
 9472              	.LBE977:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 238


 9473              		.loc 1 3476 5
 9474 00a6 FB68     		ldr	r3, [r7, #12]
 9475 00a8 1B68     		ldr	r3, [r3]
 9476 00aa 1A68     		ldr	r2, [r3]
 9477 00ac FB68     		ldr	r3, [r7, #12]
 9478 00ae 1B68     		ldr	r3, [r3]
 9479 00b0 8021     		movs	r1, #128
 9480 00b2 4900     		lsls	r1, r1, #1
 9481 00b4 0A43     		orrs	r2, r1
 9482 00b6 1A60     		str	r2, [r3]
 9483 00b8 FB6B     		ldr	r3, [r7, #60]
 9484 00ba 3B63     		str	r3, [r7, #48]
 9485              	.LBB979:
 9486              	.LBB980:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9487              		.loc 2 414 3
 9488 00bc 3B6B     		ldr	r3, [r7, #48]
 9489              		.syntax divided
 9490              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9491 00be 83F31088 		MSR primask, r3
 9492              	@ 0 "" 2
 9493              		.loc 2 415 1
 9494              		.thumb
 9495              		.syntax unified
 9496 00c2 C046     		nop
 9497              	.L374:
 9498              	.LBE980:
 9499              	.LBE979:
 9500              	.LBE974:
 9501              	.LBB981:
 9502              	.LBB982:
 9503              	.LBB983:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 9504              		.loc 2 386 3
 9505              		.syntax divided
 9506              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9507 00c4 EFF31083 		MRS r3, primask
 9508              	@ 0 "" 2
 9509              		.thumb
 9510              		.syntax unified
 9511 00c8 3B61     		str	r3, [r7, #16]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9512              		.loc 2 387 9
 9513 00ca 3B69     		ldr	r3, [r7, #16]
 9514              	.LBE983:
 9515              	.LBE982:
3477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 9516              		.loc 1 3480 3
 9517 00cc BB63     		str	r3, [r7, #56]
 9518 00ce 0123     		movs	r3, #1
 9519 00d0 7B61     		str	r3, [r7, #20]
 9520              	.LBB984:
 9521              	.LBB985:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 239


 9522              		.loc 2 414 3
 9523 00d2 7B69     		ldr	r3, [r7, #20]
 9524              		.syntax divided
 9525              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9526 00d4 83F31088 		MSR primask, r3
 9527              	@ 0 "" 2
 9528              		.loc 2 415 1
 9529              		.thumb
 9530              		.syntax unified
 9531 00d8 C046     		nop
 9532              	.LBE985:
 9533              	.LBE984:
 9534              		.loc 1 3480 3
 9535 00da FB68     		ldr	r3, [r7, #12]
 9536 00dc 1B68     		ldr	r3, [r3]
 9537 00de 9A68     		ldr	r2, [r3, #8]
 9538 00e0 FB68     		ldr	r3, [r7, #12]
 9539 00e2 1B68     		ldr	r3, [r3]
 9540 00e4 0121     		movs	r1, #1
 9541 00e6 0A43     		orrs	r2, r1
 9542 00e8 9A60     		str	r2, [r3, #8]
 9543 00ea BB6B     		ldr	r3, [r7, #56]
 9544 00ec BB61     		str	r3, [r7, #24]
 9545              	.LBB986:
 9546              	.LBB987:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9547              		.loc 2 414 3
 9548 00ee BB69     		ldr	r3, [r7, #24]
 9549              		.syntax divided
 9550              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9551 00f0 83F31088 		MSR primask, r3
 9552              	@ 0 "" 2
 9553              		.loc 2 415 1
 9554              		.thumb
 9555              		.syntax unified
 9556 00f4 C046     		nop
 9557              	.LBE987:
 9558              	.LBE986:
 9559              	.LBE981:
 9560              	.LBB988:
 9561              	.LBB989:
 9562              	.LBB990:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 9563              		.loc 2 386 3
 9564              		.syntax divided
 9565              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9566 00f6 EFF31083 		MRS r3, primask
 9567              	@ 0 "" 2
 9568              		.thumb
 9569              		.syntax unified
 9570 00fa FB61     		str	r3, [r7, #28]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9571              		.loc 2 387 9
 9572 00fc FB69     		ldr	r3, [r7, #28]
 9573              	.LBE990:
 9574              	.LBE989:
3481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 240


3482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   in the UART CR3 register */
3484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 9575              		.loc 1 3484 3
 9576 00fe 7B63     		str	r3, [r7, #52]
 9577 0100 0123     		movs	r3, #1
 9578 0102 3B62     		str	r3, [r7, #32]
 9579              	.LBB991:
 9580              	.LBB992:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9581              		.loc 2 414 3
 9582 0104 3B6A     		ldr	r3, [r7, #32]
 9583              		.syntax divided
 9584              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9585 0106 83F31088 		MSR primask, r3
 9586              	@ 0 "" 2
 9587              		.loc 2 415 1
 9588              		.thumb
 9589              		.syntax unified
 9590 010a C046     		nop
 9591              	.LBE992:
 9592              	.LBE991:
 9593              		.loc 1 3484 3
 9594 010c FB68     		ldr	r3, [r7, #12]
 9595 010e 1B68     		ldr	r3, [r3]
 9596 0110 9A68     		ldr	r2, [r3, #8]
 9597 0112 FB68     		ldr	r3, [r7, #12]
 9598 0114 1B68     		ldr	r3, [r3]
 9599 0116 4021     		movs	r1, #64
 9600 0118 0A43     		orrs	r2, r1
 9601 011a 9A60     		str	r2, [r3, #8]
 9602 011c 7B6B     		ldr	r3, [r7, #52]
 9603 011e 7B62     		str	r3, [r7, #36]
 9604              	.LBB993:
 9605              	.LBB994:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9606              		.loc 2 414 3
 9607 0120 7B6A     		ldr	r3, [r7, #36]
 9608              		.syntax divided
 9609              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9610 0122 83F31088 		MSR primask, r3
 9611              	@ 0 "" 2
 9612              		.loc 2 415 1
 9613              		.thumb
 9614              		.syntax unified
 9615 0126 C046     		nop
 9616              	.LBE994:
 9617              	.LBE993:
 9618              	.LBE988:
3485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 9619              		.loc 1 3486 10
 9620 0128 0023     		movs	r3, #0
 9621              	.L373:
3487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 9622              		.loc 1 3487 1
 9623 012a 1800     		movs	r0, r3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 241


 9624 012c BD46     		mov	sp, r7
 9625 012e 10B0     		add	sp, sp, #64
 9626              		@ sp needed
 9627 0130 80BD     		pop	{r7, pc}
 9628              	.L379:
 9629 0132 C046     		.align	2
 9630              	.L378:
 9631 0134 00000000 		.word	UART_DMAReceiveCplt
 9632 0138 00000000 		.word	UART_DMARxHalfCplt
 9633 013c 00000000 		.word	UART_DMAError
 9634              		.cfi_endproc
 9635              	.LFE88:
 9637              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 9638              		.align	1
 9639              		.syntax unified
 9640              		.code	16
 9641              		.thumb_func
 9643              	UART_EndTxTransfer:
 9644              	.LFB89:
3488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
3493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 9645              		.loc 1 3496 1
 9646              		.cfi_startproc
 9647              		@ args = 0, pretend = 0, frame = 24
 9648              		@ frame_needed = 1, uses_anonymous_args = 0
 9649 0000 80B5     		push	{r7, lr}
 9650              	.LCFI147:
 9651              		.cfi_def_cfa_offset 8
 9652              		.cfi_offset 7, -8
 9653              		.cfi_offset 14, -4
 9654 0002 86B0     		sub	sp, sp, #24
 9655              	.LCFI148:
 9656              		.cfi_def_cfa_offset 32
 9657 0004 00AF     		add	r7, sp, #0
 9658              	.LCFI149:
 9659              		.cfi_def_cfa_register 7
 9660 0006 7860     		str	r0, [r7, #4]
 9661              	.LBB995:
 9662              	.LBB996:
 9663              	.LBB997:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 9664              		.loc 2 386 3
 9665              		.syntax divided
 9666              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9667 0008 EFF31083 		MRS r3, primask
 9668              	@ 0 "" 2
 9669              		.thumb
 9670              		.syntax unified
 9671 000c BB60     		str	r3, [r7, #8]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 242


 9672              		.loc 2 387 9
 9673 000e BB68     		ldr	r3, [r7, #8]
 9674              	.LBE997:
 9675              	.LBE996:
3497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 9676              		.loc 1 3498 3
 9677 0010 7B61     		str	r3, [r7, #20]
 9678 0012 0123     		movs	r3, #1
 9679 0014 FB60     		str	r3, [r7, #12]
 9680              	.LBB998:
 9681              	.LBB999:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9682              		.loc 2 414 3
 9683 0016 FB68     		ldr	r3, [r7, #12]
 9684              		.syntax divided
 9685              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9686 0018 83F31088 		MSR primask, r3
 9687              	@ 0 "" 2
 9688              		.loc 2 415 1
 9689              		.thumb
 9690              		.syntax unified
 9691 001c C046     		nop
 9692              	.LBE999:
 9693              	.LBE998:
 9694              		.loc 1 3498 3
 9695 001e 7B68     		ldr	r3, [r7, #4]
 9696 0020 1B68     		ldr	r3, [r3]
 9697 0022 1A68     		ldr	r2, [r3]
 9698 0024 7B68     		ldr	r3, [r7, #4]
 9699 0026 1B68     		ldr	r3, [r3]
 9700 0028 C021     		movs	r1, #192
 9701 002a 8A43     		bics	r2, r1
 9702 002c 1A60     		str	r2, [r3]
 9703 002e 7B69     		ldr	r3, [r7, #20]
 9704 0030 3B61     		str	r3, [r7, #16]
 9705              	.LBB1000:
 9706              	.LBB1001:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9707              		.loc 2 414 3
 9708 0032 3B69     		ldr	r3, [r7, #16]
 9709              		.syntax divided
 9710              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9711 0034 83F31088 		MSR primask, r3
 9712              	@ 0 "" 2
 9713              		.loc 2 415 1
 9714              		.thumb
 9715              		.syntax unified
 9716 0038 C046     		nop
 9717              	.LBE1001:
 9718              	.LBE1000:
 9719              	.LBE995:
3499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 9720              		.loc 1 3501 17
 9721 003a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 243


 9722 003c 2022     		movs	r2, #32
 9723 003e DA67     		str	r2, [r3, #124]
3502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 9724              		.loc 1 3502 1
 9725 0040 C046     		nop
 9726 0042 BD46     		mov	sp, r7
 9727 0044 06B0     		add	sp, sp, #24
 9728              		@ sp needed
 9729 0046 80BD     		pop	{r7, pc}
 9730              		.cfi_endproc
 9731              	.LFE89:
 9733              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 9734              		.align	1
 9735              		.syntax unified
 9736              		.code	16
 9737              		.thumb_func
 9739              	UART_EndRxTransfer:
 9740              	.LFB90:
3503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
3508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 9741              		.loc 1 3511 1
 9742              		.cfi_startproc
 9743              		@ args = 0, pretend = 0, frame = 56
 9744              		@ frame_needed = 1, uses_anonymous_args = 0
 9745 0000 80B5     		push	{r7, lr}
 9746              	.LCFI150:
 9747              		.cfi_def_cfa_offset 8
 9748              		.cfi_offset 7, -8
 9749              		.cfi_offset 14, -4
 9750 0002 8EB0     		sub	sp, sp, #56
 9751              	.LCFI151:
 9752              		.cfi_def_cfa_offset 64
 9753 0004 00AF     		add	r7, sp, #0
 9754              	.LCFI152:
 9755              		.cfi_def_cfa_register 7
 9756 0006 7860     		str	r0, [r7, #4]
 9757              	.LBB1002:
 9758              	.LBB1003:
 9759              	.LBB1004:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 9760              		.loc 2 386 3
 9761              		.syntax divided
 9762              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9763 0008 EFF31083 		MRS r3, primask
 9764              	@ 0 "" 2
 9765              		.thumb
 9766              		.syntax unified
 9767 000c 7B61     		str	r3, [r7, #20]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9768              		.loc 2 387 9
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 244


 9769 000e 7B69     		ldr	r3, [r7, #20]
 9770              	.LBE1004:
 9771              	.LBE1003:
3512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 9772              		.loc 1 3513 3
 9773 0010 7B63     		str	r3, [r7, #52]
 9774 0012 0123     		movs	r3, #1
 9775 0014 BB61     		str	r3, [r7, #24]
 9776              	.LBB1005:
 9777              	.LBB1006:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9778              		.loc 2 414 3
 9779 0016 BB69     		ldr	r3, [r7, #24]
 9780              		.syntax divided
 9781              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9782 0018 83F31088 		MSR primask, r3
 9783              	@ 0 "" 2
 9784              		.loc 2 415 1
 9785              		.thumb
 9786              		.syntax unified
 9787 001c C046     		nop
 9788              	.LBE1006:
 9789              	.LBE1005:
 9790              		.loc 1 3513 3
 9791 001e 7B68     		ldr	r3, [r7, #4]
 9792 0020 1B68     		ldr	r3, [r3]
 9793 0022 1A68     		ldr	r2, [r3]
 9794 0024 7B68     		ldr	r3, [r7, #4]
 9795 0026 1B68     		ldr	r3, [r3]
 9796 0028 2649     		ldr	r1, .L387
 9797 002a 0A40     		ands	r2, r1
 9798 002c 1A60     		str	r2, [r3]
 9799 002e 7B6B     		ldr	r3, [r7, #52]
 9800 0030 FB61     		str	r3, [r7, #28]
 9801              	.LBB1007:
 9802              	.LBB1008:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9803              		.loc 2 414 3
 9804 0032 FB69     		ldr	r3, [r7, #28]
 9805              		.syntax divided
 9806              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9807 0034 83F31088 		MSR primask, r3
 9808              	@ 0 "" 2
 9809              		.loc 2 415 1
 9810              		.thumb
 9811              		.syntax unified
 9812 0038 C046     		nop
 9813              	.LBE1008:
 9814              	.LBE1007:
 9815              	.LBE1002:
 9816              	.LBB1009:
 9817              	.LBB1010:
 9818              	.LBB1011:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 9819              		.loc 2 386 3
 9820              		.syntax divided
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 245


 9821              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9822 003a EFF31083 		MRS r3, primask
 9823              	@ 0 "" 2
 9824              		.thumb
 9825              		.syntax unified
 9826 003e 3B62     		str	r3, [r7, #32]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9827              		.loc 2 387 9
 9828 0040 3B6A     		ldr	r3, [r7, #32]
 9829              	.LBE1011:
 9830              	.LBE1010:
3514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 9831              		.loc 1 3514 3
 9832 0042 3B63     		str	r3, [r7, #48]
 9833 0044 0123     		movs	r3, #1
 9834 0046 7B62     		str	r3, [r7, #36]
 9835              	.LBB1012:
 9836              	.LBB1013:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9837              		.loc 2 414 3
 9838 0048 7B6A     		ldr	r3, [r7, #36]
 9839              		.syntax divided
 9840              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9841 004a 83F31088 		MSR primask, r3
 9842              	@ 0 "" 2
 9843              		.loc 2 415 1
 9844              		.thumb
 9845              		.syntax unified
 9846 004e C046     		nop
 9847              	.LBE1013:
 9848              	.LBE1012:
 9849              		.loc 1 3514 3
 9850 0050 7B68     		ldr	r3, [r7, #4]
 9851 0052 1B68     		ldr	r3, [r3]
 9852 0054 9A68     		ldr	r2, [r3, #8]
 9853 0056 7B68     		ldr	r3, [r7, #4]
 9854 0058 1B68     		ldr	r3, [r3]
 9855 005a 0121     		movs	r1, #1
 9856 005c 8A43     		bics	r2, r1
 9857 005e 9A60     		str	r2, [r3, #8]
 9858 0060 3B6B     		ldr	r3, [r7, #48]
 9859 0062 BB62     		str	r3, [r7, #40]
 9860              	.LBB1014:
 9861              	.LBB1015:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9862              		.loc 2 414 3
 9863 0064 BB6A     		ldr	r3, [r7, #40]
 9864              		.syntax divided
 9865              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9866 0066 83F31088 		MSR primask, r3
 9867              	@ 0 "" 2
 9868              		.loc 2 415 1
 9869              		.thumb
 9870              		.syntax unified
 9871 006a C046     		nop
 9872              	.LBE1015:
 9873              	.LBE1014:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 246


 9874              	.LBE1009:
3515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 9875              		.loc 1 3517 12
 9876 006c 7B68     		ldr	r3, [r7, #4]
 9877 006e 1B6E     		ldr	r3, [r3, #96]
 9878              		.loc 1 3517 6
 9879 0070 012B     		cmp	r3, #1
 9880 0072 18D1     		bne	.L385
 9881              	.LBB1016:
 9882              	.LBB1017:
 9883              	.LBB1018:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 9884              		.loc 2 386 3
 9885              		.syntax divided
 9886              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9887 0074 EFF31083 		MRS r3, primask
 9888              	@ 0 "" 2
 9889              		.thumb
 9890              		.syntax unified
 9891 0078 BB60     		str	r3, [r7, #8]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9892              		.loc 2 387 9
 9893 007a BB68     		ldr	r3, [r7, #8]
 9894              	.LBE1018:
 9895              	.LBE1017:
3518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 9896              		.loc 1 3519 5
 9897 007c FB62     		str	r3, [r7, #44]
 9898 007e 0123     		movs	r3, #1
 9899 0080 FB60     		str	r3, [r7, #12]
 9900              	.LBB1019:
 9901              	.LBB1020:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9902              		.loc 2 414 3
 9903 0082 FB68     		ldr	r3, [r7, #12]
 9904              		.syntax divided
 9905              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9906 0084 83F31088 		MSR primask, r3
 9907              	@ 0 "" 2
 9908              		.loc 2 415 1
 9909              		.thumb
 9910              		.syntax unified
 9911 0088 C046     		nop
 9912              	.LBE1020:
 9913              	.LBE1019:
 9914              		.loc 1 3519 5
 9915 008a 7B68     		ldr	r3, [r7, #4]
 9916 008c 1B68     		ldr	r3, [r3]
 9917 008e 1A68     		ldr	r2, [r3]
 9918 0090 7B68     		ldr	r3, [r7, #4]
 9919 0092 1B68     		ldr	r3, [r3]
 9920 0094 1021     		movs	r1, #16
 9921 0096 8A43     		bics	r2, r1
 9922 0098 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 247


 9923 009a FB6A     		ldr	r3, [r7, #44]
 9924 009c 3B61     		str	r3, [r7, #16]
 9925              	.LBB1021:
 9926              	.LBB1022:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9927              		.loc 2 414 3
 9928 009e 3B69     		ldr	r3, [r7, #16]
 9929              		.syntax divided
 9930              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9931 00a0 83F31088 		MSR primask, r3
 9932              	@ 0 "" 2
 9933              		.loc 2 415 1
 9934              		.thumb
 9935              		.syntax unified
 9936 00a4 C046     		nop
 9937              	.L385:
 9938              	.LBE1022:
 9939              	.LBE1021:
 9940              	.LBE1016:
3520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 9941              		.loc 1 3523 18
 9942 00a6 7B68     		ldr	r3, [r7, #4]
 9943 00a8 8022     		movs	r2, #128
 9944 00aa 2021     		movs	r1, #32
 9945 00ac 9950     		str	r1, [r3, r2]
3524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9946              		.loc 1 3524 24
 9947 00ae 7B68     		ldr	r3, [r7, #4]
 9948 00b0 0022     		movs	r2, #0
 9949 00b2 1A66     		str	r2, [r3, #96]
3525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxISR = NULL;
 9950              		.loc 1 3527 16
 9951 00b4 7B68     		ldr	r3, [r7, #4]
 9952 00b6 0022     		movs	r2, #0
 9953 00b8 9A66     		str	r2, [r3, #104]
3528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 9954              		.loc 1 3528 1
 9955 00ba C046     		nop
 9956 00bc BD46     		mov	sp, r7
 9957 00be 0EB0     		add	sp, sp, #56
 9958              		@ sp needed
 9959 00c0 80BD     		pop	{r7, pc}
 9960              	.L388:
 9961 00c2 C046     		.align	2
 9962              	.L387:
 9963 00c4 DFFEFFFF 		.word	-289
 9964              		.cfi_endproc
 9965              	.LFE90:
 9967              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 9968              		.align	1
 9969              		.syntax unified
 9970              		.code	16
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 248


 9971              		.thumb_func
 9973              	UART_DMATransmitCplt:
 9974              	.LFB91:
3529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 9975              		.loc 1 3537 1
 9976              		.cfi_startproc
 9977              		@ args = 0, pretend = 0, frame = 48
 9978              		@ frame_needed = 1, uses_anonymous_args = 0
 9979 0000 80B5     		push	{r7, lr}
 9980              	.LCFI153:
 9981              		.cfi_def_cfa_offset 8
 9982              		.cfi_offset 7, -8
 9983              		.cfi_offset 14, -4
 9984 0002 8CB0     		sub	sp, sp, #48
 9985              	.LCFI154:
 9986              		.cfi_def_cfa_offset 56
 9987 0004 00AF     		add	r7, sp, #0
 9988              	.LCFI155:
 9989              		.cfi_def_cfa_register 7
 9990 0006 7860     		str	r0, [r7, #4]
3538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 9991              		.loc 1 3538 23
 9992 0008 7B68     		ldr	r3, [r7, #4]
 9993 000a 5B6A     		ldr	r3, [r3, #36]
 9994 000c FB62     		str	r3, [r7, #44]
3539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
3541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
 9995              		.loc 1 3541 17
 9996 000e 7B68     		ldr	r3, [r7, #4]
 9997 0010 9B69     		ldr	r3, [r3, #24]
 9998              		.loc 1 3541 6
 9999 0012 202B     		cmp	r3, #32
 10000 0014 35D0     		beq	.L390
3542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
 10001              		.loc 1 3543 24
 10002 0016 FB6A     		ldr	r3, [r7, #44]
 10003 0018 5222     		movs	r2, #82
 10004 001a 0021     		movs	r1, #0
 10005 001c 9952     		strh	r1, [r3, r2]
 10006              	.LBB1023:
 10007              	.LBB1024:
 10008              	.LBB1025:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 10009              		.loc 2 386 3
 10010              		.syntax divided
 10011              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10012 001e EFF31083 		MRS r3, primask
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 249


 10013              	@ 0 "" 2
 10014              		.thumb
 10015              		.syntax unified
 10016 0022 FB60     		str	r3, [r7, #12]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10017              		.loc 2 387 9
 10018 0024 FB68     		ldr	r3, [r7, #12]
 10019              	.LBE1025:
 10020              	.LBE1024:
3544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
3547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 10021              		.loc 1 3547 5
 10022 0026 BB62     		str	r3, [r7, #40]
 10023 0028 0123     		movs	r3, #1
 10024 002a 3B61     		str	r3, [r7, #16]
 10025              	.LBB1026:
 10026              	.LBB1027:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10027              		.loc 2 414 3
 10028 002c 3B69     		ldr	r3, [r7, #16]
 10029              		.syntax divided
 10030              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10031 002e 83F31088 		MSR primask, r3
 10032              	@ 0 "" 2
 10033              		.loc 2 415 1
 10034              		.thumb
 10035              		.syntax unified
 10036 0032 C046     		nop
 10037              	.LBE1027:
 10038              	.LBE1026:
 10039              		.loc 1 3547 5
 10040 0034 FB6A     		ldr	r3, [r7, #44]
 10041 0036 1B68     		ldr	r3, [r3]
 10042 0038 9A68     		ldr	r2, [r3, #8]
 10043 003a FB6A     		ldr	r3, [r7, #44]
 10044 003c 1B68     		ldr	r3, [r3]
 10045 003e 8021     		movs	r1, #128
 10046 0040 8A43     		bics	r2, r1
 10047 0042 9A60     		str	r2, [r3, #8]
 10048 0044 BB6A     		ldr	r3, [r7, #40]
 10049 0046 7B61     		str	r3, [r7, #20]
 10050              	.LBB1028:
 10051              	.LBB1029:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10052              		.loc 2 414 3
 10053 0048 7B69     		ldr	r3, [r7, #20]
 10054              		.syntax divided
 10055              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10056 004a 83F31088 		MSR primask, r3
 10057              	@ 0 "" 2
 10058              		.loc 2 415 1
 10059              		.thumb
 10060              		.syntax unified
 10061 004e C046     		nop
 10062              	.LBE1029:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 250


 10063              	.LBE1028:
 10064              	.LBE1023:
 10065              	.LBB1030:
 10066              	.LBB1031:
 10067              	.LBB1032:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 10068              		.loc 2 386 3
 10069              		.syntax divided
 10070              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10071 0050 EFF31083 		MRS r3, primask
 10072              	@ 0 "" 2
 10073              		.thumb
 10074              		.syntax unified
 10075 0054 BB61     		str	r3, [r7, #24]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10076              		.loc 2 387 9
 10077 0056 BB69     		ldr	r3, [r7, #24]
 10078              	.LBE1032:
 10079              	.LBE1031:
3548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 10080              		.loc 1 3550 5
 10081 0058 7B62     		str	r3, [r7, #36]
 10082 005a 0123     		movs	r3, #1
 10083 005c FB61     		str	r3, [r7, #28]
 10084              	.LBB1033:
 10085              	.LBB1034:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10086              		.loc 2 414 3
 10087 005e FB69     		ldr	r3, [r7, #28]
 10088              		.syntax divided
 10089              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10090 0060 83F31088 		MSR primask, r3
 10091              	@ 0 "" 2
 10092              		.loc 2 415 1
 10093              		.thumb
 10094              		.syntax unified
 10095 0064 C046     		nop
 10096              	.LBE1034:
 10097              	.LBE1033:
 10098              		.loc 1 3550 5
 10099 0066 FB6A     		ldr	r3, [r7, #44]
 10100 0068 1B68     		ldr	r3, [r3]
 10101 006a 1A68     		ldr	r2, [r3]
 10102 006c FB6A     		ldr	r3, [r7, #44]
 10103 006e 1B68     		ldr	r3, [r3]
 10104 0070 4021     		movs	r1, #64
 10105 0072 0A43     		orrs	r2, r1
 10106 0074 1A60     		str	r2, [r3]
 10107 0076 7B6A     		ldr	r3, [r7, #36]
 10108 0078 3B62     		str	r3, [r7, #32]
 10109              	.LBB1035:
 10110              	.LBB1036:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10111              		.loc 2 414 3
 10112 007a 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 251


 10113              		.syntax divided
 10114              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10115 007c 83F31088 		MSR primask, r3
 10116              	@ 0 "" 2
 10117              		.loc 2 415 1
 10118              		.thumb
 10119              		.syntax unified
 10120 0080 04E0     		b	.L393
 10121              	.L390:
 10122              	.LBE1036:
 10123              	.LBE1035:
 10124              	.LBE1030:
3551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Circular mode */
3553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
3554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
 10125              		.loc 1 3560 5
 10126 0082 FB6A     		ldr	r3, [r7, #44]
 10127 0084 1800     		movs	r0, r3
 10128 0086 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
3561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 10129              		.loc 1 3563 1
 10130 008a C046     		nop
 10131              	.L393:
 10132 008c C046     		nop
 10133 008e BD46     		mov	sp, r7
 10134 0090 0CB0     		add	sp, sp, #48
 10135              		@ sp needed
 10136 0092 80BD     		pop	{r7, pc}
 10137              		.cfi_endproc
 10138              	.LFE91:
 10140              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 10141              		.align	1
 10142              		.syntax unified
 10143              		.code	16
 10144              		.thumb_func
 10146              	UART_DMATxHalfCplt:
 10147              	.LFB92:
3564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 10148              		.loc 1 3571 1
 10149              		.cfi_startproc
 10150              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 252


 10151              		@ frame_needed = 1, uses_anonymous_args = 0
 10152 0000 80B5     		push	{r7, lr}
 10153              	.LCFI156:
 10154              		.cfi_def_cfa_offset 8
 10155              		.cfi_offset 7, -8
 10156              		.cfi_offset 14, -4
 10157 0002 84B0     		sub	sp, sp, #16
 10158              	.LCFI157:
 10159              		.cfi_def_cfa_offset 24
 10160 0004 00AF     		add	r7, sp, #0
 10161              	.LCFI158:
 10162              		.cfi_def_cfa_register 7
 10163 0006 7860     		str	r0, [r7, #4]
3572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10164              		.loc 1 3572 23
 10165 0008 7B68     		ldr	r3, [r7, #4]
 10166 000a 5B6A     		ldr	r3, [r3, #36]
 10167 000c FB60     		str	r3, [r7, #12]
3573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 10168              		.loc 1 3579 3
 10169 000e FB68     		ldr	r3, [r7, #12]
 10170 0010 1800     		movs	r0, r3
 10171 0012 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 10172              		.loc 1 3581 1
 10173 0016 C046     		nop
 10174 0018 BD46     		mov	sp, r7
 10175 001a 04B0     		add	sp, sp, #16
 10176              		@ sp needed
 10177 001c 80BD     		pop	{r7, pc}
 10178              		.cfi_endproc
 10179              	.LFE92:
 10181              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 10182              		.align	1
 10183              		.syntax unified
 10184              		.code	16
 10185              		.thumb_func
 10187              	UART_DMAReceiveCplt:
 10188              	.LFB93:
3582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 10189              		.loc 1 3589 1
 10190              		.cfi_startproc
 10191              		@ args = 0, pretend = 0, frame = 80
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 253


 10192              		@ frame_needed = 1, uses_anonymous_args = 0
 10193 0000 80B5     		push	{r7, lr}
 10194              	.LCFI159:
 10195              		.cfi_def_cfa_offset 8
 10196              		.cfi_offset 7, -8
 10197              		.cfi_offset 14, -4
 10198 0002 94B0     		sub	sp, sp, #80
 10199              	.LCFI160:
 10200              		.cfi_def_cfa_offset 88
 10201 0004 00AF     		add	r7, sp, #0
 10202              	.LCFI161:
 10203              		.cfi_def_cfa_register 7
 10204 0006 7860     		str	r0, [r7, #4]
3590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10205              		.loc 1 3590 23
 10206 0008 7B68     		ldr	r3, [r7, #4]
 10207 000a 5B6A     		ldr	r3, [r3, #36]
 10208 000c FB64     		str	r3, [r7, #76]
3591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
3593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
 10209              		.loc 1 3593 17
 10210 000e 7B68     		ldr	r3, [r7, #4]
 10211 0010 9B69     		ldr	r3, [r3, #24]
 10212              		.loc 1 3593 6
 10213 0012 202B     		cmp	r3, #32
 10214 0014 6FD0     		beq	.L396
3594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 10215              		.loc 1 3595 24
 10216 0016 FB6C     		ldr	r3, [r7, #76]
 10217 0018 5A22     		movs	r2, #90
 10218 001a 0021     		movs	r1, #0
 10219 001c 9952     		strh	r1, [r3, r2]
 10220              	.LBB1037:
 10221              	.LBB1038:
 10222              	.LBB1039:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 10223              		.loc 2 386 3
 10224              		.syntax divided
 10225              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10226 001e EFF31083 		MRS r3, primask
 10227              	@ 0 "" 2
 10228              		.thumb
 10229              		.syntax unified
 10230 0022 BB61     		str	r3, [r7, #24]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10231              		.loc 2 387 9
 10232 0024 BB69     		ldr	r3, [r7, #24]
 10233              	.LBE1039:
 10234              	.LBE1038:
3596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 10235              		.loc 1 3598 5
 10236 0026 BB64     		str	r3, [r7, #72]
 10237 0028 0123     		movs	r3, #1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 254


 10238 002a FB61     		str	r3, [r7, #28]
 10239              	.LBB1040:
 10240              	.LBB1041:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10241              		.loc 2 414 3
 10242 002c FB69     		ldr	r3, [r7, #28]
 10243              		.syntax divided
 10244              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10245 002e 83F31088 		MSR primask, r3
 10246              	@ 0 "" 2
 10247              		.loc 2 415 1
 10248              		.thumb
 10249              		.syntax unified
 10250 0032 C046     		nop
 10251              	.LBE1041:
 10252              	.LBE1040:
 10253              		.loc 1 3598 5
 10254 0034 FB6C     		ldr	r3, [r7, #76]
 10255 0036 1B68     		ldr	r3, [r3]
 10256 0038 1A68     		ldr	r2, [r3]
 10257 003a FB6C     		ldr	r3, [r7, #76]
 10258 003c 1B68     		ldr	r3, [r3]
 10259 003e 3A49     		ldr	r1, .L404
 10260 0040 0A40     		ands	r2, r1
 10261 0042 1A60     		str	r2, [r3]
 10262 0044 BB6C     		ldr	r3, [r7, #72]
 10263 0046 3B62     		str	r3, [r7, #32]
 10264              	.LBB1042:
 10265              	.LBB1043:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10266              		.loc 2 414 3
 10267 0048 3B6A     		ldr	r3, [r7, #32]
 10268              		.syntax divided
 10269              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10270 004a 83F31088 		MSR primask, r3
 10271              	@ 0 "" 2
 10272              		.loc 2 415 1
 10273              		.thumb
 10274              		.syntax unified
 10275 004e C046     		nop
 10276              	.LBE1043:
 10277              	.LBE1042:
 10278              	.LBE1037:
 10279              	.LBB1044:
 10280              	.LBB1045:
 10281              	.LBB1046:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 10282              		.loc 2 386 3
 10283              		.syntax divided
 10284              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10285 0050 EFF31083 		MRS r3, primask
 10286              	@ 0 "" 2
 10287              		.thumb
 10288              		.syntax unified
 10289 0054 7B62     		str	r3, [r7, #36]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10290              		.loc 2 387 9
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 255


 10291 0056 7B6A     		ldr	r3, [r7, #36]
 10292              	.LBE1046:
 10293              	.LBE1045:
3599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 10294              		.loc 1 3599 5
 10295 0058 7B64     		str	r3, [r7, #68]
 10296 005a 0123     		movs	r3, #1
 10297 005c BB62     		str	r3, [r7, #40]
 10298              	.LBB1047:
 10299              	.LBB1048:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10300              		.loc 2 414 3
 10301 005e BB6A     		ldr	r3, [r7, #40]
 10302              		.syntax divided
 10303              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10304 0060 83F31088 		MSR primask, r3
 10305              	@ 0 "" 2
 10306              		.loc 2 415 1
 10307              		.thumb
 10308              		.syntax unified
 10309 0064 C046     		nop
 10310              	.LBE1048:
 10311              	.LBE1047:
 10312              		.loc 1 3599 5
 10313 0066 FB6C     		ldr	r3, [r7, #76]
 10314 0068 1B68     		ldr	r3, [r3]
 10315 006a 9A68     		ldr	r2, [r3, #8]
 10316 006c FB6C     		ldr	r3, [r7, #76]
 10317 006e 1B68     		ldr	r3, [r3]
 10318 0070 0121     		movs	r1, #1
 10319 0072 8A43     		bics	r2, r1
 10320 0074 9A60     		str	r2, [r3, #8]
 10321 0076 7B6C     		ldr	r3, [r7, #68]
 10322 0078 FB62     		str	r3, [r7, #44]
 10323              	.LBB1049:
 10324              	.LBB1050:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10325              		.loc 2 414 3
 10326 007a FB6A     		ldr	r3, [r7, #44]
 10327              		.syntax divided
 10328              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10329 007c 83F31088 		MSR primask, r3
 10330              	@ 0 "" 2
 10331              		.loc 2 415 1
 10332              		.thumb
 10333              		.syntax unified
 10334 0080 C046     		nop
 10335              	.LBE1050:
 10336              	.LBE1049:
 10337              	.LBE1044:
 10338              	.LBB1051:
 10339              	.LBB1052:
 10340              	.LBB1053:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 10341              		.loc 2 386 3
 10342              		.syntax divided
 10343              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 256


 10344 0082 EFF31083 		MRS r3, primask
 10345              	@ 0 "" 2
 10346              		.thumb
 10347              		.syntax unified
 10348 0086 3B63     		str	r3, [r7, #48]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10349              		.loc 2 387 9
 10350 0088 3B6B     		ldr	r3, [r7, #48]
 10351              	.LBE1053:
 10352              	.LBE1052:
3600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
3603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 10353              		.loc 1 3603 5
 10354 008a 3B64     		str	r3, [r7, #64]
 10355 008c 0123     		movs	r3, #1
 10356 008e 7B63     		str	r3, [r7, #52]
 10357              	.LBB1054:
 10358              	.LBB1055:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10359              		.loc 2 414 3
 10360 0090 7B6B     		ldr	r3, [r7, #52]
 10361              		.syntax divided
 10362              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10363 0092 83F31088 		MSR primask, r3
 10364              	@ 0 "" 2
 10365              		.loc 2 415 1
 10366              		.thumb
 10367              		.syntax unified
 10368 0096 C046     		nop
 10369              	.LBE1055:
 10370              	.LBE1054:
 10371              		.loc 1 3603 5
 10372 0098 FB6C     		ldr	r3, [r7, #76]
 10373 009a 1B68     		ldr	r3, [r3]
 10374 009c 9A68     		ldr	r2, [r3, #8]
 10375 009e FB6C     		ldr	r3, [r7, #76]
 10376 00a0 1B68     		ldr	r3, [r3]
 10377 00a2 4021     		movs	r1, #64
 10378 00a4 8A43     		bics	r2, r1
 10379 00a6 9A60     		str	r2, [r3, #8]
 10380 00a8 3B6C     		ldr	r3, [r7, #64]
 10381 00aa BB63     		str	r3, [r7, #56]
 10382              	.LBB1056:
 10383              	.LBB1057:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10384              		.loc 2 414 3
 10385 00ac BB6B     		ldr	r3, [r7, #56]
 10386              		.syntax divided
 10387              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10388 00ae 83F31088 		MSR primask, r3
 10389              	@ 0 "" 2
 10390              		.loc 2 415 1
 10391              		.thumb
 10392              		.syntax unified
 10393 00b2 C046     		nop
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 257


 10394              	.LBE1057:
 10395              	.LBE1056:
 10396              	.LBE1051:
3604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 10397              		.loc 1 3606 20
 10398 00b4 FB6C     		ldr	r3, [r7, #76]
 10399 00b6 8022     		movs	r2, #128
 10400 00b8 2021     		movs	r1, #32
 10401 00ba 9950     		str	r1, [r3, r2]
3607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 10402              		.loc 1 3609 14
 10403 00bc FB6C     		ldr	r3, [r7, #76]
 10404 00be 1B6E     		ldr	r3, [r3, #96]
 10405              		.loc 1 3609 8
 10406 00c0 012B     		cmp	r3, #1
 10407 00c2 18D1     		bne	.L396
 10408              	.LBB1058:
 10409              	.LBB1059:
 10410              	.LBB1060:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 10411              		.loc 2 386 3
 10412              		.syntax divided
 10413              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10414 00c4 EFF31083 		MRS r3, primask
 10415              	@ 0 "" 2
 10416              		.thumb
 10417              		.syntax unified
 10418 00c8 FB60     		str	r3, [r7, #12]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10419              		.loc 2 387 9
 10420 00ca FB68     		ldr	r3, [r7, #12]
 10421              	.LBE1060:
 10422              	.LBE1059:
3610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 10423              		.loc 1 3611 7
 10424 00cc FB63     		str	r3, [r7, #60]
 10425 00ce 0123     		movs	r3, #1
 10426 00d0 3B61     		str	r3, [r7, #16]
 10427              	.LBB1061:
 10428              	.LBB1062:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10429              		.loc 2 414 3
 10430 00d2 3B69     		ldr	r3, [r7, #16]
 10431              		.syntax divided
 10432              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10433 00d4 83F31088 		MSR primask, r3
 10434              	@ 0 "" 2
 10435              		.loc 2 415 1
 10436              		.thumb
 10437              		.syntax unified
 10438 00d8 C046     		nop
 10439              	.LBE1062:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 258


 10440              	.LBE1061:
 10441              		.loc 1 3611 7
 10442 00da FB6C     		ldr	r3, [r7, #76]
 10443 00dc 1B68     		ldr	r3, [r3]
 10444 00de 1A68     		ldr	r2, [r3]
 10445 00e0 FB6C     		ldr	r3, [r7, #76]
 10446 00e2 1B68     		ldr	r3, [r3]
 10447 00e4 1021     		movs	r1, #16
 10448 00e6 8A43     		bics	r2, r1
 10449 00e8 1A60     		str	r2, [r3]
 10450 00ea FB6B     		ldr	r3, [r7, #60]
 10451 00ec 7B61     		str	r3, [r7, #20]
 10452              	.LBB1063:
 10453              	.LBB1064:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10454              		.loc 2 414 3
 10455 00ee 7B69     		ldr	r3, [r7, #20]
 10456              		.syntax divided
 10457              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10458 00f0 83F31088 		MSR primask, r3
 10459              	@ 0 "" 2
 10460              		.loc 2 415 1
 10461              		.thumb
 10462              		.syntax unified
 10463 00f4 C046     		nop
 10464              	.L396:
 10465              	.LBE1064:
 10466              	.LBE1063:
 10467              	.LBE1058:
3612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      In this case, Rx Event type is Transfer Complete */
3617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 10468              		.loc 1 3617 22
 10469 00f6 FB6C     		ldr	r3, [r7, #76]
 10470 00f8 0022     		movs	r2, #0
 10471 00fa 5A66     		str	r2, [r3, #100]
3618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check current reception Mode :
3620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 10472              		.loc 1 3621 12
 10473 00fc FB6C     		ldr	r3, [r7, #76]
 10474 00fe 1B6E     		ldr	r3, [r3, #96]
 10475              		.loc 1 3621 6
 10476 0100 012B     		cmp	r3, #1
 10477 0102 08D1     		bne	.L401
3622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 10478              		.loc 1 3628 5
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 259


 10479 0104 FB6C     		ldr	r3, [r7, #76]
 10480 0106 5822     		movs	r2, #88
 10481 0108 9A5A     		ldrh	r2, [r3, r2]
 10482 010a FB6C     		ldr	r3, [r7, #76]
 10483 010c 1100     		movs	r1, r2
 10484 010e 1800     		movs	r0, r3
 10485 0110 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
3632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 10486              		.loc 1 3642 1
 10487 0114 03E0     		b	.L403
 10488              	.L401:
3639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 10489              		.loc 1 3639 5
 10490 0116 FB6C     		ldr	r3, [r7, #76]
 10491 0118 1800     		movs	r0, r3
 10492 011a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 10493              	.L403:
 10494              		.loc 1 3642 1
 10495 011e C046     		nop
 10496 0120 BD46     		mov	sp, r7
 10497 0122 14B0     		add	sp, sp, #80
 10498              		@ sp needed
 10499 0124 80BD     		pop	{r7, pc}
 10500              	.L405:
 10501 0126 C046     		.align	2
 10502              	.L404:
 10503 0128 FFFEFFFF 		.word	-257
 10504              		.cfi_endproc
 10505              	.LFE93:
 10507              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 10508              		.align	1
 10509              		.syntax unified
 10510              		.code	16
 10511              		.thumb_func
 10513              	UART_DMARxHalfCplt:
 10514              	.LFB94:
3643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 260


 10515              		.loc 1 3650 1
 10516              		.cfi_startproc
 10517              		@ args = 0, pretend = 0, frame = 16
 10518              		@ frame_needed = 1, uses_anonymous_args = 0
 10519 0000 80B5     		push	{r7, lr}
 10520              	.LCFI162:
 10521              		.cfi_def_cfa_offset 8
 10522              		.cfi_offset 7, -8
 10523              		.cfi_offset 14, -4
 10524 0002 84B0     		sub	sp, sp, #16
 10525              	.LCFI163:
 10526              		.cfi_def_cfa_offset 24
 10527 0004 00AF     		add	r7, sp, #0
 10528              	.LCFI164:
 10529              		.cfi_def_cfa_register 7
 10530 0006 7860     		str	r0, [r7, #4]
3651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10531              		.loc 1 3651 23
 10532 0008 7B68     		ldr	r3, [r7, #4]
 10533 000a 5B6A     		ldr	r3, [r3, #36]
 10534 000c FB60     		str	r3, [r7, #12]
3652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      In this case, Rx Event type is Half Transfer */
3655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_HT;
 10535              		.loc 1 3655 22
 10536 000e FB68     		ldr	r3, [r7, #12]
 10537 0010 0122     		movs	r2, #1
 10538 0012 5A66     		str	r2, [r3, #100]
3656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check current reception Mode :
3658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 10539              		.loc 1 3659 12
 10540 0014 FB68     		ldr	r3, [r7, #12]
 10541 0016 1B6E     		ldr	r3, [r3, #96]
 10542              		.loc 1 3659 6
 10543 0018 012B     		cmp	r3, #1
 10544 001a 0AD1     		bne	.L407
3660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize / 2U);
3664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
 10545              		.loc 1 3666 44
 10546 001c FB68     		ldr	r3, [r7, #12]
 10547 001e 5822     		movs	r2, #88
 10548 0020 9B5A     		ldrh	r3, [r3, r2]
 10549              		.loc 1 3666 5
 10550 0022 5B08     		lsrs	r3, r3, #1
 10551 0024 9AB2     		uxth	r2, r3
 10552 0026 FB68     		ldr	r3, [r7, #12]
 10553 0028 1100     		movs	r1, r2
 10554 002a 1800     		movs	r0, r3
 10555 002c FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 261


3667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
3670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 10556              		.loc 1 3680 1
 10557 0030 03E0     		b	.L409
 10558              	.L407:
3677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 10559              		.loc 1 3677 5
 10560 0032 FB68     		ldr	r3, [r7, #12]
 10561 0034 1800     		movs	r0, r3
 10562 0036 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 10563              	.L409:
 10564              		.loc 1 3680 1
 10565 003a C046     		nop
 10566 003c BD46     		mov	sp, r7
 10567 003e 04B0     		add	sp, sp, #16
 10568              		@ sp needed
 10569 0040 80BD     		pop	{r7, pc}
 10570              		.cfi_endproc
 10571              	.LFE94:
 10573              		.section	.text.UART_DMAError,"ax",%progbits
 10574              		.align	1
 10575              		.syntax unified
 10576              		.code	16
 10577              		.thumb_func
 10579              	UART_DMAError:
 10580              	.LFB95:
3681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
3685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 10581              		.loc 1 3688 1
 10582              		.cfi_startproc
 10583              		@ args = 0, pretend = 0, frame = 24
 10584              		@ frame_needed = 1, uses_anonymous_args = 0
 10585 0000 80B5     		push	{r7, lr}
 10586              	.LCFI165:
 10587              		.cfi_def_cfa_offset 8
 10588              		.cfi_offset 7, -8
 10589              		.cfi_offset 14, -4
 10590 0002 86B0     		sub	sp, sp, #24
 10591              	.LCFI166:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 262


 10592              		.cfi_def_cfa_offset 32
 10593 0004 00AF     		add	r7, sp, #0
 10594              	.LCFI167:
 10595              		.cfi_def_cfa_register 7
 10596 0006 7860     		str	r0, [r7, #4]
3689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10597              		.loc 1 3689 23
 10598 0008 7B68     		ldr	r3, [r7, #4]
 10599 000a 5B6A     		ldr	r3, [r3, #36]
 10600 000c 7B61     		str	r3, [r7, #20]
3690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 10601              		.loc 1 3691 31
 10602 000e 7B69     		ldr	r3, [r7, #20]
 10603 0010 DB6F     		ldr	r3, [r3, #124]
 10604 0012 3B61     		str	r3, [r7, #16]
3692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 10605              		.loc 1 3692 31
 10606 0014 7B69     		ldr	r3, [r7, #20]
 10607 0016 8022     		movs	r2, #128
 10608 0018 9B58     		ldr	r3, [r3, r2]
 10609 001a FB60     		str	r3, [r7, #12]
3693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 10610              		.loc 1 3695 8
 10611 001c 7B69     		ldr	r3, [r7, #20]
 10612 001e 1B68     		ldr	r3, [r3]
 10613 0020 9B68     		ldr	r3, [r3, #8]
 10614 0022 8022     		movs	r2, #128
 10615 0024 1340     		ands	r3, r2
 10616              		.loc 1 3695 6
 10617 0026 802B     		cmp	r3, #128
 10618 0028 0AD1     		bne	.L411
 10619              		.loc 1 3695 62 discriminator 1
 10620 002a 3B69     		ldr	r3, [r7, #16]
 10621 002c 212B     		cmp	r3, #33
 10622 002e 07D1     		bne	.L411
3696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
 10623              		.loc 1 3698 24
 10624 0030 7B69     		ldr	r3, [r7, #20]
 10625 0032 5222     		movs	r2, #82
 10626 0034 0021     		movs	r1, #0
 10627 0036 9952     		strh	r1, [r3, r2]
3699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 10628              		.loc 1 3699 5
 10629 0038 7B69     		ldr	r3, [r7, #20]
 10630 003a 1800     		movs	r0, r3
 10631 003c FFF7FEFF 		bl	UART_EndTxTransfer
 10632              	.L411:
3700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 10633              		.loc 1 3703 8
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 263


 10634 0040 7B69     		ldr	r3, [r7, #20]
 10635 0042 1B68     		ldr	r3, [r3]
 10636 0044 9B68     		ldr	r3, [r3, #8]
 10637 0046 4022     		movs	r2, #64
 10638 0048 1340     		ands	r3, r2
 10639              		.loc 1 3703 6
 10640 004a 402B     		cmp	r3, #64
 10641 004c 0AD1     		bne	.L412
 10642              		.loc 1 3703 62 discriminator 1
 10643 004e FB68     		ldr	r3, [r7, #12]
 10644 0050 222B     		cmp	r3, #34
 10645 0052 07D1     		bne	.L412
3704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 10646              		.loc 1 3706 24
 10647 0054 7B69     		ldr	r3, [r7, #20]
 10648 0056 5A22     		movs	r2, #90
 10649 0058 0021     		movs	r1, #0
 10650 005a 9952     		strh	r1, [r3, r2]
3707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 10651              		.loc 1 3707 5
 10652 005c 7B69     		ldr	r3, [r7, #20]
 10653 005e 1800     		movs	r0, r3
 10654 0060 FFF7FEFF 		bl	UART_EndRxTransfer
 10655              	.L412:
3708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 10656              		.loc 1 3710 20
 10657 0064 7B69     		ldr	r3, [r7, #20]
 10658 0066 8422     		movs	r2, #132
 10659 0068 9B58     		ldr	r3, [r3, r2]
 10660 006a 1022     		movs	r2, #16
 10661 006c 1A43     		orrs	r2, r3
 10662 006e 7B69     		ldr	r3, [r7, #20]
 10663 0070 8421     		movs	r1, #132
 10664 0072 5A50     		str	r2, [r3, r1]
3711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered error callback*/
3714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCallback(huart);
3715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak error callback*/
3717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 10665              		.loc 1 3717 3
 10666 0074 7B69     		ldr	r3, [r7, #20]
 10667 0076 1800     		movs	r0, r3
 10668 0078 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 10669              		.loc 1 3719 1
 10670 007c C046     		nop
 10671 007e BD46     		mov	sp, r7
 10672 0080 06B0     		add	sp, sp, #24
 10673              		@ sp needed
 10674 0082 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 264


 10675              		.cfi_endproc
 10676              	.LFE95:
 10678              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 10679              		.align	1
 10680              		.syntax unified
 10681              		.code	16
 10682              		.thumb_func
 10684              	UART_DMAAbortOnError:
 10685              	.LFB96:
3720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 10686              		.loc 1 3728 1
 10687              		.cfi_startproc
 10688              		@ args = 0, pretend = 0, frame = 16
 10689              		@ frame_needed = 1, uses_anonymous_args = 0
 10690 0000 80B5     		push	{r7, lr}
 10691              	.LCFI168:
 10692              		.cfi_def_cfa_offset 8
 10693              		.cfi_offset 7, -8
 10694              		.cfi_offset 14, -4
 10695 0002 84B0     		sub	sp, sp, #16
 10696              	.LCFI169:
 10697              		.cfi_def_cfa_offset 24
 10698 0004 00AF     		add	r7, sp, #0
 10699              	.LCFI170:
 10700              		.cfi_def_cfa_register 7
 10701 0006 7860     		str	r0, [r7, #4]
3729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10702              		.loc 1 3729 23
 10703 0008 7B68     		ldr	r3, [r7, #4]
 10704 000a 5B6A     		ldr	r3, [r3, #36]
 10705 000c FB60     		str	r3, [r7, #12]
3730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 10706              		.loc 1 3730 22
 10707 000e FB68     		ldr	r3, [r7, #12]
 10708 0010 5A22     		movs	r2, #90
 10709 0012 0021     		movs	r1, #0
 10710 0014 9952     		strh	r1, [r3, r2]
3731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 10711              		.loc 1 3731 22
 10712 0016 FB68     		ldr	r3, [r7, #12]
 10713 0018 5222     		movs	r2, #82
 10714 001a 0021     		movs	r1, #0
 10715 001c 9952     		strh	r1, [r3, r2]
3732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered error callback*/
3735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCallback(huart);
3736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak error callback*/
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 265


3738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 10716              		.loc 1 3738 3
 10717 001e FB68     		ldr	r3, [r7, #12]
 10718 0020 1800     		movs	r0, r3
 10719 0022 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 10720              		.loc 1 3740 1
 10721 0026 C046     		nop
 10722 0028 BD46     		mov	sp, r7
 10723 002a 04B0     		add	sp, sp, #16
 10724              		@ sp needed
 10725 002c 80BD     		pop	{r7, pc}
 10726              		.cfi_endproc
 10727              	.LFE96:
 10729              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 10730              		.align	1
 10731              		.syntax unified
 10732              		.code	16
 10733              		.thumb_func
 10735              	UART_DMATxAbortCallback:
 10736              	.LFB97:
3741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 10737              		.loc 1 3751 1
 10738              		.cfi_startproc
 10739              		@ args = 0, pretend = 0, frame = 16
 10740              		@ frame_needed = 1, uses_anonymous_args = 0
 10741 0000 80B5     		push	{r7, lr}
 10742              	.LCFI171:
 10743              		.cfi_def_cfa_offset 8
 10744              		.cfi_offset 7, -8
 10745              		.cfi_offset 14, -4
 10746 0002 84B0     		sub	sp, sp, #16
 10747              	.LCFI172:
 10748              		.cfi_def_cfa_offset 24
 10749 0004 00AF     		add	r7, sp, #0
 10750              	.LCFI173:
 10751              		.cfi_def_cfa_register 7
 10752 0006 7860     		str	r0, [r7, #4]
3752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10753              		.loc 1 3752 23
 10754 0008 7B68     		ldr	r3, [r7, #4]
 10755 000a 5B6A     		ldr	r3, [r3, #36]
 10756 000c FB60     		str	r3, [r7, #12]
3753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 10757              		.loc 1 3754 8
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 266


 10758 000e FB68     		ldr	r3, [r7, #12]
 10759 0010 1B6F     		ldr	r3, [r3, #112]
 10760              		.loc 1 3754 36
 10761 0012 0022     		movs	r2, #0
 10762 0014 5A63     		str	r2, [r3, #52]
3755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 10763              		.loc 1 3757 12
 10764 0016 FB68     		ldr	r3, [r7, #12]
 10765 0018 5B6F     		ldr	r3, [r3, #116]
 10766              		.loc 1 3757 6
 10767 001a 002B     		cmp	r3, #0
 10768 001c 04D0     		beq	.L415
3758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 10769              		.loc 1 3759 14
 10770 001e FB68     		ldr	r3, [r7, #12]
 10771 0020 5B6F     		ldr	r3, [r3, #116]
 10772              		.loc 1 3759 22
 10773 0022 5B6B     		ldr	r3, [r3, #52]
 10774              		.loc 1 3759 8
 10775 0024 002B     		cmp	r3, #0
 10776 0026 1ED1     		bne	.L417
 10777              	.L415:
3760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
3762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 10778              		.loc 1 3766 22
 10779 0028 FB68     		ldr	r3, [r7, #12]
 10780 002a 5222     		movs	r2, #82
 10781 002c 0021     		movs	r1, #0
 10782 002e 9952     		strh	r1, [r3, r2]
3767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 10783              		.loc 1 3767 22
 10784 0030 FB68     		ldr	r3, [r7, #12]
 10785 0032 5A22     		movs	r2, #90
 10786 0034 0021     		movs	r1, #0
 10787 0036 9952     		strh	r1, [r3, r2]
3768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
3770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 10788              		.loc 1 3770 20
 10789 0038 FB68     		ldr	r3, [r7, #12]
 10790 003a 8422     		movs	r2, #132
 10791 003c 0021     		movs	r1, #0
 10792 003e 9950     		str	r1, [r3, r2]
3771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 10793              		.loc 1 3773 3
 10794 0040 FB68     		ldr	r3, [r7, #12]
 10795 0042 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 267


 10796 0044 0F22     		movs	r2, #15
 10797 0046 1A62     		str	r2, [r3, #32]
3774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 10798              		.loc 1 3777 18
 10799 0048 FB68     		ldr	r3, [r7, #12]
 10800 004a 2022     		movs	r2, #32
 10801 004c DA67     		str	r2, [r3, #124]
3778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 10802              		.loc 1 3778 18
 10803 004e FB68     		ldr	r3, [r7, #12]
 10804 0050 8022     		movs	r2, #128
 10805 0052 2021     		movs	r1, #32
 10806 0054 9950     		str	r1, [r3, r2]
3779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 10807              		.loc 1 3779 24
 10808 0056 FB68     		ldr	r3, [r7, #12]
 10809 0058 0022     		movs	r2, #0
 10810 005a 1A66     		str	r2, [r3, #96]
3780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
3782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call registered Abort complete callback */
3784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 10811              		.loc 1 3787 3
 10812 005c FB68     		ldr	r3, [r7, #12]
 10813 005e 1800     		movs	r0, r3
 10814 0060 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 10815 0064 00E0     		b	.L414
 10816              	.L417:
3761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 10817              		.loc 1 3761 7
 10818 0066 C046     		nop
 10819              	.L414:
3788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 10820              		.loc 1 3789 1
 10821 0068 BD46     		mov	sp, r7
 10822 006a 04B0     		add	sp, sp, #16
 10823              		@ sp needed
 10824 006c 80BD     		pop	{r7, pc}
 10825              		.cfi_endproc
 10826              	.LFE97:
 10828              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 10829              		.align	1
 10830              		.syntax unified
 10831              		.code	16
 10832              		.thumb_func
 10834              	UART_DMARxAbortCallback:
 10835              	.LFB98:
3790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 268


3792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 10836              		.loc 1 3801 1
 10837              		.cfi_startproc
 10838              		@ args = 0, pretend = 0, frame = 16
 10839              		@ frame_needed = 1, uses_anonymous_args = 0
 10840 0000 80B5     		push	{r7, lr}
 10841              	.LCFI174:
 10842              		.cfi_def_cfa_offset 8
 10843              		.cfi_offset 7, -8
 10844              		.cfi_offset 14, -4
 10845 0002 84B0     		sub	sp, sp, #16
 10846              	.LCFI175:
 10847              		.cfi_def_cfa_offset 24
 10848 0004 00AF     		add	r7, sp, #0
 10849              	.LCFI176:
 10850              		.cfi_def_cfa_register 7
 10851 0006 7860     		str	r0, [r7, #4]
3802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10852              		.loc 1 3802 23
 10853 0008 7B68     		ldr	r3, [r7, #4]
 10854 000a 5B6A     		ldr	r3, [r3, #36]
 10855 000c FB60     		str	r3, [r7, #12]
3803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 10856              		.loc 1 3804 8
 10857 000e FB68     		ldr	r3, [r7, #12]
 10858 0010 5B6F     		ldr	r3, [r3, #116]
 10859              		.loc 1 3804 36
 10860 0012 0022     		movs	r2, #0
 10861 0014 5A63     		str	r2, [r3, #52]
3805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 10862              		.loc 1 3807 12
 10863 0016 FB68     		ldr	r3, [r7, #12]
 10864 0018 1B6F     		ldr	r3, [r3, #112]
 10865              		.loc 1 3807 6
 10866 001a 002B     		cmp	r3, #0
 10867 001c 04D0     		beq	.L419
3808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 10868              		.loc 1 3809 14
 10869 001e FB68     		ldr	r3, [r7, #12]
 10870 0020 1B6F     		ldr	r3, [r3, #112]
 10871              		.loc 1 3809 22
 10872 0022 5B6B     		ldr	r3, [r3, #52]
 10873              		.loc 1 3809 8
 10874 0024 002B     		cmp	r3, #0
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 269


 10875 0026 26D1     		bne	.L421
 10876              	.L419:
3810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
3812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 10877              		.loc 1 3816 22
 10878 0028 FB68     		ldr	r3, [r7, #12]
 10879 002a 5222     		movs	r2, #82
 10880 002c 0021     		movs	r1, #0
 10881 002e 9952     		strh	r1, [r3, r2]
3817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 10882              		.loc 1 3817 22
 10883 0030 FB68     		ldr	r3, [r7, #12]
 10884 0032 5A22     		movs	r2, #90
 10885 0034 0021     		movs	r1, #0
 10886 0036 9952     		strh	r1, [r3, r2]
3818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
3820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 10887              		.loc 1 3820 20
 10888 0038 FB68     		ldr	r3, [r7, #12]
 10889 003a 8422     		movs	r2, #132
 10890 003c 0021     		movs	r1, #0
 10891 003e 9950     		str	r1, [r3, r2]
3821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 10892              		.loc 1 3823 3
 10893 0040 FB68     		ldr	r3, [r7, #12]
 10894 0042 1B68     		ldr	r3, [r3]
 10895 0044 0F22     		movs	r2, #15
 10896 0046 1A62     		str	r2, [r3, #32]
3824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Discard the received data */
3826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 10897              		.loc 1 3826 3
 10898 0048 FB68     		ldr	r3, [r7, #12]
 10899 004a 1B68     		ldr	r3, [r3]
 10900 004c 9A69     		ldr	r2, [r3, #24]
 10901 004e FB68     		ldr	r3, [r7, #12]
 10902 0050 1B68     		ldr	r3, [r3]
 10903 0052 0821     		movs	r1, #8
 10904 0054 0A43     		orrs	r2, r1
 10905 0056 9A61     		str	r2, [r3, #24]
3827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 10906              		.loc 1 3829 18
 10907 0058 FB68     		ldr	r3, [r7, #12]
 10908 005a 2022     		movs	r2, #32
 10909 005c DA67     		str	r2, [r3, #124]
3830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 10910              		.loc 1 3830 18
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 270


 10911 005e FB68     		ldr	r3, [r7, #12]
 10912 0060 8022     		movs	r2, #128
 10913 0062 2021     		movs	r1, #32
 10914 0064 9950     		str	r1, [r3, r2]
3831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 10915              		.loc 1 3831 24
 10916 0066 FB68     		ldr	r3, [r7, #12]
 10917 0068 0022     		movs	r2, #0
 10918 006a 1A66     		str	r2, [r3, #96]
3832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
3834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call registered Abort complete callback */
3836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 10919              		.loc 1 3839 3
 10920 006c FB68     		ldr	r3, [r7, #12]
 10921 006e 1800     		movs	r0, r3
 10922 0070 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 10923 0074 00E0     		b	.L418
 10924              	.L421:
3811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 10925              		.loc 1 3811 7
 10926 0076 C046     		nop
 10927              	.L418:
3840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 10928              		.loc 1 3841 1
 10929 0078 BD46     		mov	sp, r7
 10930 007a 04B0     		add	sp, sp, #16
 10931              		@ sp needed
 10932 007c 80BD     		pop	{r7, pc}
 10933              		.cfi_endproc
 10934              	.LFE98:
 10936              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 10937              		.align	1
 10938              		.syntax unified
 10939              		.code	16
 10940              		.thumb_func
 10942              	UART_DMATxOnlyAbortCallback:
 10943              	.LFB99:
3842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 10944              		.loc 1 3853 1
 10945              		.cfi_startproc
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 271


 10946              		@ args = 0, pretend = 0, frame = 16
 10947              		@ frame_needed = 1, uses_anonymous_args = 0
 10948 0000 80B5     		push	{r7, lr}
 10949              	.LCFI177:
 10950              		.cfi_def_cfa_offset 8
 10951              		.cfi_offset 7, -8
 10952              		.cfi_offset 14, -4
 10953 0002 84B0     		sub	sp, sp, #16
 10954              	.LCFI178:
 10955              		.cfi_def_cfa_offset 24
 10956 0004 00AF     		add	r7, sp, #0
 10957              	.LCFI179:
 10958              		.cfi_def_cfa_register 7
 10959 0006 7860     		str	r0, [r7, #4]
3854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10960              		.loc 1 3854 23
 10961 0008 7B68     		ldr	r3, [r7, #4]
 10962 000a 5B6A     		ldr	r3, [r3, #36]
 10963 000c FB60     		str	r3, [r7, #12]
3855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 10964              		.loc 1 3856 22
 10965 000e FB68     		ldr	r3, [r7, #12]
 10966 0010 5222     		movs	r2, #82
 10967 0012 0021     		movs	r1, #0
 10968 0014 9952     		strh	r1, [r3, r2]
3857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 10969              		.loc 1 3860 17
 10970 0016 FB68     		ldr	r3, [r7, #12]
 10971 0018 2022     		movs	r2, #32
 10972 001a DA67     		str	r2, [r3, #124]
3861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
3863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 10973              		.loc 1 3868 3
 10974 001c FB68     		ldr	r3, [r7, #12]
 10975 001e 1800     		movs	r0, r3
 10976 0020 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
3869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 10977              		.loc 1 3870 1
 10978 0024 C046     		nop
 10979 0026 BD46     		mov	sp, r7
 10980 0028 04B0     		add	sp, sp, #16
 10981              		@ sp needed
 10982 002a 80BD     		pop	{r7, pc}
 10983              		.cfi_endproc
 10984              	.LFE99:
 10986              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 272


 10987              		.align	1
 10988              		.syntax unified
 10989              		.code	16
 10990              		.thumb_func
 10992              	UART_DMARxOnlyAbortCallback:
 10993              	.LFB100:
3871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
3878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 10994              		.loc 1 3881 1
 10995              		.cfi_startproc
 10996              		@ args = 0, pretend = 0, frame = 16
 10997              		@ frame_needed = 1, uses_anonymous_args = 0
 10998 0000 80B5     		push	{r7, lr}
 10999              	.LCFI180:
 11000              		.cfi_def_cfa_offset 8
 11001              		.cfi_offset 7, -8
 11002              		.cfi_offset 14, -4
 11003 0002 84B0     		sub	sp, sp, #16
 11004              	.LCFI181:
 11005              		.cfi_def_cfa_offset 24
 11006 0004 00AF     		add	r7, sp, #0
 11007              	.LCFI182:
 11008              		.cfi_def_cfa_register 7
 11009 0006 7860     		str	r0, [r7, #4]
3882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 11010              		.loc 1 3882 23
 11011 0008 7B68     		ldr	r3, [r7, #4]
 11012 000a 5B6A     		ldr	r3, [r3, #36]
 11013 000c FB60     		str	r3, [r7, #12]
3883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 11014              		.loc 1 3884 22
 11015 000e FB68     		ldr	r3, [r7, #12]
 11016 0010 5A22     		movs	r2, #90
 11017 0012 0021     		movs	r1, #0
 11018 0014 9952     		strh	r1, [r3, r2]
3885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 11019              		.loc 1 3887 3
 11020 0016 FB68     		ldr	r3, [r7, #12]
 11021 0018 1B68     		ldr	r3, [r3]
 11022 001a 0F22     		movs	r2, #15
 11023 001c 1A62     		str	r2, [r3, #32]
3888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Discard the received data */
3890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 11024              		.loc 1 3890 3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 273


 11025 001e FB68     		ldr	r3, [r7, #12]
 11026 0020 1B68     		ldr	r3, [r3]
 11027 0022 9A69     		ldr	r2, [r3, #24]
 11028 0024 FB68     		ldr	r3, [r7, #12]
 11029 0026 1B68     		ldr	r3, [r3]
 11030 0028 0821     		movs	r1, #8
 11031 002a 0A43     		orrs	r2, r1
 11032 002c 9A61     		str	r2, [r3, #24]
3891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 11033              		.loc 1 3893 18
 11034 002e FB68     		ldr	r3, [r7, #12]
 11035 0030 8022     		movs	r2, #128
 11036 0032 2021     		movs	r1, #32
 11037 0034 9950     		str	r1, [r3, r2]
3894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 11038              		.loc 1 3894 24
 11039 0036 FB68     		ldr	r3, [r7, #12]
 11040 0038 0022     		movs	r2, #0
 11041 003a 1A66     		str	r2, [r3, #96]
3895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
3897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 11042              		.loc 1 3902 3
 11043 003c FB68     		ldr	r3, [r7, #12]
 11044 003e 1800     		movs	r0, r3
 11045 0040 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
3903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 11046              		.loc 1 3904 1
 11047 0044 C046     		nop
 11048 0046 BD46     		mov	sp, r7
 11049 0048 04B0     		add	sp, sp, #16
 11050              		@ sp needed
 11051 004a 80BD     		pop	{r7, pc}
 11052              		.cfi_endproc
 11053              	.LFE100:
 11055              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 11056              		.align	1
 11057              		.syntax unified
 11058              		.code	16
 11059              		.thumb_func
 11061              	UART_TxISR_8BIT:
 11062              	.LFB101:
3905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length .
3908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 274


3912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 11063              		.loc 1 3914 1
 11064              		.cfi_startproc
 11065              		@ args = 0, pretend = 0, frame = 40
 11066              		@ frame_needed = 1, uses_anonymous_args = 0
 11067 0000 80B5     		push	{r7, lr}
 11068              	.LCFI183:
 11069              		.cfi_def_cfa_offset 8
 11070              		.cfi_offset 7, -8
 11071              		.cfi_offset 14, -4
 11072 0002 8AB0     		sub	sp, sp, #40
 11073              	.LCFI184:
 11074              		.cfi_def_cfa_offset 48
 11075 0004 00AF     		add	r7, sp, #0
 11076              	.LCFI185:
 11077              		.cfi_def_cfa_register 7
 11078 0006 7860     		str	r0, [r7, #4]
3915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 11079              		.loc 1 3916 12
 11080 0008 7B68     		ldr	r3, [r7, #4]
 11081 000a DB6F     		ldr	r3, [r3, #124]
 11082              		.loc 1 3916 6
 11083 000c 212B     		cmp	r3, #33
 11084 000e 4DD1     		bne	.L429
3917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 11085              		.loc 1 3918 14
 11086 0010 7B68     		ldr	r3, [r7, #4]
 11087 0012 5222     		movs	r2, #82
 11088 0014 9B5A     		ldrh	r3, [r3, r2]
 11089 0016 9BB2     		uxth	r3, r3
 11090              		.loc 1 3918 8
 11091 0018 002B     		cmp	r3, #0
 11092 001a 32D1     		bne	.L426
 11093              	.LBB1065:
 11094              	.LBB1066:
 11095              	.LBB1067:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 11096              		.loc 2 386 3
 11097              		.syntax divided
 11098              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11099 001c EFF31083 		MRS r3, primask
 11100              	@ 0 "" 2
 11101              		.thumb
 11102              		.syntax unified
 11103 0020 BB60     		str	r3, [r7, #8]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11104              		.loc 2 387 9
 11105 0022 BB68     		ldr	r3, [r7, #8]
 11106              	.LBE1067:
 11107              	.LBE1066:
3919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 275


 11108              		.loc 1 3921 7
 11109 0024 7B62     		str	r3, [r7, #36]
 11110 0026 0123     		movs	r3, #1
 11111 0028 FB60     		str	r3, [r7, #12]
 11112              	.LBB1068:
 11113              	.LBB1069:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11114              		.loc 2 414 3
 11115 002a FB68     		ldr	r3, [r7, #12]
 11116              		.syntax divided
 11117              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11118 002c 83F31088 		MSR primask, r3
 11119              	@ 0 "" 2
 11120              		.loc 2 415 1
 11121              		.thumb
 11122              		.syntax unified
 11123 0030 C046     		nop
 11124              	.LBE1069:
 11125              	.LBE1068:
 11126              		.loc 1 3921 7
 11127 0032 7B68     		ldr	r3, [r7, #4]
 11128 0034 1B68     		ldr	r3, [r3]
 11129 0036 1A68     		ldr	r2, [r3]
 11130 0038 7B68     		ldr	r3, [r7, #4]
 11131 003a 1B68     		ldr	r3, [r3]
 11132 003c 8021     		movs	r1, #128
 11133 003e 8A43     		bics	r2, r1
 11134 0040 1A60     		str	r2, [r3]
 11135 0042 7B6A     		ldr	r3, [r7, #36]
 11136 0044 3B61     		str	r3, [r7, #16]
 11137              	.LBB1070:
 11138              	.LBB1071:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11139              		.loc 2 414 3
 11140 0046 3B69     		ldr	r3, [r7, #16]
 11141              		.syntax divided
 11142              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11143 0048 83F31088 		MSR primask, r3
 11144              	@ 0 "" 2
 11145              		.loc 2 415 1
 11146              		.thumb
 11147              		.syntax unified
 11148 004c C046     		nop
 11149              	.LBE1071:
 11150              	.LBE1070:
 11151              	.LBE1065:
 11152              	.LBB1072:
 11153              	.LBB1073:
 11154              	.LBB1074:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 11155              		.loc 2 386 3
 11156              		.syntax divided
 11157              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11158 004e EFF31083 		MRS r3, primask
 11159              	@ 0 "" 2
 11160              		.thumb
 11161              		.syntax unified
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 276


 11162 0052 7B61     		str	r3, [r7, #20]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11163              		.loc 2 387 9
 11164 0054 7B69     		ldr	r3, [r7, #20]
 11165              	.LBE1074:
 11166              	.LBE1073:
3922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 11167              		.loc 1 3924 7
 11168 0056 3B62     		str	r3, [r7, #32]
 11169 0058 0123     		movs	r3, #1
 11170 005a BB61     		str	r3, [r7, #24]
 11171              	.LBB1075:
 11172              	.LBB1076:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11173              		.loc 2 414 3
 11174 005c BB69     		ldr	r3, [r7, #24]
 11175              		.syntax divided
 11176              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11177 005e 83F31088 		MSR primask, r3
 11178              	@ 0 "" 2
 11179              		.loc 2 415 1
 11180              		.thumb
 11181              		.syntax unified
 11182 0062 C046     		nop
 11183              	.LBE1076:
 11184              	.LBE1075:
 11185              		.loc 1 3924 7
 11186 0064 7B68     		ldr	r3, [r7, #4]
 11187 0066 1B68     		ldr	r3, [r3]
 11188 0068 1A68     		ldr	r2, [r3]
 11189 006a 7B68     		ldr	r3, [r7, #4]
 11190 006c 1B68     		ldr	r3, [r3]
 11191 006e 4021     		movs	r1, #64
 11192 0070 0A43     		orrs	r2, r1
 11193 0072 1A60     		str	r2, [r3]
 11194 0074 3B6A     		ldr	r3, [r7, #32]
 11195 0076 FB61     		str	r3, [r7, #28]
 11196              	.LBB1077:
 11197              	.LBB1078:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11198              		.loc 2 414 3
 11199 0078 FB69     		ldr	r3, [r7, #28]
 11200              		.syntax divided
 11201              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11202 007a 83F31088 		MSR primask, r3
 11203              	@ 0 "" 2
 11204              		.loc 2 415 1
 11205              		.thumb
 11206              		.syntax unified
 11207 007e C046     		nop
 11208              	.LBE1078:
 11209              	.LBE1077:
 11210              	.LBE1072:
3925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 277


3927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr++;
3930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
3931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 11211              		.loc 1 3933 1
 11212 0080 14E0     		b	.L429
 11213              	.L426:
3928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr++;
 11214              		.loc 1 3928 46
 11215 0082 7B68     		ldr	r3, [r7, #4]
 11216 0084 DB6C     		ldr	r3, [r3, #76]
3928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr++;
 11217              		.loc 1 3928 40
 11218 0086 1A78     		ldrb	r2, [r3]
3928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr++;
 11219              		.loc 1 3928 12
 11220 0088 7B68     		ldr	r3, [r7, #4]
 11221 008a 1B68     		ldr	r3, [r3]
3928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr++;
 11222              		.loc 1 3928 30
 11223 008c 92B2     		uxth	r2, r2
3928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr++;
 11224              		.loc 1 3928 28
 11225 008e 1A85     		strh	r2, [r3, #40]
3929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 11226              		.loc 1 3929 12
 11227 0090 7B68     		ldr	r3, [r7, #4]
 11228 0092 DB6C     		ldr	r3, [r3, #76]
3929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 11229              		.loc 1 3929 24
 11230 0094 5A1C     		adds	r2, r3, #1
 11231 0096 7B68     		ldr	r3, [r7, #4]
 11232 0098 DA64     		str	r2, [r3, #76]
3930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 11233              		.loc 1 3930 12
 11234 009a 7B68     		ldr	r3, [r7, #4]
 11235 009c 5222     		movs	r2, #82
 11236 009e 9B5A     		ldrh	r3, [r3, r2]
 11237 00a0 9BB2     		uxth	r3, r3
3930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 11238              		.loc 1 3930 25
 11239 00a2 013B     		subs	r3, r3, #1
 11240 00a4 99B2     		uxth	r1, r3
 11241 00a6 7B68     		ldr	r3, [r7, #4]
 11242 00a8 5222     		movs	r2, #82
 11243 00aa 9952     		strh	r1, [r3, r2]
 11244              	.L429:
 11245              		.loc 1 3933 1
 11246 00ac C046     		nop
 11247 00ae BD46     		mov	sp, r7
 11248 00b0 0AB0     		add	sp, sp, #40
 11249              		@ sp needed
 11250 00b2 80BD     		pop	{r7, pc}
 11251              		.cfi_endproc
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 278


 11252              	.LFE101:
 11254              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 11255              		.align	1
 11256              		.syntax unified
 11257              		.code	16
 11258              		.thumb_func
 11260              	UART_TxISR_16BIT:
 11261              	.LFB102:
3934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length.
3937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 11262              		.loc 1 3943 1
 11263              		.cfi_startproc
 11264              		@ args = 0, pretend = 0, frame = 48
 11265              		@ frame_needed = 1, uses_anonymous_args = 0
 11266 0000 80B5     		push	{r7, lr}
 11267              	.LCFI186:
 11268              		.cfi_def_cfa_offset 8
 11269              		.cfi_offset 7, -8
 11270              		.cfi_offset 14, -4
 11271 0002 8CB0     		sub	sp, sp, #48
 11272              	.LCFI187:
 11273              		.cfi_def_cfa_offset 56
 11274 0004 00AF     		add	r7, sp, #0
 11275              	.LCFI188:
 11276              		.cfi_def_cfa_register 7
 11277 0006 7860     		str	r0, [r7, #4]
3944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   const uint16_t *tmp;
3945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 11278              		.loc 1 3947 12
 11279 0008 7B68     		ldr	r3, [r7, #4]
 11280 000a DB6F     		ldr	r3, [r3, #124]
 11281              		.loc 1 3947 6
 11282 000c 212B     		cmp	r3, #33
 11283 000e 51D1     		bne	.L435
3948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
3949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 11284              		.loc 1 3949 14
 11285 0010 7B68     		ldr	r3, [r7, #4]
 11286 0012 5222     		movs	r2, #82
 11287 0014 9B5A     		ldrh	r3, [r3, r2]
 11288 0016 9BB2     		uxth	r3, r3
 11289              		.loc 1 3949 8
 11290 0018 002B     		cmp	r3, #0
 11291 001a 32D1     		bne	.L432
 11292              	.LBB1079:
 11293              	.LBB1080:
 11294              	.LBB1081:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 279


 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 11295              		.loc 2 386 3
 11296              		.syntax divided
 11297              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11298 001c EFF31083 		MRS r3, primask
 11299              	@ 0 "" 2
 11300              		.thumb
 11301              		.syntax unified
 11302 0020 FB60     		str	r3, [r7, #12]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11303              		.loc 2 387 9
 11304 0022 FB68     		ldr	r3, [r7, #12]
 11305              	.LBE1081:
 11306              	.LBE1080:
3950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 11307              		.loc 1 3952 7
 11308 0024 BB62     		str	r3, [r7, #40]
 11309 0026 0123     		movs	r3, #1
 11310 0028 3B61     		str	r3, [r7, #16]
 11311              	.LBB1082:
 11312              	.LBB1083:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11313              		.loc 2 414 3
 11314 002a 3B69     		ldr	r3, [r7, #16]
 11315              		.syntax divided
 11316              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11317 002c 83F31088 		MSR primask, r3
 11318              	@ 0 "" 2
 11319              		.loc 2 415 1
 11320              		.thumb
 11321              		.syntax unified
 11322 0030 C046     		nop
 11323              	.LBE1083:
 11324              	.LBE1082:
 11325              		.loc 1 3952 7
 11326 0032 7B68     		ldr	r3, [r7, #4]
 11327 0034 1B68     		ldr	r3, [r3]
 11328 0036 1A68     		ldr	r2, [r3]
 11329 0038 7B68     		ldr	r3, [r7, #4]
 11330 003a 1B68     		ldr	r3, [r3]
 11331 003c 8021     		movs	r1, #128
 11332 003e 8A43     		bics	r2, r1
 11333 0040 1A60     		str	r2, [r3]
 11334 0042 BB6A     		ldr	r3, [r7, #40]
 11335 0044 7B61     		str	r3, [r7, #20]
 11336              	.LBB1084:
 11337              	.LBB1085:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11338              		.loc 2 414 3
 11339 0046 7B69     		ldr	r3, [r7, #20]
 11340              		.syntax divided
 11341              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11342 0048 83F31088 		MSR primask, r3
 11343              	@ 0 "" 2
 11344              		.loc 2 415 1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 280


 11345              		.thumb
 11346              		.syntax unified
 11347 004c C046     		nop
 11348              	.LBE1085:
 11349              	.LBE1084:
 11350              	.LBE1079:
 11351              	.LBB1086:
 11352              	.LBB1087:
 11353              	.LBB1088:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 11354              		.loc 2 386 3
 11355              		.syntax divided
 11356              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11357 004e EFF31083 		MRS r3, primask
 11358              	@ 0 "" 2
 11359              		.thumb
 11360              		.syntax unified
 11361 0052 BB61     		str	r3, [r7, #24]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11362              		.loc 2 387 9
 11363 0054 BB69     		ldr	r3, [r7, #24]
 11364              	.LBE1088:
 11365              	.LBE1087:
3953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 11366              		.loc 1 3955 7
 11367 0056 7B62     		str	r3, [r7, #36]
 11368 0058 0123     		movs	r3, #1
 11369 005a FB61     		str	r3, [r7, #28]
 11370              	.LBB1089:
 11371              	.LBB1090:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11372              		.loc 2 414 3
 11373 005c FB69     		ldr	r3, [r7, #28]
 11374              		.syntax divided
 11375              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11376 005e 83F31088 		MSR primask, r3
 11377              	@ 0 "" 2
 11378              		.loc 2 415 1
 11379              		.thumb
 11380              		.syntax unified
 11381 0062 C046     		nop
 11382              	.LBE1090:
 11383              	.LBE1089:
 11384              		.loc 1 3955 7
 11385 0064 7B68     		ldr	r3, [r7, #4]
 11386 0066 1B68     		ldr	r3, [r3]
 11387 0068 1A68     		ldr	r2, [r3]
 11388 006a 7B68     		ldr	r3, [r7, #4]
 11389 006c 1B68     		ldr	r3, [r3]
 11390 006e 4021     		movs	r1, #64
 11391 0070 0A43     		orrs	r2, r1
 11392 0072 1A60     		str	r2, [r3]
 11393 0074 7B6A     		ldr	r3, [r7, #36]
 11394 0076 3B62     		str	r3, [r7, #32]
 11395              	.LBB1091:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 281


 11396              	.LBB1092:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11397              		.loc 2 414 3
 11398 0078 3B6A     		ldr	r3, [r7, #32]
 11399              		.syntax divided
 11400              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11401 007a 83F31088 		MSR primask, r3
 11402              	@ 0 "" 2
 11403              		.loc 2 415 1
 11404              		.thumb
 11405              		.syntax unified
 11406 007e C046     		nop
 11407              	.LBE1092:
 11408              	.LBE1091:
 11409              	.LBE1086:
3956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
3958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
3959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       tmp = (const uint16_t *) huart->pTxBuffPtr;
3960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
3962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
3963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
3964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
3965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 11410              		.loc 1 3965 1
 11411 0080 18E0     		b	.L435
 11412              	.L432:
3959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 11413              		.loc 1 3959 11
 11414 0082 7B68     		ldr	r3, [r7, #4]
 11415 0084 DB6C     		ldr	r3, [r3, #76]
 11416 0086 FB62     		str	r3, [r7, #44]
3960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 11417              		.loc 1 3960 43
 11418 0088 FB6A     		ldr	r3, [r7, #44]
 11419 008a 1A88     		ldrh	r2, [r3]
3960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 11420              		.loc 1 3960 12
 11421 008c 7B68     		ldr	r3, [r7, #4]
 11422 008e 1B68     		ldr	r3, [r3]
3960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 11423              		.loc 1 3960 50
 11424 0090 D205     		lsls	r2, r2, #23
 11425 0092 D20D     		lsrs	r2, r2, #23
 11426 0094 92B2     		uxth	r2, r2
3960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 11427              		.loc 1 3960 28
 11428 0096 1A85     		strh	r2, [r3, #40]
3961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 11429              		.loc 1 3961 25
 11430 0098 7B68     		ldr	r3, [r7, #4]
 11431 009a DB6C     		ldr	r3, [r3, #76]
 11432 009c 9A1C     		adds	r2, r3, #2
 11433 009e 7B68     		ldr	r3, [r7, #4]
 11434 00a0 DA64     		str	r2, [r3, #76]
3962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 282


 11435              		.loc 1 3962 12
 11436 00a2 7B68     		ldr	r3, [r7, #4]
 11437 00a4 5222     		movs	r2, #82
 11438 00a6 9B5A     		ldrh	r3, [r3, r2]
 11439 00a8 9BB2     		uxth	r3, r3
3962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 11440              		.loc 1 3962 25
 11441 00aa 013B     		subs	r3, r3, #1
 11442 00ac 99B2     		uxth	r1, r3
 11443 00ae 7B68     		ldr	r3, [r7, #4]
 11444 00b0 5222     		movs	r2, #82
 11445 00b2 9952     		strh	r1, [r3, r2]
 11446              	.L435:
 11447              		.loc 1 3965 1
 11448 00b4 C046     		nop
 11449 00b6 BD46     		mov	sp, r7
 11450 00b8 0CB0     		add	sp, sp, #48
 11451              		@ sp needed
 11452 00ba 80BD     		pop	{r7, pc}
 11453              		.cfi_endproc
 11454              	.LFE102:
 11456              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 11457              		.align	1
 11458              		.syntax unified
 11459              		.code	16
 11460              		.thumb_func
 11462              	UART_EndTransmit_IT:
 11463              	.LFB103:
3966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 11464              		.loc 1 3975 1
 11465              		.cfi_startproc
 11466              		@ args = 0, pretend = 0, frame = 24
 11467              		@ frame_needed = 1, uses_anonymous_args = 0
 11468 0000 80B5     		push	{r7, lr}
 11469              	.LCFI189:
 11470              		.cfi_def_cfa_offset 8
 11471              		.cfi_offset 7, -8
 11472              		.cfi_offset 14, -4
 11473 0002 86B0     		sub	sp, sp, #24
 11474              	.LCFI190:
 11475              		.cfi_def_cfa_offset 32
 11476 0004 00AF     		add	r7, sp, #0
 11477              	.LCFI191:
 11478              		.cfi_def_cfa_register 7
 11479 0006 7860     		str	r0, [r7, #4]
 11480              	.LBB1093:
 11481              	.LBB1094:
 11482              	.LBB1095:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 283


 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 11483              		.loc 2 386 3
 11484              		.syntax divided
 11485              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11486 0008 EFF31083 		MRS r3, primask
 11487              	@ 0 "" 2
 11488              		.thumb
 11489              		.syntax unified
 11490 000c BB60     		str	r3, [r7, #8]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11491              		.loc 2 387 9
 11492 000e BB68     		ldr	r3, [r7, #8]
 11493              	.LBE1095:
 11494              	.LBE1094:
3976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 11495              		.loc 1 3977 3
 11496 0010 7B61     		str	r3, [r7, #20]
 11497 0012 0123     		movs	r3, #1
 11498 0014 FB60     		str	r3, [r7, #12]
 11499              	.LBB1096:
 11500              	.LBB1097:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11501              		.loc 2 414 3
 11502 0016 FB68     		ldr	r3, [r7, #12]
 11503              		.syntax divided
 11504              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11505 0018 83F31088 		MSR primask, r3
 11506              	@ 0 "" 2
 11507              		.loc 2 415 1
 11508              		.thumb
 11509              		.syntax unified
 11510 001c C046     		nop
 11511              	.LBE1097:
 11512              	.LBE1096:
 11513              		.loc 1 3977 3
 11514 001e 7B68     		ldr	r3, [r7, #4]
 11515 0020 1B68     		ldr	r3, [r3]
 11516 0022 1A68     		ldr	r2, [r3]
 11517 0024 7B68     		ldr	r3, [r7, #4]
 11518 0026 1B68     		ldr	r3, [r3]
 11519 0028 4021     		movs	r1, #64
 11520 002a 8A43     		bics	r2, r1
 11521 002c 1A60     		str	r2, [r3]
 11522 002e 7B69     		ldr	r3, [r7, #20]
 11523 0030 3B61     		str	r3, [r7, #16]
 11524              	.LBB1098:
 11525              	.LBB1099:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11526              		.loc 2 414 3
 11527 0032 3B69     		ldr	r3, [r7, #16]
 11528              		.syntax divided
 11529              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11530 0034 83F31088 		MSR primask, r3
 11531              	@ 0 "" 2
 11532              		.loc 2 415 1
 11533              		.thumb
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 284


 11534              		.syntax unified
 11535 0038 C046     		nop
 11536              	.LBE1099:
 11537              	.LBE1098:
 11538              	.LBE1093:
3978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 11539              		.loc 1 3980 17
 11540 003a 7B68     		ldr	r3, [r7, #4]
 11541 003c 2022     		movs	r2, #32
 11542 003e DA67     		str	r2, [r3, #124]
3981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxISR = NULL;
 11543              		.loc 1 3983 16
 11544 0040 7B68     		ldr	r3, [r7, #4]
 11545 0042 0022     		movs	r2, #0
 11546 0044 DA66     		str	r2, [r3, #108]
3984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
3989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 11547              		.loc 1 3990 3
 11548 0046 7B68     		ldr	r3, [r7, #4]
 11549 0048 1800     		movs	r0, r3
 11550 004a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
3991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 11551              		.loc 1 3992 1
 11552 004e C046     		nop
 11553 0050 BD46     		mov	sp, r7
 11554 0052 06B0     		add	sp, sp, #24
 11555              		@ sp needed
 11556 0054 80BD     		pop	{r7, pc}
 11557              		.cfi_endproc
 11558              	.LFE103:
 11560              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 11561              		.align	1
 11562              		.syntax unified
 11563              		.code	16
 11564              		.thumb_func
 11566              	UART_RxISR_8BIT:
 11567              	.LFB104:
3993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
3994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
3995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8 bits data word length .
3996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
3997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
3998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
3999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
4000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 11568              		.loc 1 4000 1
 11569              		.cfi_startproc
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 285


 11570              		@ args = 0, pretend = 0, frame = 80
 11571              		@ frame_needed = 1, uses_anonymous_args = 0
 11572 0000 80B5     		push	{r7, lr}
 11573              	.LCFI192:
 11574              		.cfi_def_cfa_offset 8
 11575              		.cfi_offset 7, -8
 11576              		.cfi_offset 14, -4
 11577 0002 94B0     		sub	sp, sp, #80
 11578              	.LCFI193:
 11579              		.cfi_def_cfa_offset 88
 11580 0004 00AF     		add	r7, sp, #0
 11581              	.LCFI194:
 11582              		.cfi_def_cfa_register 7
 11583 0006 7860     		str	r0, [r7, #4]
4001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 11584              		.loc 1 4001 12
 11585 0008 4E20     		movs	r0, #78
 11586 000a 3B18     		adds	r3, r7, r0
 11587 000c 7A68     		ldr	r2, [r7, #4]
 11588 000e 5C21     		movs	r1, #92
 11589 0010 525A     		ldrh	r2, [r2, r1]
 11590 0012 1A80     		strh	r2, [r3]
4002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhdata;
4003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 11591              		.loc 1 4005 12
 11592 0014 7B68     		ldr	r3, [r7, #4]
 11593 0016 8022     		movs	r2, #128
 11594 0018 9B58     		ldr	r3, [r3, r2]
 11595              		.loc 1 4005 6
 11596 001a 222B     		cmp	r3, #34
 11597 001c 00D0     		beq	.LCB8774
 11598 001e BAE0     		b	.L439	@long jump
 11599              	.LCB8774:
4006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
4007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 11600              		.loc 1 4007 25
 11601 0020 7B68     		ldr	r3, [r7, #4]
 11602 0022 1A68     		ldr	r2, [r3]
 11603              		.loc 1 4007 12
 11604 0024 4C21     		movs	r1, #76
 11605 0026 7B18     		adds	r3, r7, r1
 11606 0028 928C     		ldrh	r2, [r2, #36]
 11607 002a 1A80     		strh	r2, [r3]
4008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 11608              		.loc 1 4008 26
 11609 002c 7B18     		adds	r3, r7, r1
 11610 002e 1B88     		ldrh	r3, [r3]
 11611 0030 DAB2     		uxtb	r2, r3
 11612              		.loc 1 4008 45
 11613 0032 3B18     		adds	r3, r7, r0
 11614 0034 1B88     		ldrh	r3, [r3]
 11615 0036 D9B2     		uxtb	r1, r3
 11616              		.loc 1 4008 11
 11617 0038 7B68     		ldr	r3, [r7, #4]
 11618 003a 5B6D     		ldr	r3, [r3, #84]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 286


 11619              		.loc 1 4008 26
 11620 003c 0A40     		ands	r2, r1
 11621 003e D2B2     		uxtb	r2, r2
 11622              		.loc 1 4008 24
 11623 0040 1A70     		strb	r2, [r3]
4009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr++;
 11624              		.loc 1 4009 10
 11625 0042 7B68     		ldr	r3, [r7, #4]
 11626 0044 5B6D     		ldr	r3, [r3, #84]
 11627              		.loc 1 4009 22
 11628 0046 5A1C     		adds	r2, r3, #1
 11629 0048 7B68     		ldr	r3, [r7, #4]
 11630 004a 5A65     		str	r2, [r3, #84]
4010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount--;
 11631              		.loc 1 4010 10
 11632 004c 7B68     		ldr	r3, [r7, #4]
 11633 004e 5A22     		movs	r2, #90
 11634 0050 9B5A     		ldrh	r3, [r3, r2]
 11635 0052 9BB2     		uxth	r3, r3
 11636              		.loc 1 4010 23
 11637 0054 013B     		subs	r3, r3, #1
 11638 0056 99B2     		uxth	r1, r3
 11639 0058 7B68     		ldr	r3, [r7, #4]
 11640 005a 5A22     		movs	r2, #90
 11641 005c 9952     		strh	r1, [r3, r2]
4011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 11642              		.loc 1 4012 14
 11643 005e 7B68     		ldr	r3, [r7, #4]
 11644 0060 5A22     		movs	r2, #90
 11645 0062 9B5A     		ldrh	r3, [r3, r2]
 11646 0064 9BB2     		uxth	r3, r3
 11647              		.loc 1 4012 8
 11648 0066 002B     		cmp	r3, #0
 11649 0068 00D0     		beq	.LCB8813
 11650 006a 9CE0     		b	.L448	@long jump
 11651              	.LCB8813:
 11652              	.LBB1100:
 11653              	.LBB1101:
 11654              	.LBB1102:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 11655              		.loc 2 386 3
 11656              		.syntax divided
 11657              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11658 006c EFF31083 		MRS r3, primask
 11659              	@ 0 "" 2
 11660              		.thumb
 11661              		.syntax unified
 11662 0070 7B62     		str	r3, [r7, #36]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11663              		.loc 2 387 9
 11664 0072 7B6A     		ldr	r3, [r7, #36]
 11665              	.LBE1102:
 11666              	.LBE1101:
4013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
4014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
4015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 287


 11667              		.loc 1 4015 7
 11668 0074 BB64     		str	r3, [r7, #72]
 11669 0076 0123     		movs	r3, #1
 11670 0078 BB62     		str	r3, [r7, #40]
 11671              	.LBB1103:
 11672              	.LBB1104:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11673              		.loc 2 414 3
 11674 007a BB6A     		ldr	r3, [r7, #40]
 11675              		.syntax divided
 11676              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11677 007c 83F31088 		MSR primask, r3
 11678              	@ 0 "" 2
 11679              		.loc 2 415 1
 11680              		.thumb
 11681              		.syntax unified
 11682 0080 C046     		nop
 11683              	.LBE1104:
 11684              	.LBE1103:
 11685              		.loc 1 4015 7
 11686 0082 7B68     		ldr	r3, [r7, #4]
 11687 0084 1B68     		ldr	r3, [r3]
 11688 0086 1A68     		ldr	r2, [r3]
 11689 0088 7B68     		ldr	r3, [r7, #4]
 11690 008a 1B68     		ldr	r3, [r3]
 11691 008c 4849     		ldr	r1, .L449
 11692 008e 0A40     		ands	r2, r1
 11693 0090 1A60     		str	r2, [r3]
 11694 0092 BB6C     		ldr	r3, [r7, #72]
 11695 0094 FB62     		str	r3, [r7, #44]
 11696              	.LBB1105:
 11697              	.LBB1106:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11698              		.loc 2 414 3
 11699 0096 FB6A     		ldr	r3, [r7, #44]
 11700              		.syntax divided
 11701              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11702 0098 83F31088 		MSR primask, r3
 11703              	@ 0 "" 2
 11704              		.loc 2 415 1
 11705              		.thumb
 11706              		.syntax unified
 11707 009c C046     		nop
 11708              	.LBE1106:
 11709              	.LBE1105:
 11710              	.LBE1100:
 11711              	.LBB1107:
 11712              	.LBB1108:
 11713              	.LBB1109:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 11714              		.loc 2 386 3
 11715              		.syntax divided
 11716              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11717 009e EFF31083 		MRS r3, primask
 11718              	@ 0 "" 2
 11719              		.thumb
 11720              		.syntax unified
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 288


 11721 00a2 3B63     		str	r3, [r7, #48]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11722              		.loc 2 387 9
 11723 00a4 3B6B     		ldr	r3, [r7, #48]
 11724              	.LBE1109:
 11725              	.LBE1108:
4016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 11726              		.loc 1 4018 7
 11727 00a6 7B64     		str	r3, [r7, #68]
 11728 00a8 0123     		movs	r3, #1
 11729 00aa 7B63     		str	r3, [r7, #52]
 11730              	.LBB1110:
 11731              	.LBB1111:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11732              		.loc 2 414 3
 11733 00ac 7B6B     		ldr	r3, [r7, #52]
 11734              		.syntax divided
 11735              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11736 00ae 83F31088 		MSR primask, r3
 11737              	@ 0 "" 2
 11738              		.loc 2 415 1
 11739              		.thumb
 11740              		.syntax unified
 11741 00b2 C046     		nop
 11742              	.LBE1111:
 11743              	.LBE1110:
 11744              		.loc 1 4018 7
 11745 00b4 7B68     		ldr	r3, [r7, #4]
 11746 00b6 1B68     		ldr	r3, [r3]
 11747 00b8 9A68     		ldr	r2, [r3, #8]
 11748 00ba 7B68     		ldr	r3, [r7, #4]
 11749 00bc 1B68     		ldr	r3, [r3]
 11750 00be 0121     		movs	r1, #1
 11751 00c0 8A43     		bics	r2, r1
 11752 00c2 9A60     		str	r2, [r3, #8]
 11753 00c4 7B6C     		ldr	r3, [r7, #68]
 11754 00c6 BB63     		str	r3, [r7, #56]
 11755              	.LBB1112:
 11756              	.LBB1113:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11757              		.loc 2 414 3
 11758 00c8 BB6B     		ldr	r3, [r7, #56]
 11759              		.syntax divided
 11760              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11761 00ca 83F31088 		MSR primask, r3
 11762              	@ 0 "" 2
 11763              		.loc 2 415 1
 11764              		.thumb
 11765              		.syntax unified
 11766 00ce C046     		nop
 11767              	.LBE1113:
 11768              	.LBE1112:
 11769              	.LBE1107:
4019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 289


4021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 11770              		.loc 1 4021 22
 11771 00d0 7B68     		ldr	r3, [r7, #4]
 11772 00d2 8022     		movs	r2, #128
 11773 00d4 2021     		movs	r1, #32
 11774 00d6 9950     		str	r1, [r3, r2]
4022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear RxISR function pointer */
4024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxISR = NULL;
 11775              		.loc 1 4024 20
 11776 00d8 7B68     		ldr	r3, [r7, #4]
 11777 00da 0022     		movs	r2, #0
 11778 00dc 9A66     		str	r2, [r3, #104]
4025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Initialize type of RxEvent to Transfer Complete */
4027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxEventType = HAL_UART_RXEVENT_TC;
 11779              		.loc 1 4027 26
 11780 00de 7B68     		ldr	r3, [r7, #4]
 11781 00e0 0022     		movs	r2, #0
 11782 00e2 5A66     		str	r2, [r3, #100]
4028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
4030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 11783              		.loc 1 4030 11
 11784 00e4 7B68     		ldr	r3, [r7, #4]
 11785 00e6 1B68     		ldr	r3, [r3]
 11786 00e8 5A68     		ldr	r2, [r3, #4]
 11787 00ea 8023     		movs	r3, #128
 11788 00ec 1B04     		lsls	r3, r3, #16
 11789 00ee 1340     		ands	r3, r2
 11790              		.loc 1 4030 10
 11791 00f0 18D0     		beq	.L443
 11792              	.LBB1114:
 11793              	.LBB1115:
 11794              	.LBB1116:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 11795              		.loc 2 386 3
 11796              		.syntax divided
 11797              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11798 00f2 EFF31083 		MRS r3, primask
 11799              	@ 0 "" 2
 11800              		.thumb
 11801              		.syntax unified
 11802 00f6 BB61     		str	r3, [r7, #24]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11803              		.loc 2 387 9
 11804 00f8 BB69     		ldr	r3, [r7, #24]
 11805              	.LBE1116:
 11806              	.LBE1115:
4031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
4032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
4033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 11807              		.loc 1 4033 9
 11808 00fa 3B64     		str	r3, [r7, #64]
 11809 00fc 0123     		movs	r3, #1
 11810 00fe FB61     		str	r3, [r7, #28]
 11811              	.LBB1117:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 290


 11812              	.LBB1118:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11813              		.loc 2 414 3
 11814 0100 FB69     		ldr	r3, [r7, #28]
 11815              		.syntax divided
 11816              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11817 0102 83F31088 		MSR primask, r3
 11818              	@ 0 "" 2
 11819              		.loc 2 415 1
 11820              		.thumb
 11821              		.syntax unified
 11822 0106 C046     		nop
 11823              	.LBE1118:
 11824              	.LBE1117:
 11825              		.loc 1 4033 9
 11826 0108 7B68     		ldr	r3, [r7, #4]
 11827 010a 1B68     		ldr	r3, [r3]
 11828 010c 1A68     		ldr	r2, [r3]
 11829 010e 7B68     		ldr	r3, [r7, #4]
 11830 0110 1B68     		ldr	r3, [r3]
 11831 0112 2849     		ldr	r1, .L449+4
 11832 0114 0A40     		ands	r2, r1
 11833 0116 1A60     		str	r2, [r3]
 11834 0118 3B6C     		ldr	r3, [r7, #64]
 11835 011a 3B62     		str	r3, [r7, #32]
 11836              	.LBB1119:
 11837              	.LBB1120:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11838              		.loc 2 414 3
 11839 011c 3B6A     		ldr	r3, [r7, #32]
 11840              		.syntax divided
 11841              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11842 011e 83F31088 		MSR primask, r3
 11843              	@ 0 "" 2
 11844              		.loc 2 415 1
 11845              		.thumb
 11846              		.syntax unified
 11847 0122 C046     		nop
 11848              	.L443:
 11849              	.LBE1120:
 11850              	.LBE1119:
 11851              	.LBE1114:
4034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
4035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Check current reception Mode :
4037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 11852              		.loc 1 4038 16
 11853 0124 7B68     		ldr	r3, [r7, #4]
 11854 0126 1B6E     		ldr	r3, [r3, #96]
 11855              		.loc 1 4038 10
 11856 0128 012B     		cmp	r3, #1
 11857 012a 2FD1     		bne	.L445
4039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
4040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Set reception type to Standard */
4041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 11858              		.loc 1 4041 30
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 291


 11859 012c 7B68     		ldr	r3, [r7, #4]
 11860 012e 0022     		movs	r2, #0
 11861 0130 1A66     		str	r2, [r3, #96]
 11862              	.LBB1121:
 11863              	.LBB1122:
 11864              	.LBB1123:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 11865              		.loc 2 386 3
 11866              		.syntax divided
 11867              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11868 0132 EFF31083 		MRS r3, primask
 11869              	@ 0 "" 2
 11870              		.thumb
 11871              		.syntax unified
 11872 0136 FB60     		str	r3, [r7, #12]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11873              		.loc 2 387 9
 11874 0138 FB68     		ldr	r3, [r7, #12]
 11875              	.LBE1123:
 11876              	.LBE1122:
4042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable IDLE interrupt */
4044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 11877              		.loc 1 4044 9
 11878 013a FB63     		str	r3, [r7, #60]
 11879 013c 0123     		movs	r3, #1
 11880 013e 3B61     		str	r3, [r7, #16]
 11881              	.LBB1124:
 11882              	.LBB1125:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11883              		.loc 2 414 3
 11884 0140 3B69     		ldr	r3, [r7, #16]
 11885              		.syntax divided
 11886              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11887 0142 83F31088 		MSR primask, r3
 11888              	@ 0 "" 2
 11889              		.loc 2 415 1
 11890              		.thumb
 11891              		.syntax unified
 11892 0146 C046     		nop
 11893              	.LBE1125:
 11894              	.LBE1124:
 11895              		.loc 1 4044 9
 11896 0148 7B68     		ldr	r3, [r7, #4]
 11897 014a 1B68     		ldr	r3, [r3]
 11898 014c 1A68     		ldr	r2, [r3]
 11899 014e 7B68     		ldr	r3, [r7, #4]
 11900 0150 1B68     		ldr	r3, [r3]
 11901 0152 1021     		movs	r1, #16
 11902 0154 8A43     		bics	r2, r1
 11903 0156 1A60     		str	r2, [r3]
 11904 0158 FB6B     		ldr	r3, [r7, #60]
 11905 015a 7B61     		str	r3, [r7, #20]
 11906              	.LBB1126:
 11907              	.LBB1127:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11908              		.loc 2 414 3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 292


 11909 015c 7B69     		ldr	r3, [r7, #20]
 11910              		.syntax divided
 11911              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11912 015e 83F31088 		MSR primask, r3
 11913              	@ 0 "" 2
 11914              		.loc 2 415 1
 11915              		.thumb
 11916              		.syntax unified
 11917 0162 C046     		nop
 11918              	.LBE1127:
 11919              	.LBE1126:
 11920              	.LBE1121:
4045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 11921              		.loc 1 4046 13
 11922 0164 7B68     		ldr	r3, [r7, #4]
 11923 0166 1B68     		ldr	r3, [r3]
 11924 0168 DB69     		ldr	r3, [r3, #28]
 11925 016a 1022     		movs	r2, #16
 11926 016c 1340     		ands	r3, r2
 11927              		.loc 1 4046 12
 11928 016e 102B     		cmp	r3, #16
 11929 0170 03D1     		bne	.L447
4047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
4048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Clear IDLE Flag */
4049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 11930              		.loc 1 4049 11
 11931 0172 7B68     		ldr	r3, [r7, #4]
 11932 0174 1B68     		ldr	r3, [r3]
 11933 0176 1022     		movs	r2, #16
 11934 0178 1A62     		str	r2, [r3, #32]
 11935              	.L447:
4050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
4051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
4056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 11936              		.loc 1 4057 9
 11937 017a 7B68     		ldr	r3, [r7, #4]
 11938 017c 5822     		movs	r2, #88
 11939 017e 9A5A     		ldrh	r2, [r3, r2]
 11940 0180 7B68     		ldr	r3, [r7, #4]
 11941 0182 1100     		movs	r1, r2
 11942 0184 1800     		movs	r0, r3
 11943 0186 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
4058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
4060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
4061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
4062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Standard reception API called */
4063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 293


4067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
4069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
4071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
4072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
4073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
4074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
4075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
4078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 11944              		.loc 1 4078 1
 11945 018a 0CE0     		b	.L448
 11946              	.L445:
4068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 11947              		.loc 1 4068 9
 11948 018c 7B68     		ldr	r3, [r7, #4]
 11949 018e 1800     		movs	r0, r3
 11950 0190 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 11951              		.loc 1 4078 1
 11952 0194 07E0     		b	.L448
 11953              	.L439:
4076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 11954              		.loc 1 4076 5
 11955 0196 7B68     		ldr	r3, [r7, #4]
 11956 0198 1B68     		ldr	r3, [r3]
 11957 019a 9A69     		ldr	r2, [r3, #24]
 11958 019c 7B68     		ldr	r3, [r7, #4]
 11959 019e 1B68     		ldr	r3, [r3]
 11960 01a0 0821     		movs	r1, #8
 11961 01a2 0A43     		orrs	r2, r1
 11962 01a4 9A61     		str	r2, [r3, #24]
 11963              	.L448:
 11964              		.loc 1 4078 1
 11965 01a6 C046     		nop
 11966 01a8 BD46     		mov	sp, r7
 11967 01aa 14B0     		add	sp, sp, #80
 11968              		@ sp needed
 11969 01ac 80BD     		pop	{r7, pc}
 11970              	.L450:
 11971 01ae C046     		.align	2
 11972              	.L449:
 11973 01b0 DFFEFFFF 		.word	-289
 11974 01b4 FFFFFFFB 		.word	-67108865
 11975              		.cfi_endproc
 11976              	.LFE104:
 11978              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 11979              		.align	1
 11980              		.syntax unified
 11981              		.code	16
 11982              		.thumb_func
 11984              	UART_RxISR_16BIT:
 11985              	.LFB105:
4079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
4081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length .
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 294


4082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
4085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
4086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
4087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
4088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 11986              		.loc 1 4088 1
 11987              		.cfi_startproc
 11988              		@ args = 0, pretend = 0, frame = 80
 11989              		@ frame_needed = 1, uses_anonymous_args = 0
 11990 0000 80B5     		push	{r7, lr}
 11991              	.LCFI195:
 11992              		.cfi_def_cfa_offset 8
 11993              		.cfi_offset 7, -8
 11994              		.cfi_offset 14, -4
 11995 0002 94B0     		sub	sp, sp, #80
 11996              	.LCFI196:
 11997              		.cfi_def_cfa_offset 88
 11998 0004 00AF     		add	r7, sp, #0
 11999              	.LCFI197:
 12000              		.cfi_def_cfa_register 7
 12001 0006 7860     		str	r0, [r7, #4]
4089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t *tmp;
4090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 12002              		.loc 1 4090 12
 12003 0008 4E20     		movs	r0, #78
 12004 000a 3B18     		adds	r3, r7, r0
 12005 000c 7A68     		ldr	r2, [r7, #4]
 12006 000e 5C21     		movs	r1, #92
 12007 0010 525A     		ldrh	r2, [r2, r1]
 12008 0012 1A80     		strh	r2, [r3]
4091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhdata;
4092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 12009              		.loc 1 4094 12
 12010 0014 7B68     		ldr	r3, [r7, #4]
 12011 0016 8022     		movs	r2, #128
 12012 0018 9B58     		ldr	r3, [r3, r2]
 12013              		.loc 1 4094 6
 12014 001a 222B     		cmp	r3, #34
 12015 001c 00D0     		beq	.LCB9069
 12016 001e BAE0     		b	.L452	@long jump
 12017              	.LCB9069:
4095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
4096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 12018              		.loc 1 4096 25
 12019 0020 7B68     		ldr	r3, [r7, #4]
 12020 0022 1A68     		ldr	r2, [r3]
 12021              		.loc 1 4096 12
 12022 0024 4C21     		movs	r1, #76
 12023 0026 7B18     		adds	r3, r7, r1
 12024 0028 928C     		ldrh	r2, [r2, #36]
 12025 002a 1A80     		strh	r2, [r3]
4097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 12026              		.loc 1 4097 9
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 295


 12027 002c 7B68     		ldr	r3, [r7, #4]
 12028 002e 5B6D     		ldr	r3, [r3, #84]
 12029 0030 BB64     		str	r3, [r7, #72]
4098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 12030              		.loc 1 4098 12
 12031 0032 7B18     		adds	r3, r7, r1
 12032 0034 3A18     		adds	r2, r7, r0
 12033 0036 1B88     		ldrh	r3, [r3]
 12034 0038 1288     		ldrh	r2, [r2]
 12035 003a 1340     		ands	r3, r2
 12036 003c 9AB2     		uxth	r2, r3
 12037              		.loc 1 4098 10
 12038 003e BB6C     		ldr	r3, [r7, #72]
 12039 0040 1A80     		strh	r2, [r3]
4099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 12040              		.loc 1 4099 23
 12041 0042 7B68     		ldr	r3, [r7, #4]
 12042 0044 5B6D     		ldr	r3, [r3, #84]
 12043 0046 9A1C     		adds	r2, r3, #2
 12044 0048 7B68     		ldr	r3, [r7, #4]
 12045 004a 5A65     		str	r2, [r3, #84]
4100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount--;
 12046              		.loc 1 4100 10
 12047 004c 7B68     		ldr	r3, [r7, #4]
 12048 004e 5A22     		movs	r2, #90
 12049 0050 9B5A     		ldrh	r3, [r3, r2]
 12050 0052 9BB2     		uxth	r3, r3
 12051              		.loc 1 4100 23
 12052 0054 013B     		subs	r3, r3, #1
 12053 0056 99B2     		uxth	r1, r3
 12054 0058 7B68     		ldr	r3, [r7, #4]
 12055 005a 5A22     		movs	r2, #90
 12056 005c 9952     		strh	r1, [r3, r2]
4101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 12057              		.loc 1 4102 14
 12058 005e 7B68     		ldr	r3, [r7, #4]
 12059 0060 5A22     		movs	r2, #90
 12060 0062 9B5A     		ldrh	r3, [r3, r2]
 12061 0064 9BB2     		uxth	r3, r3
 12062              		.loc 1 4102 8
 12063 0066 002B     		cmp	r3, #0
 12064 0068 00D0     		beq	.LCB9108
 12065 006a 9CE0     		b	.L461	@long jump
 12066              	.LCB9108:
 12067              	.LBB1128:
 12068              	.LBB1129:
 12069              	.LBB1130:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 12070              		.loc 2 386 3
 12071              		.syntax divided
 12072              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12073 006c EFF31083 		MRS r3, primask
 12074              	@ 0 "" 2
 12075              		.thumb
 12076              		.syntax unified
 12077 0070 3B62     		str	r3, [r7, #32]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 296


 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12078              		.loc 2 387 9
 12079 0072 3B6A     		ldr	r3, [r7, #32]
 12080              	.LBE1130:
 12081              	.LBE1129:
4103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
4104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
4105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 12082              		.loc 1 4105 7
 12083 0074 7B64     		str	r3, [r7, #68]
 12084 0076 0123     		movs	r3, #1
 12085 0078 7B62     		str	r3, [r7, #36]
 12086              	.LBB1131:
 12087              	.LBB1132:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12088              		.loc 2 414 3
 12089 007a 7B6A     		ldr	r3, [r7, #36]
 12090              		.syntax divided
 12091              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12092 007c 83F31088 		MSR primask, r3
 12093              	@ 0 "" 2
 12094              		.loc 2 415 1
 12095              		.thumb
 12096              		.syntax unified
 12097 0080 C046     		nop
 12098              	.LBE1132:
 12099              	.LBE1131:
 12100              		.loc 1 4105 7
 12101 0082 7B68     		ldr	r3, [r7, #4]
 12102 0084 1B68     		ldr	r3, [r3]
 12103 0086 1A68     		ldr	r2, [r3]
 12104 0088 7B68     		ldr	r3, [r7, #4]
 12105 008a 1B68     		ldr	r3, [r3]
 12106 008c 4849     		ldr	r1, .L462
 12107 008e 0A40     		ands	r2, r1
 12108 0090 1A60     		str	r2, [r3]
 12109 0092 7B6C     		ldr	r3, [r7, #68]
 12110 0094 BB62     		str	r3, [r7, #40]
 12111              	.LBB1133:
 12112              	.LBB1134:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12113              		.loc 2 414 3
 12114 0096 BB6A     		ldr	r3, [r7, #40]
 12115              		.syntax divided
 12116              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12117 0098 83F31088 		MSR primask, r3
 12118              	@ 0 "" 2
 12119              		.loc 2 415 1
 12120              		.thumb
 12121              		.syntax unified
 12122 009c C046     		nop
 12123              	.LBE1134:
 12124              	.LBE1133:
 12125              	.LBE1128:
 12126              	.LBB1135:
 12127              	.LBB1136:
 12128              	.LBB1137:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 297


 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 12129              		.loc 2 386 3
 12130              		.syntax divided
 12131              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12132 009e EFF31083 		MRS r3, primask
 12133              	@ 0 "" 2
 12134              		.thumb
 12135              		.syntax unified
 12136 00a2 FB62     		str	r3, [r7, #44]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12137              		.loc 2 387 9
 12138 00a4 FB6A     		ldr	r3, [r7, #44]
 12139              	.LBE1137:
 12140              	.LBE1136:
4106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 12141              		.loc 1 4108 7
 12142 00a6 3B64     		str	r3, [r7, #64]
 12143 00a8 0123     		movs	r3, #1
 12144 00aa 3B63     		str	r3, [r7, #48]
 12145              	.LBB1138:
 12146              	.LBB1139:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12147              		.loc 2 414 3
 12148 00ac 3B6B     		ldr	r3, [r7, #48]
 12149              		.syntax divided
 12150              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12151 00ae 83F31088 		MSR primask, r3
 12152              	@ 0 "" 2
 12153              		.loc 2 415 1
 12154              		.thumb
 12155              		.syntax unified
 12156 00b2 C046     		nop
 12157              	.LBE1139:
 12158              	.LBE1138:
 12159              		.loc 1 4108 7
 12160 00b4 7B68     		ldr	r3, [r7, #4]
 12161 00b6 1B68     		ldr	r3, [r3]
 12162 00b8 9A68     		ldr	r2, [r3, #8]
 12163 00ba 7B68     		ldr	r3, [r7, #4]
 12164 00bc 1B68     		ldr	r3, [r3]
 12165 00be 0121     		movs	r1, #1
 12166 00c0 8A43     		bics	r2, r1
 12167 00c2 9A60     		str	r2, [r3, #8]
 12168 00c4 3B6C     		ldr	r3, [r7, #64]
 12169 00c6 7B63     		str	r3, [r7, #52]
 12170              	.LBB1140:
 12171              	.LBB1141:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12172              		.loc 2 414 3
 12173 00c8 7B6B     		ldr	r3, [r7, #52]
 12174              		.syntax divided
 12175              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12176 00ca 83F31088 		MSR primask, r3
 12177              	@ 0 "" 2
 12178              		.loc 2 415 1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 298


 12179              		.thumb
 12180              		.syntax unified
 12181 00ce C046     		nop
 12182              	.LBE1141:
 12183              	.LBE1140:
 12184              	.LBE1135:
4109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 12185              		.loc 1 4111 22
 12186 00d0 7B68     		ldr	r3, [r7, #4]
 12187 00d2 8022     		movs	r2, #128
 12188 00d4 2021     		movs	r1, #32
 12189 00d6 9950     		str	r1, [r3, r2]
4112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear RxISR function pointer */
4114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxISR = NULL;
 12190              		.loc 1 4114 20
 12191 00d8 7B68     		ldr	r3, [r7, #4]
 12192 00da 0022     		movs	r2, #0
 12193 00dc 9A66     		str	r2, [r3, #104]
4115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Initialize type of RxEvent to Transfer Complete */
4117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxEventType = HAL_UART_RXEVENT_TC;
 12194              		.loc 1 4117 26
 12195 00de 7B68     		ldr	r3, [r7, #4]
 12196 00e0 0022     		movs	r2, #0
 12197 00e2 5A66     		str	r2, [r3, #100]
4118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
4120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 12198              		.loc 1 4120 11
 12199 00e4 7B68     		ldr	r3, [r7, #4]
 12200 00e6 1B68     		ldr	r3, [r3]
 12201 00e8 5A68     		ldr	r2, [r3, #4]
 12202 00ea 8023     		movs	r3, #128
 12203 00ec 1B04     		lsls	r3, r3, #16
 12204 00ee 1340     		ands	r3, r2
 12205              		.loc 1 4120 10
 12206 00f0 18D0     		beq	.L456
 12207              	.LBB1142:
 12208              	.LBB1143:
 12209              	.LBB1144:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 12210              		.loc 2 386 3
 12211              		.syntax divided
 12212              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12213 00f2 EFF31083 		MRS r3, primask
 12214              	@ 0 "" 2
 12215              		.thumb
 12216              		.syntax unified
 12217 00f6 7B61     		str	r3, [r7, #20]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12218              		.loc 2 387 9
 12219 00f8 7B69     		ldr	r3, [r7, #20]
 12220              	.LBE1144:
 12221              	.LBE1143:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 299


4121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
4122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
4123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 12222              		.loc 1 4123 9
 12223 00fa FB63     		str	r3, [r7, #60]
 12224 00fc 0123     		movs	r3, #1
 12225 00fe BB61     		str	r3, [r7, #24]
 12226              	.LBB1145:
 12227              	.LBB1146:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12228              		.loc 2 414 3
 12229 0100 BB69     		ldr	r3, [r7, #24]
 12230              		.syntax divided
 12231              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12232 0102 83F31088 		MSR primask, r3
 12233              	@ 0 "" 2
 12234              		.loc 2 415 1
 12235              		.thumb
 12236              		.syntax unified
 12237 0106 C046     		nop
 12238              	.LBE1146:
 12239              	.LBE1145:
 12240              		.loc 1 4123 9
 12241 0108 7B68     		ldr	r3, [r7, #4]
 12242 010a 1B68     		ldr	r3, [r3]
 12243 010c 1A68     		ldr	r2, [r3]
 12244 010e 7B68     		ldr	r3, [r7, #4]
 12245 0110 1B68     		ldr	r3, [r3]
 12246 0112 2849     		ldr	r1, .L462+4
 12247 0114 0A40     		ands	r2, r1
 12248 0116 1A60     		str	r2, [r3]
 12249 0118 FB6B     		ldr	r3, [r7, #60]
 12250 011a FB61     		str	r3, [r7, #28]
 12251              	.LBB1147:
 12252              	.LBB1148:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12253              		.loc 2 414 3
 12254 011c FB69     		ldr	r3, [r7, #28]
 12255              		.syntax divided
 12256              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12257 011e 83F31088 		MSR primask, r3
 12258              	@ 0 "" 2
 12259              		.loc 2 415 1
 12260              		.thumb
 12261              		.syntax unified
 12262 0122 C046     		nop
 12263              	.L456:
 12264              	.LBE1148:
 12265              	.LBE1147:
 12266              	.LBE1142:
4124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
4125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Check current reception Mode :
4127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 12267              		.loc 1 4128 16
 12268 0124 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 300


 12269 0126 1B6E     		ldr	r3, [r3, #96]
 12270              		.loc 1 4128 10
 12271 0128 012B     		cmp	r3, #1
 12272 012a 2FD1     		bne	.L458
4129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
4130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Set reception type to Standard */
4131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 12273              		.loc 1 4131 30
 12274 012c 7B68     		ldr	r3, [r7, #4]
 12275 012e 0022     		movs	r2, #0
 12276 0130 1A66     		str	r2, [r3, #96]
 12277              	.LBB1149:
 12278              	.LBB1150:
 12279              	.LBB1151:
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 12280              		.loc 2 386 3
 12281              		.syntax divided
 12282              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12283 0132 EFF31083 		MRS r3, primask
 12284              	@ 0 "" 2
 12285              		.thumb
 12286              		.syntax unified
 12287 0136 BB60     		str	r3, [r7, #8]
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12288              		.loc 2 387 9
 12289 0138 BB68     		ldr	r3, [r7, #8]
 12290              	.LBE1151:
 12291              	.LBE1150:
4132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable IDLE interrupt */
4134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 12292              		.loc 1 4134 9
 12293 013a BB63     		str	r3, [r7, #56]
 12294 013c 0123     		movs	r3, #1
 12295 013e FB60     		str	r3, [r7, #12]
 12296              	.LBB1152:
 12297              	.LBB1153:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12298              		.loc 2 414 3
 12299 0140 FB68     		ldr	r3, [r7, #12]
 12300              		.syntax divided
 12301              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12302 0142 83F31088 		MSR primask, r3
 12303              	@ 0 "" 2
 12304              		.loc 2 415 1
 12305              		.thumb
 12306              		.syntax unified
 12307 0146 C046     		nop
 12308              	.LBE1153:
 12309              	.LBE1152:
 12310              		.loc 1 4134 9
 12311 0148 7B68     		ldr	r3, [r7, #4]
 12312 014a 1B68     		ldr	r3, [r3]
 12313 014c 1A68     		ldr	r2, [r3]
 12314 014e 7B68     		ldr	r3, [r7, #4]
 12315 0150 1B68     		ldr	r3, [r3]
 12316 0152 1021     		movs	r1, #16
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 301


 12317 0154 8A43     		bics	r2, r1
 12318 0156 1A60     		str	r2, [r3]
 12319 0158 BB6B     		ldr	r3, [r7, #56]
 12320 015a 3B61     		str	r3, [r7, #16]
 12321              	.LBB1154:
 12322              	.LBB1155:
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12323              		.loc 2 414 3
 12324 015c 3B69     		ldr	r3, [r7, #16]
 12325              		.syntax divided
 12326              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12327 015e 83F31088 		MSR primask, r3
 12328              	@ 0 "" 2
 12329              		.loc 2 415 1
 12330              		.thumb
 12331              		.syntax unified
 12332 0162 C046     		nop
 12333              	.LBE1155:
 12334              	.LBE1154:
 12335              	.LBE1149:
4135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 12336              		.loc 1 4136 13
 12337 0164 7B68     		ldr	r3, [r7, #4]
 12338 0166 1B68     		ldr	r3, [r3]
 12339 0168 DB69     		ldr	r3, [r3, #28]
 12340 016a 1022     		movs	r2, #16
 12341 016c 1340     		ands	r3, r2
 12342              		.loc 1 4136 12
 12343 016e 102B     		cmp	r3, #16
 12344 0170 03D1     		bne	.L460
4137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
4138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Clear IDLE Flag */
4139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 12345              		.loc 1 4139 11
 12346 0172 7B68     		ldr	r3, [r7, #4]
 12347 0174 1B68     		ldr	r3, [r3]
 12348 0176 1022     		movs	r2, #16
 12349 0178 1A62     		str	r2, [r3, #32]
 12350              	.L460:
4140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
4141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
4142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
4146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 12351              		.loc 1 4147 9
 12352 017a 7B68     		ldr	r3, [r7, #4]
 12353 017c 5822     		movs	r2, #88
 12354 017e 9A5A     		ldrh	r2, [r3, r2]
 12355 0180 7B68     		ldr	r3, [r7, #4]
 12356 0182 1100     		movs	r1, r2
 12357 0184 1800     		movs	r0, r3
 12358 0186 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
4148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 302


4149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
4150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
4151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
4152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Standard reception API called */
4153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
4157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
4159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
4161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
4162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
4163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
4164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
4165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
4168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 12359              		.loc 1 4168 1
 12360 018a 0CE0     		b	.L461
 12361              	.L458:
4158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 12362              		.loc 1 4158 9
 12363 018c 7B68     		ldr	r3, [r7, #4]
 12364 018e 1800     		movs	r0, r3
 12365 0190 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 12366              		.loc 1 4168 1
 12367 0194 07E0     		b	.L461
 12368              	.L452:
4166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 12369              		.loc 1 4166 5
 12370 0196 7B68     		ldr	r3, [r7, #4]
 12371 0198 1B68     		ldr	r3, [r3]
 12372 019a 9A69     		ldr	r2, [r3, #24]
 12373 019c 7B68     		ldr	r3, [r7, #4]
 12374 019e 1B68     		ldr	r3, [r3]
 12375 01a0 0821     		movs	r1, #8
 12376 01a2 0A43     		orrs	r2, r1
 12377 01a4 9A61     		str	r2, [r3, #24]
 12378              	.L461:
 12379              		.loc 1 4168 1
 12380 01a6 C046     		nop
 12381 01a8 BD46     		mov	sp, r7
 12382 01aa 14B0     		add	sp, sp, #80
 12383              		@ sp needed
 12384 01ac 80BD     		pop	{r7, pc}
 12385              	.L463:
 12386 01ae C046     		.align	2
 12387              	.L462:
 12388 01b0 DFFEFFFF 		.word	-289
 12389 01b4 FFFFFFFB 		.word	-67108865
 12390              		.cfi_endproc
 12391              	.LFE105:
 12393              		.text
 12394              	.Letext0:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 303


 12395              		.file 3 "c:\\program files (x86)\\openocdarmgccbuildtools\\gcc-arm-none-eabi-10.3-2021.10-win32\\a
 12396              		.file 4 "c:\\program files (x86)\\openocdarmgccbuildtools\\gcc-arm-none-eabi-10.3-2021.10-win32\\a
 12397              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f031x6.h"
 12398              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 12399              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 12400              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 12401              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 304


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_uart.c
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:18     .text.HAL_UART_Init:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:24     .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:749    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7857   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:8266   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:8501   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:145    .text.HAL_UART_Init:000000a4 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:150    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:156    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:285    .text.HAL_HalfDuplex_Init:000000b4 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:290    .text.HAL_LIN_Init:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:296    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:461    .text.HAL_LIN_Init:000000ec $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:466    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:472    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:630    .text.HAL_MultiProcessor_Init:000000e8 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:636    .text.HAL_UART_DeInit:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:642    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:783    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:743    .text.HAL_UART_MspInit:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:777    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:811    .text.HAL_UART_Transmit:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:817    .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:8824   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:1061   .text.HAL_UART_Receive:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:1067   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:1373   .text.HAL_UART_Receive:000001a4 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:1378   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:1384   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:1580   .text.HAL_UART_Transmit_IT:000000d8 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:11260  .text.UART_TxISR_16BIT:00000000 UART_TxISR_16BIT
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:11061  .text.UART_TxISR_8BIT:00000000 UART_TxISR_8BIT
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:1586   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:1592   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:8986   .text.UART_Start_Receive_IT:00000000 UART_Start_Receive_IT
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:1756   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:1762   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:1999   .text.HAL_UART_Transmit_DMA:00000114 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:9973   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10146  .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10579  .text.UART_DMAError:00000000 UART_DMAError
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:2006   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:2012   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:9328   .text.UART_Start_Receive_DMA:00000000 UART_Start_Receive_DMA
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:2176   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:2182   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:2484   .text.HAL_UART_DMAPause:00000110 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:2489   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:2495   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:2789   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:2795   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:9643   .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:9739   .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:3053   .text.HAL_UART_Abort:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:3059   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 305


C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:3527   .text.HAL_UART_Abort:000001e8 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:3532   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:3538   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:3743   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:3749   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:4097   .text.HAL_UART_AbortReceive:00000158 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:4102   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:4108   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6681   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:4634   .text.HAL_UART_Abort_IT:00000230 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10735  .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10834  .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:4641   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:4647   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6715   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:4874   .text.HAL_UART_AbortTransmit_IT:000000ec $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10942  .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:4879   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:4885   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6749   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:5266   .text.HAL_UART_AbortReceive_IT:00000188 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10992  .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:5272   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:5278   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6647   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:5770   .text.HAL_UART_IRQHandler:00000298 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10684  .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:5775   .text.HAL_UART_IRQHandler:000002a4 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6783   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:11462  .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6499   .text.HAL_UART_IRQHandler:000005b8 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6505   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6511   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6539   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6545   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6573   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6579   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6607   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6613   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6641   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6675   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6709   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6743   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6777   .text.HAL_UARTEx_RxEventCallback:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6814   .text.HAL_UART_ReceiverTimeout_Config:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6820   .text.HAL_UART_ReceiverTimeout_Config:00000000 HAL_UART_ReceiverTimeout_Config
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6860   .text.HAL_UART_EnableReceiverTimeout:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6866   .text.HAL_UART_EnableReceiverTimeout:00000000 HAL_UART_EnableReceiverTimeout
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6945   .text.HAL_UART_DisableReceiverTimeout:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:6951   .text.HAL_UART_DisableReceiverTimeout:00000000 HAL_UART_DisableReceiverTimeout
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7028   .text.HAL_UART_DisableReceiverTimeout:00000058 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7033   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7039   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7156   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7162   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7277   .text.HAL_MultiProcessor_DisableMuteMode:00000070 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7282   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 306


C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7288   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7325   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7331   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7508   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7514   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7691   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7697   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7765   .text.HAL_UART_GetState:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7771   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7812   .text.HAL_UART_GetError:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7818   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:7851   .text.UART_SetConfig:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:8251   .text.UART_SetConfig:0000023c $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:8260   .text.UART_AdvFeatureConfig:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:8482   .text.UART_AdvFeatureConfig:00000144 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:8495   .text.UART_CheckIdleState:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:8812   .text.UART_CheckIdleState:00000148 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:8818   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:8980   .text.UART_Start_Receive_IT:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:9315   .text.UART_Start_Receive_IT:00000160 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:11984  .text.UART_RxISR_16BIT:00000000 UART_RxISR_16BIT
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:11566  .text.UART_RxISR_8BIT:00000000 UART_RxISR_8BIT
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:9322   .text.UART_Start_Receive_DMA:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:9631   .text.UART_Start_Receive_DMA:00000134 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10187  .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10513  .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:9638   .text.UART_EndTxTransfer:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:9734   .text.UART_EndRxTransfer:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:9963   .text.UART_EndRxTransfer:000000c4 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:9968   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10141  .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10182  .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10503  .text.UART_DMAReceiveCplt:00000128 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10508  .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10574  .text.UART_DMAError:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10679  .text.UART_DMAAbortOnError:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10730  .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10829  .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10937  .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:10987  .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:11056  .text.UART_TxISR_8BIT:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:11255  .text.UART_TxISR_16BIT:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:11457  .text.UART_EndTransmit_IT:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:11561  .text.UART_RxISR_8BIT:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:11973  .text.UART_RxISR_8BIT:000001b0 $d
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:11979  .text.UART_RxISR_16BIT:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccHpGlta.s:12388  .text.UART_RxISR_16BIT:000001b0 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uidiv
HAL_RCC_GetPCLK1Freq
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccHpGlta.s 			page 307


HAL_RCC_GetSysClockFreq
