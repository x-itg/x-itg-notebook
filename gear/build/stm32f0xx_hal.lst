ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_hal.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	uwTick
  18              		.section	.bss.uwTick,"aw",%nobits
  19              		.align	2
  22              	uwTick:
  23 0000 00000000 		.space	4
  24              		.global	uwTickPrio
  25              		.section	.data.uwTickPrio,"aw"
  26              		.align	2
  29              	uwTickPrio:
  30 0000 04000000 		.word	4
  31              		.global	uwTickFreq
  32              		.section	.data.uwTickFreq,"aw"
  35              	uwTickFreq:
  36 0000 01       		.byte	1
  37              		.section	.text.HAL_Init,"ax",%progbits
  38              		.align	1
  39              		.global	HAL_Init
  40              		.syntax unified
  41              		.code	16
  42              		.thumb_func
  44              	HAL_Init:
  45              	.LFB40:
  46              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @file    stm32f0xx_hal.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @attention
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * Copyright (c) 2016 STMicroelectronics.
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * All rights reserved.
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * This software is licensed under terms that can be found in the LICENSE file
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * in the root directory of this software component.
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 2


  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @verbatim
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                      ##### How to use this driver #####
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The HAL contains two APIs categories:
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Initialization and de-initialization functions
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Control functions
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @endverbatim
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #include "stm32f0xx_hal.h"
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @addtogroup STM32F0xx_HAL_Driver
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private define ------------------------------------------------------------*/
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** 
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief STM32F0xx HAL Driver version number
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB1   (0x07U) /*!< [23:16] sub1 version */
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB2   (0x07U) /*!< [15:8]  sub2 version */
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */ 
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION         ((__STM32F0xx_HAL_VERSION_MAIN << 24U)\
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB1 << 16U)\
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB2 << 8U )\
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_RC))
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Macros HAL Private Macros
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 3


  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported variables ---------------------------------------------------------*/
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Exported Variables
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __IO uint32_t uwTick;
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    Initialization and de-initialization functions
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****               ##### Initialization and de-initialization functions #####
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    [..]  This section provides functions allowing to:
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           and the backup domain when enabled.
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) de-Initializes common part of the HAL.
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           Tick interrupt priority.
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              handled in milliseconds basis.
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             ISR process will be blocked. 
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****        (++) functions affecting time base configurations are declared as __Weak  
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This function configures the Flash prefetch,
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 4


 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called at the beginning of program after reset and before 
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       the clock configuration
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note The time base configuration is based on HSI clock when exiting from Reset.
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Once done, time base tick start incrementing.
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       In the default implementation,Systick is used as source of time base.
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The tick variable is incremented each 1ms in its ISR.
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  47              		.loc 1 142 1
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 1, uses_anonymous_args = 0
  51 0000 80B5     		push	{r7, lr}
  52              	.LCFI0:
  53              		.cfi_def_cfa_offset 8
  54              		.cfi_offset 7, -8
  55              		.cfi_offset 14, -4
  56 0002 00AF     		add	r7, sp, #0
  57              	.LCFI1:
  58              		.cfi_def_cfa_register 7
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
  59              		.loc 1 145 3
  60 0004 074B     		ldr	r3, .L3
  61 0006 1A68     		ldr	r2, [r3]
  62 0008 064B     		ldr	r3, .L3
  63 000a 1021     		movs	r1, #16
  64 000c 0A43     		orrs	r2, r1
  65 000e 1A60     		str	r2, [r3]
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
  66              		.loc 1 150 3
  67 0010 0320     		movs	r0, #3
  68 0012 FFF7FEFF 		bl	HAL_InitTick
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Init the low level hardware */
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspInit();
  69              		.loc 1 153 3
  70 0016 FFF7FEFF 		bl	HAL_MspInit
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
  71              		.loc 1 156 10
  72 001a 0023     		movs	r3, #0
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  73              		.loc 1 157 1
  74 001c 1800     		movs	r0, r3
  75 001e BD46     		mov	sp, r7
  76              		@ sp needed
  77 0020 80BD     		pop	{r7, pc}
  78              	.L4:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 5


  79 0022 C046     		.align	2
  80              	.L3:
  81 0024 00200240 		.word	1073881088
  82              		.cfi_endproc
  83              	.LFE40:
  85              		.section	.text.HAL_DeInit,"ax",%progbits
  86              		.align	1
  87              		.global	HAL_DeInit
  88              		.syntax unified
  89              		.code	16
  90              		.thumb_func
  92              	HAL_DeInit:
  93              	.LFB41:
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function de-Initialize common part of the HAL and stops the SysTick
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        of time base.
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is optional.
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  94              		.loc 1 166 1
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98 0000 80B5     		push	{r7, lr}
  99              	.LCFI2:
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 00AF     		add	r7, sp, #0
 104              	.LCFI3:
 105              		.cfi_def_cfa_register 7
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 106              		.loc 1 168 3
 107 0004 0D4B     		ldr	r3, .L7
 108 0006 0122     		movs	r2, #1
 109 0008 5242     		rsbs	r2, r2, #0
 110 000a 1A61     		str	r2, [r3, #16]
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 111              		.loc 1 169 3
 112 000c 0B4B     		ldr	r3, .L7
 113 000e 0022     		movs	r2, #0
 114 0010 1A61     		str	r2, [r3, #16]
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 115              		.loc 1 171 3
 116 0012 0A4B     		ldr	r3, .L7
 117 0014 0122     		movs	r2, #1
 118 0016 5242     		rsbs	r2, r2, #0
 119 0018 DA60     		str	r2, [r3, #12]
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 120              		.loc 1 172 3
 121 001a 084B     		ldr	r3, .L7
 122 001c 0022     		movs	r2, #0
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 6


 123 001e DA60     		str	r2, [r3, #12]
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 124              		.loc 1 174 3
 125 0020 064B     		ldr	r3, .L7
 126 0022 0122     		movs	r2, #1
 127 0024 5242     		rsbs	r2, r2, #0
 128 0026 9A62     		str	r2, [r3, #40]
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 129              		.loc 1 175 3
 130 0028 044B     		ldr	r3, .L7
 131 002a 0022     		movs	r2, #0
 132 002c 9A62     		str	r2, [r3, #40]
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* De-Init the low level hardware */
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspDeInit();
 133              		.loc 1 178 3
 134 002e FFF7FEFF 		bl	HAL_MspDeInit
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 135              		.loc 1 181 10
 136 0032 0023     		movs	r3, #0
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 137              		.loc 1 182 1
 138 0034 1800     		movs	r0, r3
 139 0036 BD46     		mov	sp, r7
 140              		@ sp needed
 141 0038 80BD     		pop	{r7, pc}
 142              	.L8:
 143 003a C046     		.align	2
 144              	.L7:
 145 003c 00100240 		.word	1073876992
 146              		.cfi_endproc
 147              	.LFE41:
 149              		.section	.text.HAL_MspInit,"ax",%progbits
 150              		.align	1
 151              		.weak	HAL_MspInit
 152              		.syntax unified
 153              		.code	16
 154              		.thumb_func
 156              	HAL_MspInit:
 157              	.LFB42:
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Initialize the MSP.
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspInit(void)
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 158              		.loc 1 189 1
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 1, uses_anonymous_args = 0
 162 0000 80B5     		push	{r7, lr}
 163              	.LCFI4:
 164              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 7


 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 00AF     		add	r7, sp, #0
 168              	.LCFI5:
 169              		.cfi_def_cfa_register 7
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 170              		.loc 1 193 1
 171 0004 C046     		nop
 172 0006 BD46     		mov	sp, r7
 173              		@ sp needed
 174 0008 80BD     		pop	{r7, pc}
 175              		.cfi_endproc
 176              	.LFE42:
 178              		.section	.text.HAL_MspDeInit,"ax",%progbits
 179              		.align	1
 180              		.weak	HAL_MspDeInit
 181              		.syntax unified
 182              		.code	16
 183              		.thumb_func
 185              	HAL_MspDeInit:
 186              	.LFB43:
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  DeInitializes the MSP.
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspDeInit(void)
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 187              		.loc 1 200 1
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191 0000 80B5     		push	{r7, lr}
 192              	.LCFI6:
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 00AF     		add	r7, sp, #0
 197              	.LCFI7:
 198              		.cfi_def_cfa_register 7
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 199              		.loc 1 204 1
 200 0004 C046     		nop
 201 0006 BD46     		mov	sp, r7
 202              		@ sp needed
 203 0008 80BD     		pop	{r7, pc}
 204              		.cfi_endproc
 205              	.LFE43:
 207              		.global	__aeabi_uidiv
 208              		.section	.text.HAL_InitTick,"ax",%progbits
 209              		.align	1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 8


 210              		.weak	HAL_InitTick
 211              		.syntax unified
 212              		.code	16
 213              		.thumb_func
 215              	HAL_InitTick:
 216              	.LFB44:
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function configures the source of the time base. 
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Tick interrupt priority.
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower) 
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The function is declared as __Weak  to be overwritten  in case of other
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementation  in user file.
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 217              		.loc 1 223 1
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 8
 220              		@ frame_needed = 1, uses_anonymous_args = 0
 221 0000 90B5     		push	{r4, r7, lr}
 222              	.LCFI8:
 223              		.cfi_def_cfa_offset 12
 224              		.cfi_offset 4, -12
 225              		.cfi_offset 7, -8
 226              		.cfi_offset 14, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              	.LCFI9:
 229              		.cfi_def_cfa_offset 24
 230 0004 00AF     		add	r7, sp, #0
 231              	.LCFI10:
 232              		.cfi_def_cfa_register 7
 233 0006 7860     		str	r0, [r7, #4]
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 234              		.loc 1 225 7
 235 0008 144B     		ldr	r3, .L16
 236 000a 1C68     		ldr	r4, [r3]
 237              		.loc 1 225 51
 238 000c 144B     		ldr	r3, .L16+4
 239 000e 1B78     		ldrb	r3, [r3]
 240 0010 1900     		movs	r1, r3
 241 0012 FA23     		movs	r3, #250
 242 0014 9800     		lsls	r0, r3, #2
 243 0016 FFF7FEFF 		bl	__aeabi_uidiv
 244 001a 0300     		movs	r3, r0
 245              		.loc 1 225 7
 246 001c 1900     		movs	r1, r3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 9


 247 001e 2000     		movs	r0, r4
 248 0020 FFF7FEFF 		bl	__aeabi_uidiv
 249 0024 0300     		movs	r3, r0
 250 0026 1800     		movs	r0, r3
 251 0028 FFF7FEFF 		bl	HAL_SYSTICK_Config
 252 002c 031E     		subs	r3, r0, #0
 253              		.loc 1 225 6
 254 002e 01D0     		beq	.L12
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     return HAL_ERROR;
 255              		.loc 1 227 12
 256 0030 0123     		movs	r3, #1
 257 0032 0FE0     		b	.L13
 258              	.L12:
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure the SysTick IRQ priority */
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 259              		.loc 1 231 6
 260 0034 7B68     		ldr	r3, [r7, #4]
 261 0036 032B     		cmp	r3, #3
 262 0038 0BD8     		bhi	.L14
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 263              		.loc 1 233 5
 264 003a 7968     		ldr	r1, [r7, #4]
 265 003c 0123     		movs	r3, #1
 266 003e 5B42     		rsbs	r3, r3, #0
 267 0040 0022     		movs	r2, #0
 268 0042 1800     		movs	r0, r3
 269 0044 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     uwTickPrio = TickPriority;
 270              		.loc 1 234 16
 271 0048 064B     		ldr	r3, .L16+8
 272 004a 7A68     		ldr	r2, [r7, #4]
 273 004c 1A60     		str	r2, [r3]
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   else
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     return HAL_ERROR;
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    /* Return function status */
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 274              		.loc 1 242 10
 275 004e 0023     		movs	r3, #0
 276 0050 00E0     		b	.L13
 277              	.L14:
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 278              		.loc 1 238 12
 279 0052 0123     		movs	r3, #1
 280              	.L13:
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 281              		.loc 1 243 1
 282 0054 1800     		movs	r0, r3
 283 0056 BD46     		mov	sp, r7
 284 0058 03B0     		add	sp, sp, #12
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 10


 285              		@ sp needed
 286 005a 90BD     		pop	{r4, r7, pc}
 287              	.L17:
 288              		.align	2
 289              	.L16:
 290 005c 00000000 		.word	SystemCoreClock
 291 0060 00000000 		.word	uwTickFreq
 292 0064 00000000 		.word	uwTickPrio
 293              		.cfi_endproc
 294              	.LFE44:
 296              		.section	.text.HAL_IncTick,"ax",%progbits
 297              		.align	1
 298              		.weak	HAL_IncTick
 299              		.syntax unified
 300              		.code	16
 301              		.thumb_func
 303              	HAL_IncTick:
 304              	.LFB45:
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    HAL Control functions
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                       ##### HAL Control functions #####
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]  This section provides functions allowing to:
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a tick value in millisecond
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Suspend the time base source interrupt
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Resume the time base source interrupt
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the HAL API driver version
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device identifier
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device revision identifier
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during Sleep mode
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        used as application time base.
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       in SysTick ISR.
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_IncTick(void)
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 11


 305              		.loc 1 282 1
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309 0000 80B5     		push	{r7, lr}
 310              	.LCFI11:
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 7, -8
 313              		.cfi_offset 14, -4
 314 0002 00AF     		add	r7, sp, #0
 315              	.LCFI12:
 316              		.cfi_def_cfa_register 7
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uwTick += uwTickFreq;
 317              		.loc 1 283 10
 318 0004 054B     		ldr	r3, .L19
 319 0006 1B78     		ldrb	r3, [r3]
 320 0008 1A00     		movs	r2, r3
 321 000a 054B     		ldr	r3, .L19+4
 322 000c 1B68     		ldr	r3, [r3]
 323 000e D218     		adds	r2, r2, r3
 324 0010 034B     		ldr	r3, .L19+4
 325 0012 1A60     		str	r2, [r3]
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 326              		.loc 1 284 1
 327 0014 C046     		nop
 328 0016 BD46     		mov	sp, r7
 329              		@ sp needed
 330 0018 80BD     		pop	{r7, pc}
 331              	.L20:
 332 001a C046     		.align	2
 333              	.L19:
 334 001c 00000000 		.word	uwTickFreq
 335 0020 00000000 		.word	uwTick
 336              		.cfi_endproc
 337              	.LFE45:
 339              		.section	.text.HAL_GetTick,"ax",%progbits
 340              		.align	1
 341              		.weak	HAL_GetTick
 342              		.syntax unified
 343              		.code	16
 344              		.thumb_func
 346              	HAL_GetTick:
 347              	.LFB46:
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Provides a tick value in millisecond.
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note   This function is declared as __weak  to be overwritten  in case of other 
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick value
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 348              		.loc 1 293 1
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 12


 353              	.LCFI13:
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 7, -8
 356              		.cfi_offset 14, -4
 357 0002 00AF     		add	r7, sp, #0
 358              	.LCFI14:
 359              		.cfi_def_cfa_register 7
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTick;
 360              		.loc 1 294 10
 361 0004 024B     		ldr	r3, .L23
 362 0006 1B68     		ldr	r3, [r3]
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 363              		.loc 1 295 1
 364 0008 1800     		movs	r0, r3
 365 000a BD46     		mov	sp, r7
 366              		@ sp needed
 367 000c 80BD     		pop	{r7, pc}
 368              	.L24:
 369 000e C046     		.align	2
 370              	.L23:
 371 0010 00000000 		.word	uwTick
 372              		.cfi_endproc
 373              	.LFE46:
 375              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 376              		.align	1
 377              		.global	HAL_GetTickPrio
 378              		.syntax unified
 379              		.code	16
 380              		.thumb_func
 382              	HAL_GetTickPrio:
 383              	.LFB47:
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function returns a tick priority.
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick priority
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 384              		.loc 1 302 1
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388 0000 80B5     		push	{r7, lr}
 389              	.LCFI15:
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 7, -8
 392              		.cfi_offset 14, -4
 393 0002 00AF     		add	r7, sp, #0
 394              	.LCFI16:
 395              		.cfi_def_cfa_register 7
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTickPrio;
 396              		.loc 1 303 10
 397 0004 024B     		ldr	r3, .L27
 398 0006 1B68     		ldr	r3, [r3]
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 399              		.loc 1 304 1
 400 0008 1800     		movs	r0, r3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 13


 401 000a BD46     		mov	sp, r7
 402              		@ sp needed
 403 000c 80BD     		pop	{r7, pc}
 404              	.L28:
 405 000e C046     		.align	2
 406              	.L27:
 407 0010 00000000 		.word	uwTickPrio
 408              		.cfi_endproc
 409              	.LFE47:
 411              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 412              		.align	1
 413              		.global	HAL_SetTickFreq
 414              		.syntax unified
 415              		.code	16
 416              		.thumb_func
 418              	HAL_SetTickFreq:
 419              	.LFB48:
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Set new tick Freq.
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval status
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 420              		.loc 1 311 1
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 16
 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 425              	.LCFI17:
 426              		.cfi_def_cfa_offset 20
 427              		.cfi_offset 4, -20
 428              		.cfi_offset 5, -16
 429              		.cfi_offset 6, -12
 430              		.cfi_offset 7, -8
 431              		.cfi_offset 14, -4
 432 0002 85B0     		sub	sp, sp, #20
 433              	.LCFI18:
 434              		.cfi_def_cfa_offset 40
 435 0004 00AF     		add	r7, sp, #0
 436              	.LCFI19:
 437              		.cfi_def_cfa_register 7
 438 0006 0200     		movs	r2, r0
 439 0008 FB1D     		adds	r3, r7, #7
 440 000a 1A70     		strb	r2, [r3]
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 441              		.loc 1 312 21
 442 000c 0F21     		movs	r1, #15
 443 000e 7B18     		adds	r3, r7, r1
 444 0010 0022     		movs	r2, #0
 445 0012 1A70     		strb	r2, [r3]
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (uwTickFreq != Freq)
 446              		.loc 1 317 18
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 14


 447 0014 134B     		ldr	r3, .L32
 448 0016 1B78     		ldrb	r3, [r3]
 449              		.loc 1 317 6
 450 0018 FA1D     		adds	r2, r7, #7
 451 001a 1278     		ldrb	r2, [r2]
 452 001c 9A42     		cmp	r2, r3
 453 001e 19D0     		beq	.L30
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Back up uwTickFreq frequency */
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     prevTickFreq = uwTickFreq;
 454              		.loc 1 320 18
 455 0020 0E26     		movs	r6, #14
 456 0022 BB19     		adds	r3, r7, r6
 457 0024 0F4A     		ldr	r2, .L32
 458 0026 1278     		ldrb	r2, [r2]
 459 0028 1A70     		strb	r2, [r3]
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     uwTickFreq = Freq;
 460              		.loc 1 323 16
 461 002a 0E4B     		ldr	r3, .L32
 462 002c FA1D     		adds	r2, r7, #7
 463 002e 1278     		ldrb	r2, [r2]
 464 0030 1A70     		strb	r2, [r3]
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Apply the new tick Freq */
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 465              		.loc 1 326 14
 466 0032 0D4B     		ldr	r3, .L32+4
 467 0034 1B68     		ldr	r3, [r3]
 468 0036 0D00     		movs	r5, r1
 469 0038 7C18     		adds	r4, r7, r1
 470 003a 1800     		movs	r0, r3
 471 003c FFF7FEFF 		bl	HAL_InitTick
 472 0040 0300     		movs	r3, r0
 473 0042 2370     		strb	r3, [r4]
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     if (status != HAL_OK)
 474              		.loc 1 328 8
 475 0044 7B19     		adds	r3, r7, r5
 476 0046 1B78     		ldrb	r3, [r3]
 477 0048 002B     		cmp	r3, #0
 478 004a 03D0     		beq	.L30
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     {
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       /* Restore previous tick frequency */
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       uwTickFreq = prevTickFreq;
 479              		.loc 1 331 18
 480 004c 054B     		ldr	r3, .L32
 481 004e BA19     		adds	r2, r7, r6
 482 0050 1278     		ldrb	r2, [r2]
 483 0052 1A70     		strb	r2, [r3]
 484              	.L30:
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     }
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return status;
 485              		.loc 1 335 10
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 15


 486 0054 0F23     		movs	r3, #15
 487 0056 FB18     		adds	r3, r7, r3
 488 0058 1B78     		ldrb	r3, [r3]
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 489              		.loc 1 336 1
 490 005a 1800     		movs	r0, r3
 491 005c BD46     		mov	sp, r7
 492 005e 05B0     		add	sp, sp, #20
 493              		@ sp needed
 494 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 495              	.L33:
 496 0062 C046     		.align	2
 497              	.L32:
 498 0064 00000000 		.word	uwTickFreq
 499 0068 00000000 		.word	uwTickPrio
 500              		.cfi_endproc
 501              	.LFE48:
 503              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 504              		.align	1
 505              		.global	HAL_GetTickFreq
 506              		.syntax unified
 507              		.code	16
 508              		.thumb_func
 510              	HAL_GetTickFreq:
 511              	.LFB49:
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief return tick frequency.
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Tick frequency.
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *         Value of @ref HAL_TickFreqTypeDef.
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 512              		.loc 1 344 1
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 1, uses_anonymous_args = 0
 516 0000 80B5     		push	{r7, lr}
 517              	.LCFI20:
 518              		.cfi_def_cfa_offset 8
 519              		.cfi_offset 7, -8
 520              		.cfi_offset 14, -4
 521 0002 00AF     		add	r7, sp, #0
 522              	.LCFI21:
 523              		.cfi_def_cfa_register 7
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTickFreq;
 524              		.loc 1 345 10
 525 0004 024B     		ldr	r3, .L36
 526 0006 1B78     		ldrb	r3, [r3]
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 527              		.loc 1 346 1
 528 0008 1800     		movs	r0, r3
 529 000a BD46     		mov	sp, r7
 530              		@ sp needed
 531 000c 80BD     		pop	{r7, pc}
 532              	.L37:
 533 000e C046     		.align	2
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 16


 534              	.L36:
 535 0010 00000000 		.word	uwTickFreq
 536              		.cfi_endproc
 537              	.LFE49:
 539              		.section	.text.HAL_Delay,"ax",%progbits
 540              		.align	1
 541              		.weak	HAL_Delay
 542              		.syntax unified
 543              		.code	16
 544              		.thumb_func
 546              	HAL_Delay:
 547              	.LFB50:
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function provides accurate delay (in milliseconds) based
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        on variable incremented.
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is incremented.
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note ThiS function is declared as __weak to be overwritten in case of other
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 548              		.loc 1 360 1
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 16
 551              		@ frame_needed = 1, uses_anonymous_args = 0
 552 0000 80B5     		push	{r7, lr}
 553              	.LCFI22:
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 7, -8
 556              		.cfi_offset 14, -4
 557 0002 84B0     		sub	sp, sp, #16
 558              	.LCFI23:
 559              		.cfi_def_cfa_offset 24
 560 0004 00AF     		add	r7, sp, #0
 561              	.LCFI24:
 562              		.cfi_def_cfa_register 7
 563 0006 7860     		str	r0, [r7, #4]
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 564              		.loc 1 361 24
 565 0008 FFF7FEFF 		bl	HAL_GetTick
 566 000c 0300     		movs	r3, r0
 567 000e BB60     		str	r3, [r7, #8]
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t wait = Delay;
 568              		.loc 1 362 12
 569 0010 7B68     		ldr	r3, [r7, #4]
 570 0012 FB60     		str	r3, [r7, #12]
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 571              		.loc 1 365 6
 572 0014 FB68     		ldr	r3, [r7, #12]
 573 0016 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 17


 574 0018 05D0     		beq	.L41
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 575              		.loc 1 367 13
 576 001a 0A4B     		ldr	r3, .L42
 577 001c 1B78     		ldrb	r3, [r3]
 578 001e 1A00     		movs	r2, r3
 579              		.loc 1 367 10
 580 0020 FB68     		ldr	r3, [r7, #12]
 581 0022 9B18     		adds	r3, r3, r2
 582 0024 FB60     		str	r3, [r7, #12]
 583              	.L41:
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 584              		.loc 1 370 8
 585 0026 C046     		nop
 586              	.L40:
 587              		.loc 1 370 10 discriminator 1
 588 0028 FFF7FEFF 		bl	HAL_GetTick
 589 002c 0200     		movs	r2, r0
 590              		.loc 1 370 24 discriminator 1
 591 002e BB68     		ldr	r3, [r7, #8]
 592 0030 D31A     		subs	r3, r2, r3
 593              		.loc 1 370 8 discriminator 1
 594 0032 FA68     		ldr	r2, [r7, #12]
 595 0034 9A42     		cmp	r2, r3
 596 0036 F7D8     		bhi	.L40
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 597              		.loc 1 373 1
 598 0038 C046     		nop
 599 003a C046     		nop
 600 003c BD46     		mov	sp, r7
 601 003e 04B0     		add	sp, sp, #16
 602              		@ sp needed
 603 0040 80BD     		pop	{r7, pc}
 604              	.L43:
 605 0042 C046     		.align	2
 606              	.L42:
 607 0044 00000000 		.word	uwTickFreq
 608              		.cfi_endproc
 609              	.LFE50:
 611              		.section	.text.HAL_SuspendTick,"ax",%progbits
 612              		.align	1
 613              		.weak	HAL_SuspendTick
 614              		.syntax unified
 615              		.code	16
 616              		.thumb_func
 618              	HAL_SuspendTick:
 619              	.LFB51:
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Suspend Tick increment.
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 18


 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment 
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is suspended.
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_SuspendTick(void)
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 620              		.loc 1 387 1
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 1, uses_anonymous_args = 0
 624 0000 80B5     		push	{r7, lr}
 625              	.LCFI25:
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 7, -8
 628              		.cfi_offset 14, -4
 629 0002 00AF     		add	r7, sp, #0
 630              	.LCFI26:
 631              		.cfi_def_cfa_register 7
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Disable SysTick Interrupt */
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 632              		.loc 1 389 3
 633 0004 044B     		ldr	r3, .L45
 634 0006 1A68     		ldr	r2, [r3]
 635 0008 034B     		ldr	r3, .L45
 636 000a 0221     		movs	r1, #2
 637 000c 8A43     		bics	r2, r1
 638 000e 1A60     		str	r2, [r3]
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 639              		.loc 1 390 1
 640 0010 C046     		nop
 641 0012 BD46     		mov	sp, r7
 642              		@ sp needed
 643 0014 80BD     		pop	{r7, pc}
 644              	.L46:
 645 0016 C046     		.align	2
 646              	.L45:
 647 0018 10E000E0 		.word	-536813552
 648              		.cfi_endproc
 649              	.LFE51:
 651              		.section	.text.HAL_ResumeTick,"ax",%progbits
 652              		.align	1
 653              		.weak	HAL_ResumeTick
 654              		.syntax unified
 655              		.code	16
 656              		.thumb_func
 658              	HAL_ResumeTick:
 659              	.LFB52:
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Resume Tick increment.
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment 
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is resumed.
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 19


 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak  to be overwritten  in case of other
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_ResumeTick(void)
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 660              		.loc 1 403 1
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664 0000 80B5     		push	{r7, lr}
 665              	.LCFI27:
 666              		.cfi_def_cfa_offset 8
 667              		.cfi_offset 7, -8
 668              		.cfi_offset 14, -4
 669 0002 00AF     		add	r7, sp, #0
 670              	.LCFI28:
 671              		.cfi_def_cfa_register 7
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Enable SysTick Interrupt */
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 672              		.loc 1 405 3
 673 0004 044B     		ldr	r3, .L48
 674 0006 1A68     		ldr	r2, [r3]
 675 0008 034B     		ldr	r3, .L48
 676 000a 0221     		movs	r1, #2
 677 000c 0A43     		orrs	r2, r1
 678 000e 1A60     		str	r2, [r3]
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 679              		.loc 1 406 1
 680 0010 C046     		nop
 681 0012 BD46     		mov	sp, r7
 682              		@ sp needed
 683 0014 80BD     		pop	{r7, pc}
 684              	.L49:
 685 0016 C046     		.align	2
 686              	.L48:
 687 0018 10E000E0 		.word	-536813552
 688              		.cfi_endproc
 689              	.LFE52:
 691              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 692              		.align	1
 693              		.global	HAL_GetHalVersion
 694              		.syntax unified
 695              		.code	16
 696              		.thumb_func
 698              	HAL_GetHalVersion:
 699              	.LFB53:
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This method returns the HAL revision
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval version 0xXYZR (8bits for each decimal, R for RC)
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 700              		.loc 1 413 1
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 20


 703              		@ frame_needed = 1, uses_anonymous_args = 0
 704 0000 80B5     		push	{r7, lr}
 705              	.LCFI29:
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 7, -8
 708              		.cfi_offset 14, -4
 709 0002 00AF     		add	r7, sp, #0
 710              	.LCFI30:
 711              		.cfi_def_cfa_register 7
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  return __STM32F0xx_HAL_VERSION;
 712              		.loc 1 414 9
 713 0004 014B     		ldr	r3, .L52
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 714              		.loc 1 415 1
 715 0006 1800     		movs	r0, r3
 716 0008 BD46     		mov	sp, r7
 717              		@ sp needed
 718 000a 80BD     		pop	{r7, pc}
 719              	.L53:
 720              		.align	2
 721              	.L52:
 722 000c 00070701 		.word	17237760
 723              		.cfi_endproc
 724              	.LFE53:
 726              		.section	.text.HAL_GetREVID,"ax",%progbits
 727              		.align	1
 728              		.global	HAL_GetREVID
 729              		.syntax unified
 730              		.code	16
 731              		.thumb_func
 733              	HAL_GetREVID:
 734              	.LFB54:
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device revision identifier.
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device revision identifier
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetREVID(void)
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 735              		.loc 1 422 1
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739 0000 80B5     		push	{r7, lr}
 740              	.LCFI31:
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 7, -8
 743              		.cfi_offset 14, -4
 744 0002 00AF     		add	r7, sp, #0
 745              	.LCFI32:
 746              		.cfi_def_cfa_register 7
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 747              		.loc 1 423 18
 748 0004 024B     		ldr	r3, .L56
 749 0006 1B68     		ldr	r3, [r3]
 750              		.loc 1 423 28
 751 0008 1B0C     		lsrs	r3, r3, #16
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 21


 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 752              		.loc 1 424 1
 753 000a 1800     		movs	r0, r3
 754 000c BD46     		mov	sp, r7
 755              		@ sp needed
 756 000e 80BD     		pop	{r7, pc}
 757              	.L57:
 758              		.align	2
 759              	.L56:
 760 0010 00580140 		.word	1073829888
 761              		.cfi_endproc
 762              	.LFE54:
 764              		.section	.text.HAL_GetDEVID,"ax",%progbits
 765              		.align	1
 766              		.global	HAL_GetDEVID
 767              		.syntax unified
 768              		.code	16
 769              		.thumb_func
 771              	HAL_GetDEVID:
 772              	.LFB55:
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device identifier.
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 773              		.loc 1 431 1
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 1, uses_anonymous_args = 0
 777 0000 80B5     		push	{r7, lr}
 778              	.LCFI33:
 779              		.cfi_def_cfa_offset 8
 780              		.cfi_offset 7, -8
 781              		.cfi_offset 14, -4
 782 0002 00AF     		add	r7, sp, #0
 783              	.LCFI34:
 784              		.cfi_def_cfa_register 7
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 785              		.loc 1 432 18
 786 0004 034B     		ldr	r3, .L60
 787 0006 1B68     		ldr	r3, [r3]
 788              		.loc 1 432 28
 789 0008 1B05     		lsls	r3, r3, #20
 790 000a 1B0D     		lsrs	r3, r3, #20
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 791              		.loc 1 433 1
 792 000c 1800     		movs	r0, r3
 793 000e BD46     		mov	sp, r7
 794              		@ sp needed
 795 0010 80BD     		pop	{r7, pc}
 796              	.L61:
 797 0012 C046     		.align	2
 798              	.L60:
 799 0014 00580140 		.word	1073829888
 800              		.cfi_endproc
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 22


 801              	.LFE55:
 803              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 804              		.align	1
 805              		.global	HAL_GetUIDw0
 806              		.syntax unified
 807              		.code	16
 808              		.thumb_func
 810              	HAL_GetUIDw0:
 811              	.LFB56:
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 812              		.loc 1 440 1
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 1, uses_anonymous_args = 0
 816 0000 80B5     		push	{r7, lr}
 817              	.LCFI35:
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 00AF     		add	r7, sp, #0
 822              	.LCFI36:
 823              		.cfi_def_cfa_register 7
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 824              		.loc 1 441 11
 825 0004 024B     		ldr	r3, .L64
 826 0006 1B68     		ldr	r3, [r3]
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 827              		.loc 1 442 1
 828 0008 1800     		movs	r0, r3
 829 000a BD46     		mov	sp, r7
 830              		@ sp needed
 831 000c 80BD     		pop	{r7, pc}
 832              	.L65:
 833 000e C046     		.align	2
 834              	.L64:
 835 0010 ACF7FF1F 		.word	536868780
 836              		.cfi_endproc
 837              	.LFE56:
 839              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 840              		.align	1
 841              		.global	HAL_GetUIDw1
 842              		.syntax unified
 843              		.code	16
 844              		.thumb_func
 846              	HAL_GetUIDw1:
 847              	.LFB57:
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 23


 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 848              		.loc 1 449 1
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 1, uses_anonymous_args = 0
 852 0000 80B5     		push	{r7, lr}
 853              	.LCFI37:
 854              		.cfi_def_cfa_offset 8
 855              		.cfi_offset 7, -8
 856              		.cfi_offset 14, -4
 857 0002 00AF     		add	r7, sp, #0
 858              	.LCFI38:
 859              		.cfi_def_cfa_register 7
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 860              		.loc 1 450 11
 861 0004 024B     		ldr	r3, .L68
 862 0006 1B68     		ldr	r3, [r3]
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 863              		.loc 1 451 1
 864 0008 1800     		movs	r0, r3
 865 000a BD46     		mov	sp, r7
 866              		@ sp needed
 867 000c 80BD     		pop	{r7, pc}
 868              	.L69:
 869 000e C046     		.align	2
 870              	.L68:
 871 0010 B0F7FF1F 		.word	536868784
 872              		.cfi_endproc
 873              	.LFE57:
 875              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 876              		.align	1
 877              		.global	HAL_GetUIDw2
 878              		.syntax unified
 879              		.code	16
 880              		.thumb_func
 882              	HAL_GetUIDw2:
 883              	.LFB58:
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 884              		.loc 1 458 1
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 1, uses_anonymous_args = 0
 888 0000 80B5     		push	{r7, lr}
 889              	.LCFI39:
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 7, -8
 892              		.cfi_offset 14, -4
 893 0002 00AF     		add	r7, sp, #0
 894              	.LCFI40:
 895              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 24


 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 896              		.loc 1 459 11
 897 0004 024B     		ldr	r3, .L72
 898 0006 1B68     		ldr	r3, [r3]
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 899              		.loc 1 460 1
 900 0008 1800     		movs	r0, r3
 901 000a BD46     		mov	sp, r7
 902              		@ sp needed
 903 000c 80BD     		pop	{r7, pc}
 904              	.L73:
 905 000e C046     		.align	2
 906              	.L72:
 907 0010 B4F7FF1F 		.word	536868788
 908              		.cfi_endproc
 909              	.LFE58:
 911              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 912              		.align	1
 913              		.global	HAL_DBGMCU_EnableDBGStopMode
 914              		.syntax unified
 915              		.code	16
 916              		.thumb_func
 918              	HAL_DBGMCU_EnableDBGStopMode:
 919              	.LFB59:
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 920              		.loc 1 467 1
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 0
 923              		@ frame_needed = 1, uses_anonymous_args = 0
 924 0000 80B5     		push	{r7, lr}
 925              	.LCFI41:
 926              		.cfi_def_cfa_offset 8
 927              		.cfi_offset 7, -8
 928              		.cfi_offset 14, -4
 929 0002 00AF     		add	r7, sp, #0
 930              	.LCFI42:
 931              		.cfi_def_cfa_register 7
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 932              		.loc 1 468 3
 933 0004 044B     		ldr	r3, .L75
 934 0006 5A68     		ldr	r2, [r3, #4]
 935 0008 034B     		ldr	r3, .L75
 936 000a 0221     		movs	r1, #2
 937 000c 0A43     		orrs	r2, r1
 938 000e 5A60     		str	r2, [r3, #4]
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 939              		.loc 1 469 1
 940 0010 C046     		nop
 941 0012 BD46     		mov	sp, r7
 942              		@ sp needed
 943 0014 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 25


 944              	.L76:
 945 0016 C046     		.align	2
 946              	.L75:
 947 0018 00580140 		.word	1073829888
 948              		.cfi_endproc
 949              	.LFE59:
 951              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 952              		.align	1
 953              		.global	HAL_DBGMCU_DisableDBGStopMode
 954              		.syntax unified
 955              		.code	16
 956              		.thumb_func
 958              	HAL_DBGMCU_DisableDBGStopMode:
 959              	.LFB60:
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 960              		.loc 1 476 1
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 0
 963              		@ frame_needed = 1, uses_anonymous_args = 0
 964 0000 80B5     		push	{r7, lr}
 965              	.LCFI43:
 966              		.cfi_def_cfa_offset 8
 967              		.cfi_offset 7, -8
 968              		.cfi_offset 14, -4
 969 0002 00AF     		add	r7, sp, #0
 970              	.LCFI44:
 971              		.cfi_def_cfa_register 7
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 972              		.loc 1 477 3
 973 0004 044B     		ldr	r3, .L78
 974 0006 5A68     		ldr	r2, [r3, #4]
 975 0008 034B     		ldr	r3, .L78
 976 000a 0221     		movs	r1, #2
 977 000c 8A43     		bics	r2, r1
 978 000e 5A60     		str	r2, [r3, #4]
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 979              		.loc 1 478 1
 980 0010 C046     		nop
 981 0012 BD46     		mov	sp, r7
 982              		@ sp needed
 983 0014 80BD     		pop	{r7, pc}
 984              	.L79:
 985 0016 C046     		.align	2
 986              	.L78:
 987 0018 00580140 		.word	1073829888
 988              		.cfi_endproc
 989              	.LFE60:
 991              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 992              		.align	1
 993              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 994              		.syntax unified
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 26


 995              		.code	16
 996              		.thumb_func
 998              	HAL_DBGMCU_EnableDBGStandbyMode:
 999              	.LFB61:
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 1000              		.loc 1 485 1
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 0
 1003              		@ frame_needed = 1, uses_anonymous_args = 0
 1004 0000 80B5     		push	{r7, lr}
 1005              	.LCFI45:
 1006              		.cfi_def_cfa_offset 8
 1007              		.cfi_offset 7, -8
 1008              		.cfi_offset 14, -4
 1009 0002 00AF     		add	r7, sp, #0
 1010              	.LCFI46:
 1011              		.cfi_def_cfa_register 7
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 1012              		.loc 1 486 3
 1013 0004 044B     		ldr	r3, .L81
 1014 0006 5A68     		ldr	r2, [r3, #4]
 1015 0008 034B     		ldr	r3, .L81
 1016 000a 0421     		movs	r1, #4
 1017 000c 0A43     		orrs	r2, r1
 1018 000e 5A60     		str	r2, [r3, #4]
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 1019              		.loc 1 487 1
 1020 0010 C046     		nop
 1021 0012 BD46     		mov	sp, r7
 1022              		@ sp needed
 1023 0014 80BD     		pop	{r7, pc}
 1024              	.L82:
 1025 0016 C046     		.align	2
 1026              	.L81:
 1027 0018 00580140 		.word	1073829888
 1028              		.cfi_endproc
 1029              	.LFE61:
 1031              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 1032              		.align	1
 1033              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 1034              		.syntax unified
 1035              		.code	16
 1036              		.thumb_func
 1038              	HAL_DBGMCU_DisableDBGStandbyMode:
 1039              	.LFB62:
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 27


 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 1040              		.loc 1 494 1
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 0
 1043              		@ frame_needed = 1, uses_anonymous_args = 0
 1044 0000 80B5     		push	{r7, lr}
 1045              	.LCFI47:
 1046              		.cfi_def_cfa_offset 8
 1047              		.cfi_offset 7, -8
 1048              		.cfi_offset 14, -4
 1049 0002 00AF     		add	r7, sp, #0
 1050              	.LCFI48:
 1051              		.cfi_def_cfa_register 7
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 1052              		.loc 1 495 3
 1053 0004 044B     		ldr	r3, .L84
 1054 0006 5A68     		ldr	r2, [r3, #4]
 1055 0008 034B     		ldr	r3, .L84
 1056 000a 0421     		movs	r1, #4
 1057 000c 8A43     		bics	r2, r1
 1058 000e 5A60     		str	r2, [r3, #4]
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 1059              		.loc 1 496 1
 1060 0010 C046     		nop
 1061 0012 BD46     		mov	sp, r7
 1062              		@ sp needed
 1063 0014 80BD     		pop	{r7, pc}
 1064              	.L85:
 1065 0016 C046     		.align	2
 1066              	.L84:
 1067 0018 00580140 		.word	1073829888
 1068              		.cfi_endproc
 1069              	.LFE62:
 1071              		.text
 1072              	.Letext0:
 1073              		.file 2 "c:\\program files (x86)\\openocdarmgccbuildtools\\gcc-arm-none-eabi-10.3-2021.10-win32\\a
 1074              		.file 3 "c:\\program files (x86)\\openocdarmgccbuildtools\\gcc-arm-none-eabi-10.3-2021.10-win32\\a
 1075              		.file 4 "Drivers/CMSIS/Include/core_cm0.h"
 1076              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f031x6.h"
 1077              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1078              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1079              		.file 8 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal.c
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:22     .bss.uwTick:00000000 uwTick
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:19     .bss.uwTick:00000000 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:29     .data.uwTickPrio:00000000 uwTickPrio
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:26     .data.uwTickPrio:00000000 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:35     .data.uwTickFreq:00000000 uwTickFreq
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:38     .text.HAL_Init:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:44     .text.HAL_Init:00000000 HAL_Init
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:215    .text.HAL_InitTick:00000000 HAL_InitTick
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:156    .text.HAL_MspInit:00000000 HAL_MspInit
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:81     .text.HAL_Init:00000024 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:86     .text.HAL_DeInit:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:92     .text.HAL_DeInit:00000000 HAL_DeInit
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:185    .text.HAL_MspDeInit:00000000 HAL_MspDeInit
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:145    .text.HAL_DeInit:0000003c $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:150    .text.HAL_MspInit:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:179    .text.HAL_MspDeInit:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:209    .text.HAL_InitTick:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:290    .text.HAL_InitTick:0000005c $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:297    .text.HAL_IncTick:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:303    .text.HAL_IncTick:00000000 HAL_IncTick
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:334    .text.HAL_IncTick:0000001c $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:340    .text.HAL_GetTick:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:346    .text.HAL_GetTick:00000000 HAL_GetTick
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:371    .text.HAL_GetTick:00000010 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:376    .text.HAL_GetTickPrio:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:382    .text.HAL_GetTickPrio:00000000 HAL_GetTickPrio
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:407    .text.HAL_GetTickPrio:00000010 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:412    .text.HAL_SetTickFreq:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:418    .text.HAL_SetTickFreq:00000000 HAL_SetTickFreq
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:498    .text.HAL_SetTickFreq:00000064 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:504    .text.HAL_GetTickFreq:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:510    .text.HAL_GetTickFreq:00000000 HAL_GetTickFreq
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:535    .text.HAL_GetTickFreq:00000010 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:540    .text.HAL_Delay:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:546    .text.HAL_Delay:00000000 HAL_Delay
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:607    .text.HAL_Delay:00000044 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:612    .text.HAL_SuspendTick:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:618    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:647    .text.HAL_SuspendTick:00000018 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:652    .text.HAL_ResumeTick:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:658    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:687    .text.HAL_ResumeTick:00000018 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:692    .text.HAL_GetHalVersion:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:698    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:722    .text.HAL_GetHalVersion:0000000c $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:727    .text.HAL_GetREVID:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:733    .text.HAL_GetREVID:00000000 HAL_GetREVID
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:760    .text.HAL_GetREVID:00000010 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:765    .text.HAL_GetDEVID:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:771    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:799    .text.HAL_GetDEVID:00000014 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:804    .text.HAL_GetUIDw0:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:810    .text.HAL_GetUIDw0:00000000 HAL_GetUIDw0
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:835    .text.HAL_GetUIDw0:00000010 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:840    .text.HAL_GetUIDw1:00000000 $t
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s 			page 29


C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:846    .text.HAL_GetUIDw1:00000000 HAL_GetUIDw1
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:871    .text.HAL_GetUIDw1:00000010 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:876    .text.HAL_GetUIDw2:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:882    .text.HAL_GetUIDw2:00000000 HAL_GetUIDw2
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:907    .text.HAL_GetUIDw2:00000010 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:912    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:918    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:947    .text.HAL_DBGMCU_EnableDBGStopMode:00000018 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:952    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:958    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:987    .text.HAL_DBGMCU_DisableDBGStopMode:00000018 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:992    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:998    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:1027   .text.HAL_DBGMCU_EnableDBGStandbyMode:00000018 $d
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:1032   .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:1038   .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
C:\Users\mason\AppData\Local\Temp\ccsI9FJm.s:1067   .text.HAL_DBGMCU_DisableDBGStandbyMode:00000018 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
