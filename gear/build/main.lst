ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	hadc
  18              		.section	.bss.hadc,"aw",%nobits
  19              		.align	2
  22              	hadc:
  23 0000 00000000 		.space	64
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.global	hdma_adc
  25              		.section	.bss.hdma_adc,"aw",%nobits
  26              		.align	2
  29              	hdma_adc:
  30 0000 00000000 		.space	68
  30      00000000 
  30      00000000 
  30      00000000 
  30      00000000 
  31              		.global	huart1
  32              		.section	.bss.huart1,"aw",%nobits
  33              		.align	2
  36              	huart1:
  37 0000 00000000 		.space	136
  37      00000000 
  37      00000000 
  37      00000000 
  37      00000000 
  38              		.global	hdma_usart1_rx
  39              		.section	.bss.hdma_usart1_rx,"aw",%nobits
  40              		.align	2
  43              	hdma_usart1_rx:
  44 0000 00000000 		.space	68
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	hdma_usart1_tx
  46              		.section	.bss.hdma_usart1_tx,"aw",%nobits
  47              		.align	2
  50              	hdma_usart1_tx:
  51 0000 00000000 		.space	68
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 2


  51      00000000 
  51      00000000 
  51      00000000 
  51      00000000 
  52              		.global	UPTIMEOUT
  53              		.section	.data.UPTIMEOUT,"aw"
  54              		.align	2
  57              	UPTIMEOUT:
  58 0000 32000000 		.word	50
  59              		.global	AdDataOrig
  60              		.section	.bss.AdDataOrig,"aw",%nobits
  61              		.align	2
  64              	AdDataOrig:
  65 0000 00000000 		.space	800
  65      00000000 
  65      00000000 
  65      00000000 
  65      00000000 
  66              		.global	AdcValue
  67              		.section	.bss.AdcValue,"aw",%nobits
  68              		.align	2
  71              	AdcValue:
  72 0000 00000000 		.space	10
  72      00000000 
  72      0000
  73              		.global	poolcnt
  74              		.section	.bss.poolcnt,"aw",%nobits
  75              		.align	2
  78              	poolcnt:
  79 0000 00000000 		.space	4
  80              		.global	readmavalue
  81              		.section	.bss.readmavalue,"aw",%nobits
  82              		.align	1
  85              	readmavalue:
  86 0000 0000     		.space	2
  87              		.section	.text.delay_ns,"ax",%progbits
  88              		.align	1
  89              		.global	delay_ns
  90              		.syntax unified
  91              		.code	16
  92              		.thumb_func
  94              	delay_ns:
  95              	.LFB40:
  96              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 3


  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** ADC_HandleTypeDef hadc;
  43:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** UART_HandleTypeDef huart1;
  46:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart1_rx;
  47:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart1_tx;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** static void MX_GPIO_Init(void);
  56:Core/Src/main.c **** static void MX_DMA_Init(void);
  57:Core/Src/main.c **** static void MX_ADC_Init(void);
  58:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** signed int UPTIMEOUT = 50; // 50的话表示 50ms 主动上传 -1表示不主动上传
  61:Core/Src/main.c **** #define SUMC 100
  62:Core/Src/main.c **** #define SUMCHAN 4
  63:Core/Src/main.c **** unsigned short AdDataOrig[SUMC][SUMCHAN]; // ADC DMA缓存
  64:Core/Src/main.c **** unsigned short AdcValue[5];               // ADC的平均值结果
  65:Core/Src/main.c **** unsigned int poolcnt = 0;
  66:Core/Src/main.c **** unsigned short readmavalue = 0;
  67:Core/Src/main.c **** #define ssi_clk_h HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_SET)
  68:Core/Src/main.c **** #define ssi_clk_l HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_RESET)
  69:Core/Src/main.c **** #define ssi_read_data HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_3) == GPIO_PIN_SET
  70:Core/Src/main.c **** 
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 4


  71:Core/Src/main.c **** void delay_ns(unsigned int ndelay)
  72:Core/Src/main.c **** {
  97              		.loc 1 72 1
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 16
 100              		@ frame_needed = 1, uses_anonymous_args = 0
 101 0000 80B5     		push	{r7, lr}
 102              	.LCFI0:
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 7, -8
 105              		.cfi_offset 14, -4
 106 0002 84B0     		sub	sp, sp, #16
 107              	.LCFI1:
 108              		.cfi_def_cfa_offset 24
 109 0004 00AF     		add	r7, sp, #0
 110              	.LCFI2:
 111              		.cfi_def_cfa_register 7
 112 0006 7860     		str	r0, [r7, #4]
  73:Core/Src/main.c ****   unsigned int i = 0;
 113              		.loc 1 73 16
 114 0008 0023     		movs	r3, #0
 115 000a FB60     		str	r3, [r7, #12]
  74:Core/Src/main.c ****   unsigned int j = 0;
 116              		.loc 1 74 16
 117 000c 0023     		movs	r3, #0
 118 000e BB60     		str	r3, [r7, #8]
  75:Core/Src/main.c ****   for (i = 0; i < 3; i++)
 119              		.loc 1 75 10
 120 0010 0023     		movs	r3, #0
 121 0012 FB60     		str	r3, [r7, #12]
 122              		.loc 1 75 3
 123 0014 05E0     		b	.L2
 124              	.L3:
  76:Core/Src/main.c ****   {
  77:Core/Src/main.c ****     j++;
 125              		.loc 1 77 6 discriminator 3
 126 0016 BB68     		ldr	r3, [r7, #8]
 127 0018 0133     		adds	r3, r3, #1
 128 001a BB60     		str	r3, [r7, #8]
  75:Core/Src/main.c ****   for (i = 0; i < 3; i++)
 129              		.loc 1 75 23 discriminator 3
 130 001c FB68     		ldr	r3, [r7, #12]
 131 001e 0133     		adds	r3, r3, #1
 132 0020 FB60     		str	r3, [r7, #12]
 133              	.L2:
  75:Core/Src/main.c ****   for (i = 0; i < 3; i++)
 134              		.loc 1 75 3 discriminator 1
 135 0022 FB68     		ldr	r3, [r7, #12]
 136 0024 022B     		cmp	r3, #2
 137 0026 F6D9     		bls	.L3
  78:Core/Src/main.c ****   }
  79:Core/Src/main.c **** }
 138              		.loc 1 79 1
 139 0028 C046     		nop
 140 002a C046     		nop
 141 002c BD46     		mov	sp, r7
 142 002e 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 5


 143              		@ sp needed
 144 0030 80BD     		pop	{r7, pc}
 145              		.cfi_endproc
 146              	.LFE40:
 148              		.section	.text.delay_us,"ax",%progbits
 149              		.align	1
 150              		.global	delay_us
 151              		.syntax unified
 152              		.code	16
 153              		.thumb_func
 155              	delay_us:
 156              	.LFB41:
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** void delay_us(unsigned int udelay)
  82:Core/Src/main.c **** {
 157              		.loc 1 82 1
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 16
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161 0000 80B5     		push	{r7, lr}
 162              	.LCFI3:
 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 7, -8
 165              		.cfi_offset 14, -4
 166 0002 84B0     		sub	sp, sp, #16
 167              	.LCFI4:
 168              		.cfi_def_cfa_offset 24
 169 0004 00AF     		add	r7, sp, #0
 170              	.LCFI5:
 171              		.cfi_def_cfa_register 7
 172 0006 7860     		str	r0, [r7, #4]
  83:Core/Src/main.c ****   unsigned int i = 0;
 173              		.loc 1 83 16
 174 0008 0023     		movs	r3, #0
 175 000a FB60     		str	r3, [r7, #12]
  84:Core/Src/main.c ****   for (i = 0; i < udelay; i++)
 176              		.loc 1 84 10
 177 000c 0023     		movs	r3, #0
 178 000e FB60     		str	r3, [r7, #12]
 179              		.loc 1 84 3
 180 0010 07E0     		b	.L5
 181              	.L6:
  85:Core/Src/main.c ****   {
  86:Core/Src/main.c ****     delay_ns(600);
 182              		.loc 1 86 5 discriminator 3
 183 0012 9623     		movs	r3, #150
 184 0014 9B00     		lsls	r3, r3, #2
 185 0016 1800     		movs	r0, r3
 186 0018 FFF7FEFF 		bl	delay_ns
  84:Core/Src/main.c ****   for (i = 0; i < udelay; i++)
 187              		.loc 1 84 28 discriminator 3
 188 001c FB68     		ldr	r3, [r7, #12]
 189 001e 0133     		adds	r3, r3, #1
 190 0020 FB60     		str	r3, [r7, #12]
 191              	.L5:
  84:Core/Src/main.c ****   for (i = 0; i < udelay; i++)
 192              		.loc 1 84 3 discriminator 1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 6


 193 0022 FA68     		ldr	r2, [r7, #12]
 194 0024 7B68     		ldr	r3, [r7, #4]
 195 0026 9A42     		cmp	r2, r3
 196 0028 F3D3     		bcc	.L6
  87:Core/Src/main.c ****   }
  88:Core/Src/main.c **** }
 197              		.loc 1 88 1
 198 002a C046     		nop
 199 002c C046     		nop
 200 002e BD46     		mov	sp, r7
 201 0030 04B0     		add	sp, sp, #16
 202              		@ sp needed
 203 0032 80BD     		pop	{r7, pc}
 204              		.cfi_endproc
 205              	.LFE41:
 207              		.section	.text.delay_ms,"ax",%progbits
 208              		.align	1
 209              		.global	delay_ms
 210              		.syntax unified
 211              		.code	16
 212              		.thumb_func
 214              	delay_ms:
 215              	.LFB42:
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** void delay_ms(unsigned int nms)
  91:Core/Src/main.c **** {
 216              		.loc 1 91 1
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 8
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220 0000 80B5     		push	{r7, lr}
 221              	.LCFI6:
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 7, -8
 224              		.cfi_offset 14, -4
 225 0002 82B0     		sub	sp, sp, #8
 226              	.LCFI7:
 227              		.cfi_def_cfa_offset 16
 228 0004 00AF     		add	r7, sp, #0
 229              	.LCFI8:
 230              		.cfi_def_cfa_register 7
 231 0006 7860     		str	r0, [r7, #4]
  92:Core/Src/main.c ****   for (; nms > 0; nms--)
 232              		.loc 1 92 3
 233 0008 07E0     		b	.L8
 234              	.L9:
  93:Core/Src/main.c ****   {
  94:Core/Src/main.c ****     delay_us(1000);
 235              		.loc 1 94 5 discriminator 2
 236 000a FA23     		movs	r3, #250
 237 000c 9B00     		lsls	r3, r3, #2
 238 000e 1800     		movs	r0, r3
 239 0010 FFF7FEFF 		bl	delay_us
  92:Core/Src/main.c ****   for (; nms > 0; nms--)
 240              		.loc 1 92 22 discriminator 2
 241 0014 7B68     		ldr	r3, [r7, #4]
 242 0016 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 7


 243 0018 7B60     		str	r3, [r7, #4]
 244              	.L8:
  92:Core/Src/main.c ****   for (; nms > 0; nms--)
 245              		.loc 1 92 3 discriminator 1
 246 001a 7B68     		ldr	r3, [r7, #4]
 247 001c 002B     		cmp	r3, #0
 248 001e F4D1     		bne	.L9
  95:Core/Src/main.c ****   }
  96:Core/Src/main.c **** }
 249              		.loc 1 96 1
 250 0020 C046     		nop
 251 0022 C046     		nop
 252 0024 BD46     		mov	sp, r7
 253 0026 02B0     		add	sp, sp, #8
 254              		@ sp needed
 255 0028 80BD     		pop	{r7, pc}
 256              		.cfi_endproc
 257              	.LFE42:
 259              		.section	.text.readma710,"ax",%progbits
 260              		.align	1
 261              		.global	readma710
 262              		.syntax unified
 263              		.code	16
 264              		.thumb_func
 266              	readma710:
 267              	.LFB43:
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** // 角度传感器 SSI 12bits
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** unsigned short readma710(void)
 101:Core/Src/main.c **** {
 268              		.loc 1 101 1
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 8
 271              		@ frame_needed = 1, uses_anonymous_args = 0
 272 0000 80B5     		push	{r7, lr}
 273              	.LCFI9:
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 7, -8
 276              		.cfi_offset 14, -4
 277 0002 82B0     		sub	sp, sp, #8
 278              	.LCFI10:
 279              		.cfi_def_cfa_offset 16
 280 0004 00AF     		add	r7, sp, #0
 281              	.LCFI11:
 282              		.cfi_def_cfa_register 7
 102:Core/Src/main.c ****   unsigned short buf = 0;
 283              		.loc 1 102 18
 284 0006 BB1D     		adds	r3, r7, #6
 285 0008 0022     		movs	r2, #0
 286 000a 1A80     		strh	r2, [r3]
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   ssi_clk_h;
 287              		.loc 1 104 3
 288 000c E84B     		ldr	r3, .L28
 289 000e 0122     		movs	r2, #1
 290 0010 1021     		movs	r1, #16
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 8


 291 0012 1800     		movs	r0, r3
 292 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 105:Core/Src/main.c ****   delay_us(1);
 293              		.loc 1 105 3
 294 0018 0120     		movs	r0, #1
 295 001a FFF7FEFF 		bl	delay_us
 106:Core/Src/main.c ****   ssi_clk_l;
 296              		.loc 1 106 3
 297 001e E44B     		ldr	r3, .L28
 298 0020 0022     		movs	r2, #0
 299 0022 1021     		movs	r1, #16
 300 0024 1800     		movs	r0, r3
 301 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 107:Core/Src/main.c ****   delay_us(1); // 第一个虚拟时钟
 302              		.loc 1 107 3
 303 002a 0120     		movs	r0, #1
 304 002c FFF7FEFF 		bl	delay_us
 108:Core/Src/main.c ****   ssi_clk_h;
 305              		.loc 1 108 3
 306 0030 DF4B     		ldr	r3, .L28
 307 0032 0122     		movs	r2, #1
 308 0034 1021     		movs	r1, #16
 309 0036 1800     		movs	r0, r3
 310 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 109:Core/Src/main.c ****   delay_us(1);
 311              		.loc 1 109 3
 312 003c 0120     		movs	r0, #1
 313 003e FFF7FEFF 		bl	delay_us
 110:Core/Src/main.c ****   if (ssi_read_data)
 314              		.loc 1 110 7
 315 0042 DB4B     		ldr	r3, .L28
 316 0044 0821     		movs	r1, #8
 317 0046 1800     		movs	r0, r3
 318 0048 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 319 004c 0300     		movs	r3, r0
 320              		.loc 1 110 6
 321 004e 012B     		cmp	r3, #1
 322 0050 05D1     		bne	.L11
 111:Core/Src/main.c ****     buf = buf | 0x8000;
 323              		.loc 1 111 9
 324 0052 BB1D     		adds	r3, r7, #6
 325 0054 BA1D     		adds	r2, r7, #6
 326 0056 1288     		ldrh	r2, [r2]
 327 0058 D649     		ldr	r1, .L28+4
 328 005a 0A43     		orrs	r2, r1
 329 005c 1A80     		strh	r2, [r3]
 330              	.L11:
 112:Core/Src/main.c ****   ssi_clk_l;
 331              		.loc 1 112 3
 332 005e D44B     		ldr	r3, .L28
 333 0060 0022     		movs	r2, #0
 334 0062 1021     		movs	r1, #16
 335 0064 1800     		movs	r0, r3
 336 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113:Core/Src/main.c ****   delay_us(1);
 337              		.loc 1 113 3
 338 006a 0120     		movs	r0, #1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 9


 339 006c FFF7FEFF 		bl	delay_us
 114:Core/Src/main.c ****   ssi_clk_h;
 340              		.loc 1 114 3
 341 0070 CF4B     		ldr	r3, .L28
 342 0072 0122     		movs	r2, #1
 343 0074 1021     		movs	r1, #16
 344 0076 1800     		movs	r0, r3
 345 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 115:Core/Src/main.c ****   delay_us(1);
 346              		.loc 1 115 3
 347 007c 0120     		movs	r0, #1
 348 007e FFF7FEFF 		bl	delay_us
 116:Core/Src/main.c ****   if (ssi_read_data)
 349              		.loc 1 116 7
 350 0082 CB4B     		ldr	r3, .L28
 351 0084 0821     		movs	r1, #8
 352 0086 1800     		movs	r0, r3
 353 0088 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 354 008c 0300     		movs	r3, r0
 355              		.loc 1 116 6
 356 008e 012B     		cmp	r3, #1
 357 0090 06D1     		bne	.L12
 117:Core/Src/main.c ****     buf = buf | 0x4000;
 358              		.loc 1 117 9
 359 0092 BB1D     		adds	r3, r7, #6
 360 0094 BA1D     		adds	r2, r7, #6
 361 0096 1288     		ldrh	r2, [r2]
 362 0098 8021     		movs	r1, #128
 363 009a C901     		lsls	r1, r1, #7
 364 009c 0A43     		orrs	r2, r1
 365 009e 1A80     		strh	r2, [r3]
 366              	.L12:
 118:Core/Src/main.c ****   ssi_clk_l;
 367              		.loc 1 118 3
 368 00a0 C34B     		ldr	r3, .L28
 369 00a2 0022     		movs	r2, #0
 370 00a4 1021     		movs	r1, #16
 371 00a6 1800     		movs	r0, r3
 372 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 119:Core/Src/main.c ****   delay_us(1);
 373              		.loc 1 119 3
 374 00ac 0120     		movs	r0, #1
 375 00ae FFF7FEFF 		bl	delay_us
 120:Core/Src/main.c ****   ssi_clk_h;
 376              		.loc 1 120 3
 377 00b2 BF4B     		ldr	r3, .L28
 378 00b4 0122     		movs	r2, #1
 379 00b6 1021     		movs	r1, #16
 380 00b8 1800     		movs	r0, r3
 381 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 121:Core/Src/main.c ****   delay_us(1);
 382              		.loc 1 121 3
 383 00be 0120     		movs	r0, #1
 384 00c0 FFF7FEFF 		bl	delay_us
 122:Core/Src/main.c ****   if (ssi_read_data)
 385              		.loc 1 122 7
 386 00c4 BA4B     		ldr	r3, .L28
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 10


 387 00c6 0821     		movs	r1, #8
 388 00c8 1800     		movs	r0, r3
 389 00ca FFF7FEFF 		bl	HAL_GPIO_ReadPin
 390 00ce 0300     		movs	r3, r0
 391              		.loc 1 122 6
 392 00d0 012B     		cmp	r3, #1
 393 00d2 06D1     		bne	.L13
 123:Core/Src/main.c ****     buf = buf | 0x2000;
 394              		.loc 1 123 9
 395 00d4 BB1D     		adds	r3, r7, #6
 396 00d6 BA1D     		adds	r2, r7, #6
 397 00d8 1288     		ldrh	r2, [r2]
 398 00da 8021     		movs	r1, #128
 399 00dc 8901     		lsls	r1, r1, #6
 400 00de 0A43     		orrs	r2, r1
 401 00e0 1A80     		strh	r2, [r3]
 402              	.L13:
 124:Core/Src/main.c ****   ssi_clk_l;
 403              		.loc 1 124 3
 404 00e2 B34B     		ldr	r3, .L28
 405 00e4 0022     		movs	r2, #0
 406 00e6 1021     		movs	r1, #16
 407 00e8 1800     		movs	r0, r3
 408 00ea FFF7FEFF 		bl	HAL_GPIO_WritePin
 125:Core/Src/main.c ****   delay_us(1);
 409              		.loc 1 125 3
 410 00ee 0120     		movs	r0, #1
 411 00f0 FFF7FEFF 		bl	delay_us
 126:Core/Src/main.c ****   ssi_clk_h;
 412              		.loc 1 126 3
 413 00f4 AE4B     		ldr	r3, .L28
 414 00f6 0122     		movs	r2, #1
 415 00f8 1021     		movs	r1, #16
 416 00fa 1800     		movs	r0, r3
 417 00fc FFF7FEFF 		bl	HAL_GPIO_WritePin
 127:Core/Src/main.c ****   delay_us(1);
 418              		.loc 1 127 3
 419 0100 0120     		movs	r0, #1
 420 0102 FFF7FEFF 		bl	delay_us
 128:Core/Src/main.c ****   if (ssi_read_data)
 421              		.loc 1 128 7
 422 0106 AA4B     		ldr	r3, .L28
 423 0108 0821     		movs	r1, #8
 424 010a 1800     		movs	r0, r3
 425 010c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 426 0110 0300     		movs	r3, r0
 427              		.loc 1 128 6
 428 0112 012B     		cmp	r3, #1
 429 0114 06D1     		bne	.L14
 129:Core/Src/main.c ****     buf = buf | 0x1000;
 430              		.loc 1 129 9
 431 0116 BB1D     		adds	r3, r7, #6
 432 0118 BA1D     		adds	r2, r7, #6
 433 011a 1288     		ldrh	r2, [r2]
 434 011c 8021     		movs	r1, #128
 435 011e 4901     		lsls	r1, r1, #5
 436 0120 0A43     		orrs	r2, r1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 11


 437 0122 1A80     		strh	r2, [r3]
 438              	.L14:
 130:Core/Src/main.c ****   ssi_clk_l;
 439              		.loc 1 130 3
 440 0124 A24B     		ldr	r3, .L28
 441 0126 0022     		movs	r2, #0
 442 0128 1021     		movs	r1, #16
 443 012a 1800     		movs	r0, r3
 444 012c FFF7FEFF 		bl	HAL_GPIO_WritePin
 131:Core/Src/main.c ****   delay_us(1);
 445              		.loc 1 131 3
 446 0130 0120     		movs	r0, #1
 447 0132 FFF7FEFF 		bl	delay_us
 132:Core/Src/main.c ****   ssi_clk_h;
 448              		.loc 1 132 3
 449 0136 9E4B     		ldr	r3, .L28
 450 0138 0122     		movs	r2, #1
 451 013a 1021     		movs	r1, #16
 452 013c 1800     		movs	r0, r3
 453 013e FFF7FEFF 		bl	HAL_GPIO_WritePin
 133:Core/Src/main.c ****   delay_us(1);
 454              		.loc 1 133 3
 455 0142 0120     		movs	r0, #1
 456 0144 FFF7FEFF 		bl	delay_us
 134:Core/Src/main.c ****   if (ssi_read_data)
 457              		.loc 1 134 7
 458 0148 994B     		ldr	r3, .L28
 459 014a 0821     		movs	r1, #8
 460 014c 1800     		movs	r0, r3
 461 014e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 462 0152 0300     		movs	r3, r0
 463              		.loc 1 134 6
 464 0154 012B     		cmp	r3, #1
 465 0156 06D1     		bne	.L15
 135:Core/Src/main.c ****     buf = buf | 0x0800;
 466              		.loc 1 135 9
 467 0158 BB1D     		adds	r3, r7, #6
 468 015a BA1D     		adds	r2, r7, #6
 469 015c 1288     		ldrh	r2, [r2]
 470 015e 8021     		movs	r1, #128
 471 0160 0901     		lsls	r1, r1, #4
 472 0162 0A43     		orrs	r2, r1
 473 0164 1A80     		strh	r2, [r3]
 474              	.L15:
 136:Core/Src/main.c ****   ssi_clk_l;
 475              		.loc 1 136 3
 476 0166 924B     		ldr	r3, .L28
 477 0168 0022     		movs	r2, #0
 478 016a 1021     		movs	r1, #16
 479 016c 1800     		movs	r0, r3
 480 016e FFF7FEFF 		bl	HAL_GPIO_WritePin
 137:Core/Src/main.c ****   delay_us(1);
 481              		.loc 1 137 3
 482 0172 0120     		movs	r0, #1
 483 0174 FFF7FEFF 		bl	delay_us
 138:Core/Src/main.c ****   ssi_clk_h;
 484              		.loc 1 138 3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 12


 485 0178 8D4B     		ldr	r3, .L28
 486 017a 0122     		movs	r2, #1
 487 017c 1021     		movs	r1, #16
 488 017e 1800     		movs	r0, r3
 489 0180 FFF7FEFF 		bl	HAL_GPIO_WritePin
 139:Core/Src/main.c ****   delay_us(1);
 490              		.loc 1 139 3
 491 0184 0120     		movs	r0, #1
 492 0186 FFF7FEFF 		bl	delay_us
 140:Core/Src/main.c ****   if (ssi_read_data)
 493              		.loc 1 140 7
 494 018a 894B     		ldr	r3, .L28
 495 018c 0821     		movs	r1, #8
 496 018e 1800     		movs	r0, r3
 497 0190 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 498 0194 0300     		movs	r3, r0
 499              		.loc 1 140 6
 500 0196 012B     		cmp	r3, #1
 501 0198 06D1     		bne	.L16
 141:Core/Src/main.c ****     buf = buf | 0x0400;
 502              		.loc 1 141 9
 503 019a BB1D     		adds	r3, r7, #6
 504 019c BA1D     		adds	r2, r7, #6
 505 019e 1288     		ldrh	r2, [r2]
 506 01a0 8021     		movs	r1, #128
 507 01a2 C900     		lsls	r1, r1, #3
 508 01a4 0A43     		orrs	r2, r1
 509 01a6 1A80     		strh	r2, [r3]
 510              	.L16:
 142:Core/Src/main.c ****   ssi_clk_l;
 511              		.loc 1 142 3
 512 01a8 814B     		ldr	r3, .L28
 513 01aa 0022     		movs	r2, #0
 514 01ac 1021     		movs	r1, #16
 515 01ae 1800     		movs	r0, r3
 516 01b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 143:Core/Src/main.c ****   delay_us(1);
 517              		.loc 1 143 3
 518 01b4 0120     		movs	r0, #1
 519 01b6 FFF7FEFF 		bl	delay_us
 144:Core/Src/main.c ****   ssi_clk_h;
 520              		.loc 1 144 3
 521 01ba 7D4B     		ldr	r3, .L28
 522 01bc 0122     		movs	r2, #1
 523 01be 1021     		movs	r1, #16
 524 01c0 1800     		movs	r0, r3
 525 01c2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 145:Core/Src/main.c ****   delay_us(1);
 526              		.loc 1 145 3
 527 01c6 0120     		movs	r0, #1
 528 01c8 FFF7FEFF 		bl	delay_us
 146:Core/Src/main.c ****   if (ssi_read_data)
 529              		.loc 1 146 7
 530 01cc 784B     		ldr	r3, .L28
 531 01ce 0821     		movs	r1, #8
 532 01d0 1800     		movs	r0, r3
 533 01d2 FFF7FEFF 		bl	HAL_GPIO_ReadPin
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 13


 534 01d6 0300     		movs	r3, r0
 535              		.loc 1 146 6
 536 01d8 012B     		cmp	r3, #1
 537 01da 06D1     		bne	.L17
 147:Core/Src/main.c ****     buf = buf | 0x0200;
 538              		.loc 1 147 9
 539 01dc BB1D     		adds	r3, r7, #6
 540 01de BA1D     		adds	r2, r7, #6
 541 01e0 1288     		ldrh	r2, [r2]
 542 01e2 8021     		movs	r1, #128
 543 01e4 8900     		lsls	r1, r1, #2
 544 01e6 0A43     		orrs	r2, r1
 545 01e8 1A80     		strh	r2, [r3]
 546              	.L17:
 148:Core/Src/main.c ****   ssi_clk_l;
 547              		.loc 1 148 3
 548 01ea 714B     		ldr	r3, .L28
 549 01ec 0022     		movs	r2, #0
 550 01ee 1021     		movs	r1, #16
 551 01f0 1800     		movs	r0, r3
 552 01f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 149:Core/Src/main.c ****   delay_us(1);
 553              		.loc 1 149 3
 554 01f6 0120     		movs	r0, #1
 555 01f8 FFF7FEFF 		bl	delay_us
 150:Core/Src/main.c ****   ssi_clk_h;
 556              		.loc 1 150 3
 557 01fc 6C4B     		ldr	r3, .L28
 558 01fe 0122     		movs	r2, #1
 559 0200 1021     		movs	r1, #16
 560 0202 1800     		movs	r0, r3
 561 0204 FFF7FEFF 		bl	HAL_GPIO_WritePin
 151:Core/Src/main.c ****   delay_us(1);
 562              		.loc 1 151 3
 563 0208 0120     		movs	r0, #1
 564 020a FFF7FEFF 		bl	delay_us
 152:Core/Src/main.c ****   if (ssi_read_data)
 565              		.loc 1 152 7
 566 020e 684B     		ldr	r3, .L28
 567 0210 0821     		movs	r1, #8
 568 0212 1800     		movs	r0, r3
 569 0214 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 570 0218 0300     		movs	r3, r0
 571              		.loc 1 152 6
 572 021a 012B     		cmp	r3, #1
 573 021c 06D1     		bne	.L18
 153:Core/Src/main.c ****     buf = buf | 0x0100;
 574              		.loc 1 153 9
 575 021e BB1D     		adds	r3, r7, #6
 576 0220 BA1D     		adds	r2, r7, #6
 577 0222 1288     		ldrh	r2, [r2]
 578 0224 8021     		movs	r1, #128
 579 0226 4900     		lsls	r1, r1, #1
 580 0228 0A43     		orrs	r2, r1
 581 022a 1A80     		strh	r2, [r3]
 582              	.L18:
 154:Core/Src/main.c ****   ssi_clk_l;
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 14


 583              		.loc 1 154 3
 584 022c 604B     		ldr	r3, .L28
 585 022e 0022     		movs	r2, #0
 586 0230 1021     		movs	r1, #16
 587 0232 1800     		movs	r0, r3
 588 0234 FFF7FEFF 		bl	HAL_GPIO_WritePin
 155:Core/Src/main.c ****   delay_us(1);
 589              		.loc 1 155 3
 590 0238 0120     		movs	r0, #1
 591 023a FFF7FEFF 		bl	delay_us
 156:Core/Src/main.c ****   ssi_clk_h;
 592              		.loc 1 156 3
 593 023e 5C4B     		ldr	r3, .L28
 594 0240 0122     		movs	r2, #1
 595 0242 1021     		movs	r1, #16
 596 0244 1800     		movs	r0, r3
 597 0246 FFF7FEFF 		bl	HAL_GPIO_WritePin
 157:Core/Src/main.c ****   delay_us(1);
 598              		.loc 1 157 3
 599 024a 0120     		movs	r0, #1
 600 024c FFF7FEFF 		bl	delay_us
 158:Core/Src/main.c ****   if (ssi_read_data)
 601              		.loc 1 158 7
 602 0250 574B     		ldr	r3, .L28
 603 0252 0821     		movs	r1, #8
 604 0254 1800     		movs	r0, r3
 605 0256 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 606 025a 0300     		movs	r3, r0
 607              		.loc 1 158 6
 608 025c 012B     		cmp	r3, #1
 609 025e 05D1     		bne	.L19
 159:Core/Src/main.c ****     buf = buf | 0x0080;
 610              		.loc 1 159 9
 611 0260 BB1D     		adds	r3, r7, #6
 612 0262 BA1D     		adds	r2, r7, #6
 613 0264 1288     		ldrh	r2, [r2]
 614 0266 8021     		movs	r1, #128
 615 0268 0A43     		orrs	r2, r1
 616 026a 1A80     		strh	r2, [r3]
 617              	.L19:
 160:Core/Src/main.c ****   ssi_clk_l;
 618              		.loc 1 160 3
 619 026c 504B     		ldr	r3, .L28
 620 026e 0022     		movs	r2, #0
 621 0270 1021     		movs	r1, #16
 622 0272 1800     		movs	r0, r3
 623 0274 FFF7FEFF 		bl	HAL_GPIO_WritePin
 161:Core/Src/main.c ****   delay_us(1);
 624              		.loc 1 161 3
 625 0278 0120     		movs	r0, #1
 626 027a FFF7FEFF 		bl	delay_us
 162:Core/Src/main.c ****   ssi_clk_h;
 627              		.loc 1 162 3
 628 027e 4C4B     		ldr	r3, .L28
 629 0280 0122     		movs	r2, #1
 630 0282 1021     		movs	r1, #16
 631 0284 1800     		movs	r0, r3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 15


 632 0286 FFF7FEFF 		bl	HAL_GPIO_WritePin
 163:Core/Src/main.c ****   delay_us(1);
 633              		.loc 1 163 3
 634 028a 0120     		movs	r0, #1
 635 028c FFF7FEFF 		bl	delay_us
 164:Core/Src/main.c ****   if (ssi_read_data)
 636              		.loc 1 164 7
 637 0290 474B     		ldr	r3, .L28
 638 0292 0821     		movs	r1, #8
 639 0294 1800     		movs	r0, r3
 640 0296 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 641 029a 0300     		movs	r3, r0
 642              		.loc 1 164 6
 643 029c 012B     		cmp	r3, #1
 644 029e 05D1     		bne	.L20
 165:Core/Src/main.c ****     buf = buf | 0x0040;
 645              		.loc 1 165 9
 646 02a0 BB1D     		adds	r3, r7, #6
 647 02a2 BA1D     		adds	r2, r7, #6
 648 02a4 1288     		ldrh	r2, [r2]
 649 02a6 4021     		movs	r1, #64
 650 02a8 0A43     		orrs	r2, r1
 651 02aa 1A80     		strh	r2, [r3]
 652              	.L20:
 166:Core/Src/main.c ****   ssi_clk_l;
 653              		.loc 1 166 3
 654 02ac 404B     		ldr	r3, .L28
 655 02ae 0022     		movs	r2, #0
 656 02b0 1021     		movs	r1, #16
 657 02b2 1800     		movs	r0, r3
 658 02b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 167:Core/Src/main.c ****   delay_us(1);
 659              		.loc 1 167 3
 660 02b8 0120     		movs	r0, #1
 661 02ba FFF7FEFF 		bl	delay_us
 168:Core/Src/main.c ****   ssi_clk_h;
 662              		.loc 1 168 3
 663 02be 3C4B     		ldr	r3, .L28
 664 02c0 0122     		movs	r2, #1
 665 02c2 1021     		movs	r1, #16
 666 02c4 1800     		movs	r0, r3
 667 02c6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 169:Core/Src/main.c ****   delay_us(1);
 668              		.loc 1 169 3
 669 02ca 0120     		movs	r0, #1
 670 02cc FFF7FEFF 		bl	delay_us
 170:Core/Src/main.c ****   if (ssi_read_data)
 671              		.loc 1 170 7
 672 02d0 374B     		ldr	r3, .L28
 673 02d2 0821     		movs	r1, #8
 674 02d4 1800     		movs	r0, r3
 675 02d6 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 676 02da 0300     		movs	r3, r0
 677              		.loc 1 170 6
 678 02dc 012B     		cmp	r3, #1
 679 02de 05D1     		bne	.L21
 171:Core/Src/main.c ****     buf = buf | 0x0020;
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 16


 680              		.loc 1 171 9
 681 02e0 BB1D     		adds	r3, r7, #6
 682 02e2 BA1D     		adds	r2, r7, #6
 683 02e4 1288     		ldrh	r2, [r2]
 684 02e6 2021     		movs	r1, #32
 685 02e8 0A43     		orrs	r2, r1
 686 02ea 1A80     		strh	r2, [r3]
 687              	.L21:
 172:Core/Src/main.c ****   ssi_clk_l;
 688              		.loc 1 172 3
 689 02ec 304B     		ldr	r3, .L28
 690 02ee 0022     		movs	r2, #0
 691 02f0 1021     		movs	r1, #16
 692 02f2 1800     		movs	r0, r3
 693 02f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 173:Core/Src/main.c ****   delay_us(1);
 694              		.loc 1 173 3
 695 02f8 0120     		movs	r0, #1
 696 02fa FFF7FEFF 		bl	delay_us
 174:Core/Src/main.c ****   ssi_clk_h;
 697              		.loc 1 174 3
 698 02fe 2C4B     		ldr	r3, .L28
 699 0300 0122     		movs	r2, #1
 700 0302 1021     		movs	r1, #16
 701 0304 1800     		movs	r0, r3
 702 0306 FFF7FEFF 		bl	HAL_GPIO_WritePin
 175:Core/Src/main.c ****   delay_us(1);
 703              		.loc 1 175 3
 704 030a 0120     		movs	r0, #1
 705 030c FFF7FEFF 		bl	delay_us
 176:Core/Src/main.c ****   if (ssi_read_data)
 706              		.loc 1 176 7
 707 0310 274B     		ldr	r3, .L28
 708 0312 0821     		movs	r1, #8
 709 0314 1800     		movs	r0, r3
 710 0316 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 711 031a 0300     		movs	r3, r0
 712              		.loc 1 176 6
 713 031c 012B     		cmp	r3, #1
 714 031e 05D1     		bne	.L22
 177:Core/Src/main.c ****     buf = buf | 0x0010;
 715              		.loc 1 177 9
 716 0320 BB1D     		adds	r3, r7, #6
 717 0322 BA1D     		adds	r2, r7, #6
 718 0324 1288     		ldrh	r2, [r2]
 719 0326 1021     		movs	r1, #16
 720 0328 0A43     		orrs	r2, r1
 721 032a 1A80     		strh	r2, [r3]
 722              	.L22:
 178:Core/Src/main.c ****   ssi_clk_l;
 723              		.loc 1 178 3
 724 032c 204B     		ldr	r3, .L28
 725 032e 0022     		movs	r2, #0
 726 0330 1021     		movs	r1, #16
 727 0332 1800     		movs	r0, r3
 728 0334 FFF7FEFF 		bl	HAL_GPIO_WritePin
 179:Core/Src/main.c ****   delay_us(1);
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 17


 729              		.loc 1 179 3
 730 0338 0120     		movs	r0, #1
 731 033a FFF7FEFF 		bl	delay_us
 180:Core/Src/main.c ****   ssi_clk_h;
 732              		.loc 1 180 3
 733 033e 1C4B     		ldr	r3, .L28
 734 0340 0122     		movs	r2, #1
 735 0342 1021     		movs	r1, #16
 736 0344 1800     		movs	r0, r3
 737 0346 FFF7FEFF 		bl	HAL_GPIO_WritePin
 181:Core/Src/main.c ****   delay_us(1);
 738              		.loc 1 181 3
 739 034a 0120     		movs	r0, #1
 740 034c FFF7FEFF 		bl	delay_us
 182:Core/Src/main.c ****   if (ssi_read_data)
 741              		.loc 1 182 7
 742 0350 174B     		ldr	r3, .L28
 743 0352 0821     		movs	r1, #8
 744 0354 1800     		movs	r0, r3
 745 0356 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 746 035a 0300     		movs	r3, r0
 747              		.loc 1 182 6
 748 035c 012B     		cmp	r3, #1
 749 035e 05D1     		bne	.L23
 183:Core/Src/main.c ****     buf = buf | 0x0008;
 750              		.loc 1 183 9
 751 0360 BB1D     		adds	r3, r7, #6
 752 0362 BA1D     		adds	r2, r7, #6
 753 0364 1288     		ldrh	r2, [r2]
 754 0366 0821     		movs	r1, #8
 755 0368 0A43     		orrs	r2, r1
 756 036a 1A80     		strh	r2, [r3]
 757              	.L23:
 184:Core/Src/main.c ****   ssi_clk_l;
 758              		.loc 1 184 3
 759 036c 104B     		ldr	r3, .L28
 760 036e 0022     		movs	r2, #0
 761 0370 1021     		movs	r1, #16
 762 0372 1800     		movs	r0, r3
 763 0374 FFF7FEFF 		bl	HAL_GPIO_WritePin
 185:Core/Src/main.c ****   delay_us(1);
 764              		.loc 1 185 3
 765 0378 0120     		movs	r0, #1
 766 037a FFF7FEFF 		bl	delay_us
 186:Core/Src/main.c ****   ssi_clk_h;
 767              		.loc 1 186 3
 768 037e 0C4B     		ldr	r3, .L28
 769 0380 0122     		movs	r2, #1
 770 0382 1021     		movs	r1, #16
 771 0384 1800     		movs	r0, r3
 772 0386 FFF7FEFF 		bl	HAL_GPIO_WritePin
 187:Core/Src/main.c ****   delay_us(1);
 773              		.loc 1 187 3
 774 038a 0120     		movs	r0, #1
 775 038c FFF7FEFF 		bl	delay_us
 188:Core/Src/main.c ****   if (ssi_read_data)
 776              		.loc 1 188 7
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 18


 777 0390 074B     		ldr	r3, .L28
 778 0392 0821     		movs	r1, #8
 779 0394 1800     		movs	r0, r3
 780 0396 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 781 039a 0300     		movs	r3, r0
 782              		.loc 1 188 6
 783 039c 012B     		cmp	r3, #1
 784 039e 0BD1     		bne	.L24
 189:Core/Src/main.c ****     buf = buf | 0x0004;
 785              		.loc 1 189 9
 786 03a0 BB1D     		adds	r3, r7, #6
 787 03a2 BA1D     		adds	r2, r7, #6
 788 03a4 1288     		ldrh	r2, [r2]
 789 03a6 0421     		movs	r1, #4
 790 03a8 0A43     		orrs	r2, r1
 791 03aa 1A80     		strh	r2, [r3]
 792 03ac 04E0     		b	.L29
 793              	.L30:
 794 03ae C046     		.align	2
 795              	.L28:
 796 03b0 00040048 		.word	1207960576
 797 03b4 0080FFFF 		.word	-32768
 798              	.L29:
 799              	.L24:
 190:Core/Src/main.c ****   ssi_clk_l;
 800              		.loc 1 190 3
 801 03b8 274B     		ldr	r3, .L31
 802 03ba 0022     		movs	r2, #0
 803 03bc 1021     		movs	r1, #16
 804 03be 1800     		movs	r0, r3
 805 03c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 191:Core/Src/main.c ****   delay_us(1);
 806              		.loc 1 191 3
 807 03c4 0120     		movs	r0, #1
 808 03c6 FFF7FEFF 		bl	delay_us
 192:Core/Src/main.c ****   ssi_clk_h;
 809              		.loc 1 192 3
 810 03ca 234B     		ldr	r3, .L31
 811 03cc 0122     		movs	r2, #1
 812 03ce 1021     		movs	r1, #16
 813 03d0 1800     		movs	r0, r3
 814 03d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 193:Core/Src/main.c ****   delay_us(1);
 815              		.loc 1 193 3
 816 03d6 0120     		movs	r0, #1
 817 03d8 FFF7FEFF 		bl	delay_us
 194:Core/Src/main.c ****   if (ssi_read_data)
 818              		.loc 1 194 7
 819 03dc 1E4B     		ldr	r3, .L31
 820 03de 0821     		movs	r1, #8
 821 03e0 1800     		movs	r0, r3
 822 03e2 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 823 03e6 0300     		movs	r3, r0
 824              		.loc 1 194 6
 825 03e8 012B     		cmp	r3, #1
 826 03ea 05D1     		bne	.L25
 195:Core/Src/main.c ****     buf = buf | 0x0002;
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 19


 827              		.loc 1 195 9
 828 03ec BB1D     		adds	r3, r7, #6
 829 03ee BA1D     		adds	r2, r7, #6
 830 03f0 1288     		ldrh	r2, [r2]
 831 03f2 0221     		movs	r1, #2
 832 03f4 0A43     		orrs	r2, r1
 833 03f6 1A80     		strh	r2, [r3]
 834              	.L25:
 196:Core/Src/main.c ****   ssi_clk_l;
 835              		.loc 1 196 3
 836 03f8 174B     		ldr	r3, .L31
 837 03fa 0022     		movs	r2, #0
 838 03fc 1021     		movs	r1, #16
 839 03fe 1800     		movs	r0, r3
 840 0400 FFF7FEFF 		bl	HAL_GPIO_WritePin
 197:Core/Src/main.c ****   delay_us(1);
 841              		.loc 1 197 3
 842 0404 0120     		movs	r0, #1
 843 0406 FFF7FEFF 		bl	delay_us
 198:Core/Src/main.c ****   ssi_clk_h;
 844              		.loc 1 198 3
 845 040a 134B     		ldr	r3, .L31
 846 040c 0122     		movs	r2, #1
 847 040e 1021     		movs	r1, #16
 848 0410 1800     		movs	r0, r3
 849 0412 FFF7FEFF 		bl	HAL_GPIO_WritePin
 199:Core/Src/main.c ****   delay_us(1);
 850              		.loc 1 199 3
 851 0416 0120     		movs	r0, #1
 852 0418 FFF7FEFF 		bl	delay_us
 200:Core/Src/main.c ****   if (ssi_read_data)
 853              		.loc 1 200 7
 854 041c 0E4B     		ldr	r3, .L31
 855 041e 0821     		movs	r1, #8
 856 0420 1800     		movs	r0, r3
 857 0422 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 858 0426 0300     		movs	r3, r0
 859              		.loc 1 200 6
 860 0428 012B     		cmp	r3, #1
 861 042a 05D1     		bne	.L26
 201:Core/Src/main.c ****     buf = buf | 0x0001;
 862              		.loc 1 201 9
 863 042c BB1D     		adds	r3, r7, #6
 864 042e BA1D     		adds	r2, r7, #6
 865 0430 1288     		ldrh	r2, [r2]
 866 0432 0121     		movs	r1, #1
 867 0434 0A43     		orrs	r2, r1
 868 0436 1A80     		strh	r2, [r3]
 869              	.L26:
 202:Core/Src/main.c ****   ssi_clk_l;
 870              		.loc 1 202 3
 871 0438 074B     		ldr	r3, .L31
 872 043a 0022     		movs	r2, #0
 873 043c 1021     		movs	r1, #16
 874 043e 1800     		movs	r0, r3
 875 0440 FFF7FEFF 		bl	HAL_GPIO_WritePin
 203:Core/Src/main.c ****   delay_us(1);
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 20


 876              		.loc 1 203 3
 877 0444 0120     		movs	r0, #1
 878 0446 FFF7FEFF 		bl	delay_us
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   return buf;
 879              		.loc 1 205 10
 880 044a BB1D     		adds	r3, r7, #6
 881 044c 1B88     		ldrh	r3, [r3]
 206:Core/Src/main.c **** }
 882              		.loc 1 206 1
 883 044e 1800     		movs	r0, r3
 884 0450 BD46     		mov	sp, r7
 885 0452 02B0     		add	sp, sp, #8
 886              		@ sp needed
 887 0454 80BD     		pop	{r7, pc}
 888              	.L32:
 889 0456 C046     		.align	2
 890              	.L31:
 891 0458 00040048 		.word	1207960576
 892              		.cfi_endproc
 893              	.LFE43:
 895              		.section	.text.startADC,"ax",%progbits
 896              		.align	1
 897              		.global	startADC
 898              		.syntax unified
 899              		.code	16
 900              		.thumb_func
 902              	startADC:
 903              	.LFB44:
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** //  开启ADC转换
 209:Core/Src/main.c **** void startADC(void)
 210:Core/Src/main.c **** {
 904              		.loc 1 210 1
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 1, uses_anonymous_args = 0
 908 0000 80B5     		push	{r7, lr}
 909              	.LCFI12:
 910              		.cfi_def_cfa_offset 8
 911              		.cfi_offset 7, -8
 912              		.cfi_offset 14, -4
 913 0002 00AF     		add	r7, sp, #0
 914              	.LCFI13:
 915              		.cfi_def_cfa_register 7
 211:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc, (uint32_t *)&AdDataOrig, SUMC * SUMCHAN);
 916              		.loc 1 211 3
 917 0004 C823     		movs	r3, #200
 918 0006 5A00     		lsls	r2, r3, #1
 919 0008 0349     		ldr	r1, .L34
 920 000a 044B     		ldr	r3, .L34+4
 921 000c 1800     		movs	r0, r3
 922 000e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 212:Core/Src/main.c **** }
 923              		.loc 1 212 1
 924 0012 C046     		nop
 925 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 21


 926              		@ sp needed
 927 0016 80BD     		pop	{r7, pc}
 928              	.L35:
 929              		.align	2
 930              	.L34:
 931 0018 00000000 		.word	AdDataOrig
 932 001c 00000000 		.word	hadc
 933              		.cfi_endproc
 934              	.LFE44:
 936              		.section	.text.stopADC,"ax",%progbits
 937              		.align	1
 938              		.global	stopADC
 939              		.syntax unified
 940              		.code	16
 941              		.thumb_func
 943              	stopADC:
 944              	.LFB45:
 213:Core/Src/main.c **** 
 214:Core/Src/main.c **** // 关闭ADC转换
 215:Core/Src/main.c **** void stopADC(void)
 216:Core/Src/main.c **** {
 945              		.loc 1 216 1
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 1, uses_anonymous_args = 0
 949 0000 80B5     		push	{r7, lr}
 950              	.LCFI14:
 951              		.cfi_def_cfa_offset 8
 952              		.cfi_offset 7, -8
 953              		.cfi_offset 14, -4
 954 0002 00AF     		add	r7, sp, #0
 955              	.LCFI15:
 956              		.cfi_def_cfa_register 7
 217:Core/Src/main.c ****   HAL_ADC_Stop_DMA(&hadc);
 957              		.loc 1 217 3
 958 0004 034B     		ldr	r3, .L37
 959 0006 1800     		movs	r0, r3
 960 0008 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 218:Core/Src/main.c **** }
 961              		.loc 1 218 1
 962 000c C046     		nop
 963 000e BD46     		mov	sp, r7
 964              		@ sp needed
 965 0010 80BD     		pop	{r7, pc}
 966              	.L38:
 967 0012 C046     		.align	2
 968              	.L37:
 969 0014 00000000 		.word	hadc
 970              		.cfi_endproc
 971              	.LFE45:
 973              		.global	__aeabi_uidiv
 974              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 975              		.align	1
 976              		.global	HAL_ADC_ConvCpltCallback
 977              		.syntax unified
 978              		.code	16
 979              		.thumb_func
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 22


 981              	HAL_ADC_ConvCpltCallback:
 982              	.LFB46:
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** // ADC转换完成的回调 hal中拷贝出来的  在这个回调中计算adc的平均值
 221:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
 222:Core/Src/main.c **** {
 983              		.loc 1 222 1
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 40
 986              		@ frame_needed = 1, uses_anonymous_args = 0
 987 0000 90B5     		push	{r4, r7, lr}
 988              	.LCFI16:
 989              		.cfi_def_cfa_offset 12
 990              		.cfi_offset 4, -12
 991              		.cfi_offset 7, -8
 992              		.cfi_offset 14, -4
 993 0002 8BB0     		sub	sp, sp, #44
 994              	.LCFI17:
 995              		.cfi_def_cfa_offset 56
 996 0004 00AF     		add	r7, sp, #0
 997              	.LCFI18:
 998              		.cfi_def_cfa_register 7
 999 0006 7860     		str	r0, [r7, #4]
 223:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 224:Core/Src/main.c ****   UNUSED(hadc);
 225:Core/Src/main.c ****   unsigned int i, j;
 226:Core/Src/main.c ****   unsigned int tmp[6] = {0, 0, 0, 0, 0, 0};
 1000              		.loc 1 226 16
 1001 0008 0823     		movs	r3, #8
 1002 000a FB18     		adds	r3, r7, r3
 1003 000c 1800     		movs	r0, r3
 1004 000e 1823     		movs	r3, #24
 1005 0010 1A00     		movs	r2, r3
 1006 0012 0021     		movs	r1, #0
 1007 0014 FFF7FEFF 		bl	memset
 227:Core/Src/main.c ****   for (j = 0; j < 5; j++) // 通道数量
 1008              		.loc 1 227 10
 1009 0018 0023     		movs	r3, #0
 1010 001a 3B62     		str	r3, [r7, #32]
 1011              		.loc 1 227 3
 1012 001c 46E0     		b	.L40
 1013              	.L46:
 228:Core/Src/main.c ****   {
 229:Core/Src/main.c ****     tmp[j] = 0;
 1014              		.loc 1 229 12
 1015 001e 0823     		movs	r3, #8
 1016 0020 FB18     		adds	r3, r7, r3
 1017 0022 3A6A     		ldr	r2, [r7, #32]
 1018 0024 9200     		lsls	r2, r2, #2
 1019 0026 0021     		movs	r1, #0
 1020 0028 D150     		str	r1, [r2, r3]
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****     switch (j)
 1021              		.loc 1 231 5
 1022 002a 3B6A     		ldr	r3, [r7, #32]
 1023 002c 032B     		cmp	r3, #3
 1024 002e 03D9     		bls	.L41
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 23


 1025 0030 3B6A     		ldr	r3, [r7, #32]
 1026 0032 042B     		cmp	r3, #4
 1027 0034 2AD0     		beq	.L42
 1028 0036 30E0     		b	.L43
 1029              	.L41:
 232:Core/Src/main.c ****     {
 233:Core/Src/main.c ****     case 0: // 获取ADC数值
 234:Core/Src/main.c ****     case 1:
 235:Core/Src/main.c ****     case 2:
 236:Core/Src/main.c ****     case 3:
 237:Core/Src/main.c ****       for (i = 0; i < SUMC; i++)
 1030              		.loc 1 237 14
 1031 0038 0023     		movs	r3, #0
 1032 003a 7B62     		str	r3, [r7, #36]
 1033              		.loc 1 237 7
 1034 003c 13E0     		b	.L44
 1035              	.L45:
 238:Core/Src/main.c ****       {
 239:Core/Src/main.c ****         tmp[j] = tmp[j] + AdDataOrig[i][j];
 1036              		.loc 1 239 21 discriminator 3
 1037 003e 0824     		movs	r4, #8
 1038 0040 3B19     		adds	r3, r7, r4
 1039 0042 3A6A     		ldr	r2, [r7, #32]
 1040 0044 9200     		lsls	r2, r2, #2
 1041 0046 D358     		ldr	r3, [r2, r3]
 1042              		.loc 1 239 40 discriminator 3
 1043 0048 1C4A     		ldr	r2, .L47
 1044 004a 796A     		ldr	r1, [r7, #36]
 1045 004c 8800     		lsls	r0, r1, #2
 1046 004e 396A     		ldr	r1, [r7, #32]
 1047 0050 4118     		adds	r1, r0, r1
 1048 0052 4900     		lsls	r1, r1, #1
 1049 0054 8A5A     		ldrh	r2, [r1, r2]
 1050              		.loc 1 239 25 discriminator 3
 1051 0056 9918     		adds	r1, r3, r2
 1052              		.loc 1 239 16 discriminator 3
 1053 0058 3B19     		adds	r3, r7, r4
 1054 005a 3A6A     		ldr	r2, [r7, #32]
 1055 005c 9200     		lsls	r2, r2, #2
 1056 005e D150     		str	r1, [r2, r3]
 237:Core/Src/main.c ****       {
 1057              		.loc 1 237 30 discriminator 3
 1058 0060 7B6A     		ldr	r3, [r7, #36]
 1059 0062 0133     		adds	r3, r3, #1
 1060 0064 7B62     		str	r3, [r7, #36]
 1061              	.L44:
 237:Core/Src/main.c ****       {
 1062              		.loc 1 237 7 discriminator 1
 1063 0066 7B6A     		ldr	r3, [r7, #36]
 1064 0068 632B     		cmp	r3, #99
 1065 006a E8D9     		bls	.L45
 240:Core/Src/main.c ****       }
 241:Core/Src/main.c ****       AdcValue[j] = tmp[j] / SUMC;
 1066              		.loc 1 241 24
 1067 006c 0823     		movs	r3, #8
 1068 006e FB18     		adds	r3, r7, r3
 1069 0070 3A6A     		ldr	r2, [r7, #32]
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 24


 1070 0072 9200     		lsls	r2, r2, #2
 1071 0074 D358     		ldr	r3, [r2, r3]
 1072              		.loc 1 241 28
 1073 0076 6421     		movs	r1, #100
 1074 0078 1800     		movs	r0, r3
 1075 007a FFF7FEFF 		bl	__aeabi_uidiv
 1076 007e 0300     		movs	r3, r0
 1077              		.loc 1 241 19
 1078 0080 99B2     		uxth	r1, r3
 1079 0082 0F4B     		ldr	r3, .L47+4
 1080 0084 3A6A     		ldr	r2, [r7, #32]
 1081 0086 5200     		lsls	r2, r2, #1
 1082 0088 D152     		strh	r1, [r2, r3]
 242:Core/Src/main.c ****       break;
 1083              		.loc 1 242 7
 1084 008a 06E0     		b	.L43
 1085              	.L42:
 243:Core/Src/main.c ****     case 4: // 获取角度值
 244:Core/Src/main.c ****       AdcValue[4] = readma710();
 1086              		.loc 1 244 21
 1087 008c FFF7FEFF 		bl	readma710
 1088 0090 0300     		movs	r3, r0
 1089 0092 1A00     		movs	r2, r3
 1090              		.loc 1 244 19
 1091 0094 0A4B     		ldr	r3, .L47+4
 1092 0096 1A81     		strh	r2, [r3, #8]
 245:Core/Src/main.c ****       break;
 1093              		.loc 1 245 7
 1094 0098 C046     		nop
 1095              	.L43:
 246:Core/Src/main.c ****     }
 247:Core/Src/main.c ****     tmp[j] = 0;
 1096              		.loc 1 247 12 discriminator 2
 1097 009a 0823     		movs	r3, #8
 1098 009c FB18     		adds	r3, r7, r3
 1099 009e 3A6A     		ldr	r2, [r7, #32]
 1100 00a0 9200     		lsls	r2, r2, #2
 1101 00a2 0021     		movs	r1, #0
 1102 00a4 D150     		str	r1, [r2, r3]
 227:Core/Src/main.c ****   {
 1103              		.loc 1 227 23 discriminator 2
 1104 00a6 3B6A     		ldr	r3, [r7, #32]
 1105 00a8 0133     		adds	r3, r3, #1
 1106 00aa 3B62     		str	r3, [r7, #32]
 1107              	.L40:
 227:Core/Src/main.c ****   {
 1108              		.loc 1 227 3 discriminator 1
 1109 00ac 3B6A     		ldr	r3, [r7, #32]
 1110 00ae 042B     		cmp	r3, #4
 1111 00b0 B5D9     		bls	.L46
 248:Core/Src/main.c ****   }
 249:Core/Src/main.c **** }
 1112              		.loc 1 249 1
 1113 00b2 C046     		nop
 1114 00b4 C046     		nop
 1115 00b6 BD46     		mov	sp, r7
 1116 00b8 0BB0     		add	sp, sp, #44
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 25


 1117              		@ sp needed
 1118 00ba 90BD     		pop	{r4, r7, pc}
 1119              	.L48:
 1120              		.align	2
 1121              	.L47:
 1122 00bc 00000000 		.word	AdDataOrig
 1123 00c0 00000000 		.word	AdcValue
 1124              		.cfi_endproc
 1125              	.LFE46:
 1127              		.section	.text.AcUpload,"ax",%progbits
 1128              		.align	1
 1129              		.global	AcUpload
 1130              		.syntax unified
 1131              		.code	16
 1132              		.thumb_func
 1134              	AcUpload:
 1135              	.LFB47:
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** // 主动长传传感器数据 4个模拟量 1个角度数据
 252:Core/Src/main.c **** void AcUpload(unsigned short *PUPS)
 253:Core/Src/main.c **** {
 1136              		.loc 1 253 1
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 32
 1139              		@ frame_needed = 1, uses_anonymous_args = 0
 1140 0000 B0B5     		push	{r4, r5, r7, lr}
 1141              	.LCFI19:
 1142              		.cfi_def_cfa_offset 16
 1143              		.cfi_offset 4, -16
 1144              		.cfi_offset 5, -12
 1145              		.cfi_offset 7, -8
 1146              		.cfi_offset 14, -4
 1147 0002 88B0     		sub	sp, sp, #32
 1148              	.LCFI20:
 1149              		.cfi_def_cfa_offset 48
 1150 0004 00AF     		add	r7, sp, #0
 1151              	.LCFI21:
 1152              		.cfi_def_cfa_register 7
 1153 0006 7860     		str	r0, [r7, #4]
 254:Core/Src/main.c ****   unsigned char i;
 255:Core/Src/main.c ****   char TxBufU1[20];
 256:Core/Src/main.c ****   i = 0;
 1154              		.loc 1 256 5
 1155 0008 1F24     		movs	r4, #31
 1156 000a 3B19     		adds	r3, r7, r4
 1157 000c 0022     		movs	r2, #0
 1158 000e 1A70     		strb	r2, [r3]
 257:Core/Src/main.c ****   TxBufU1[i++] = 0xFA;
 1159              		.loc 1 257 12
 1160 0010 3B19     		adds	r3, r7, r4
 1161 0012 1B78     		ldrb	r3, [r3]
 1162 0014 3A19     		adds	r2, r7, r4
 1163 0016 591C     		adds	r1, r3, #1
 1164 0018 1170     		strb	r1, [r2]
 1165 001a 1A00     		movs	r2, r3
 1166              		.loc 1 257 16
 1167 001c 0825     		movs	r5, #8
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 26


 1168 001e 7B19     		adds	r3, r7, r5
 1169 0020 FA21     		movs	r1, #250
 1170 0022 9954     		strb	r1, [r3, r2]
 258:Core/Src/main.c ****   TxBufU1[i++] = 0xF5;
 1171              		.loc 1 258 12
 1172 0024 3B19     		adds	r3, r7, r4
 1173 0026 1B78     		ldrb	r3, [r3]
 1174 0028 3A19     		adds	r2, r7, r4
 1175 002a 591C     		adds	r1, r3, #1
 1176 002c 1170     		strb	r1, [r2]
 1177 002e 1A00     		movs	r2, r3
 1178              		.loc 1 258 16
 1179 0030 7B19     		adds	r3, r7, r5
 1180 0032 F521     		movs	r1, #245
 1181 0034 9954     		strb	r1, [r3, r2]
 259:Core/Src/main.c ****   TxBufU1[i++] = PUPS[0] >> 0;
 1182              		.loc 1 259 22
 1183 0036 7B68     		ldr	r3, [r7, #4]
 1184 0038 1988     		ldrh	r1, [r3]
 1185              		.loc 1 259 12
 1186 003a 3B19     		adds	r3, r7, r4
 1187 003c 1B78     		ldrb	r3, [r3]
 1188 003e 3A19     		adds	r2, r7, r4
 1189 0040 581C     		adds	r0, r3, #1
 1190 0042 1070     		strb	r0, [r2]
 1191 0044 1A00     		movs	r2, r3
 1192              		.loc 1 259 16
 1193 0046 C9B2     		uxtb	r1, r1
 1194 0048 7B19     		adds	r3, r7, r5
 1195 004a 9954     		strb	r1, [r3, r2]
 260:Core/Src/main.c ****   TxBufU1[i++] = PUPS[0] >> 8;
 1196              		.loc 1 260 22
 1197 004c 7B68     		ldr	r3, [r7, #4]
 1198 004e 1B88     		ldrh	r3, [r3]
 1199              		.loc 1 260 16
 1200 0050 1B0A     		lsrs	r3, r3, #8
 1201 0052 99B2     		uxth	r1, r3
 1202              		.loc 1 260 12
 1203 0054 3B19     		adds	r3, r7, r4
 1204 0056 1B78     		ldrb	r3, [r3]
 1205 0058 3A19     		adds	r2, r7, r4
 1206 005a 581C     		adds	r0, r3, #1
 1207 005c 1070     		strb	r0, [r2]
 1208 005e 1A00     		movs	r2, r3
 1209              		.loc 1 260 16
 1210 0060 C9B2     		uxtb	r1, r1
 1211 0062 7B19     		adds	r3, r7, r5
 1212 0064 9954     		strb	r1, [r3, r2]
 261:Core/Src/main.c ****   TxBufU1[i++] = PUPS[1] >> 0;
 1213              		.loc 1 261 22
 1214 0066 7B68     		ldr	r3, [r7, #4]
 1215 0068 0233     		adds	r3, r3, #2
 1216 006a 1988     		ldrh	r1, [r3]
 1217              		.loc 1 261 12
 1218 006c 3B19     		adds	r3, r7, r4
 1219 006e 1B78     		ldrb	r3, [r3]
 1220 0070 3A19     		adds	r2, r7, r4
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 27


 1221 0072 581C     		adds	r0, r3, #1
 1222 0074 1070     		strb	r0, [r2]
 1223 0076 1A00     		movs	r2, r3
 1224              		.loc 1 261 16
 1225 0078 C9B2     		uxtb	r1, r1
 1226 007a 7B19     		adds	r3, r7, r5
 1227 007c 9954     		strb	r1, [r3, r2]
 262:Core/Src/main.c ****   TxBufU1[i++] = PUPS[1] >> 8;
 1228              		.loc 1 262 22
 1229 007e 7B68     		ldr	r3, [r7, #4]
 1230 0080 0233     		adds	r3, r3, #2
 1231 0082 1B88     		ldrh	r3, [r3]
 1232              		.loc 1 262 16
 1233 0084 1B0A     		lsrs	r3, r3, #8
 1234 0086 99B2     		uxth	r1, r3
 1235              		.loc 1 262 12
 1236 0088 3B19     		adds	r3, r7, r4
 1237 008a 1B78     		ldrb	r3, [r3]
 1238 008c 3A19     		adds	r2, r7, r4
 1239 008e 581C     		adds	r0, r3, #1
 1240 0090 1070     		strb	r0, [r2]
 1241 0092 1A00     		movs	r2, r3
 1242              		.loc 1 262 16
 1243 0094 C9B2     		uxtb	r1, r1
 1244 0096 7B19     		adds	r3, r7, r5
 1245 0098 9954     		strb	r1, [r3, r2]
 263:Core/Src/main.c ****   TxBufU1[i++] = PUPS[2] >> 0;
 1246              		.loc 1 263 22
 1247 009a 7B68     		ldr	r3, [r7, #4]
 1248 009c 0433     		adds	r3, r3, #4
 1249 009e 1988     		ldrh	r1, [r3]
 1250              		.loc 1 263 12
 1251 00a0 3B19     		adds	r3, r7, r4
 1252 00a2 1B78     		ldrb	r3, [r3]
 1253 00a4 3A19     		adds	r2, r7, r4
 1254 00a6 581C     		adds	r0, r3, #1
 1255 00a8 1070     		strb	r0, [r2]
 1256 00aa 1A00     		movs	r2, r3
 1257              		.loc 1 263 16
 1258 00ac C9B2     		uxtb	r1, r1
 1259 00ae 7B19     		adds	r3, r7, r5
 1260 00b0 9954     		strb	r1, [r3, r2]
 264:Core/Src/main.c ****   TxBufU1[i++] = PUPS[2] >> 8;
 1261              		.loc 1 264 22
 1262 00b2 7B68     		ldr	r3, [r7, #4]
 1263 00b4 0433     		adds	r3, r3, #4
 1264 00b6 1B88     		ldrh	r3, [r3]
 1265              		.loc 1 264 16
 1266 00b8 1B0A     		lsrs	r3, r3, #8
 1267 00ba 99B2     		uxth	r1, r3
 1268              		.loc 1 264 12
 1269 00bc 3B19     		adds	r3, r7, r4
 1270 00be 1B78     		ldrb	r3, [r3]
 1271 00c0 3A19     		adds	r2, r7, r4
 1272 00c2 581C     		adds	r0, r3, #1
 1273 00c4 1070     		strb	r0, [r2]
 1274 00c6 1A00     		movs	r2, r3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 28


 1275              		.loc 1 264 16
 1276 00c8 C9B2     		uxtb	r1, r1
 1277 00ca 7B19     		adds	r3, r7, r5
 1278 00cc 9954     		strb	r1, [r3, r2]
 265:Core/Src/main.c ****   TxBufU1[i++] = PUPS[3] >> 0;
 1279              		.loc 1 265 22
 1280 00ce 7B68     		ldr	r3, [r7, #4]
 1281 00d0 0633     		adds	r3, r3, #6
 1282 00d2 1988     		ldrh	r1, [r3]
 1283              		.loc 1 265 12
 1284 00d4 3B19     		adds	r3, r7, r4
 1285 00d6 1B78     		ldrb	r3, [r3]
 1286 00d8 3A19     		adds	r2, r7, r4
 1287 00da 581C     		adds	r0, r3, #1
 1288 00dc 1070     		strb	r0, [r2]
 1289 00de 1A00     		movs	r2, r3
 1290              		.loc 1 265 16
 1291 00e0 C9B2     		uxtb	r1, r1
 1292 00e2 7B19     		adds	r3, r7, r5
 1293 00e4 9954     		strb	r1, [r3, r2]
 266:Core/Src/main.c ****   TxBufU1[i++] = PUPS[3] >> 8;
 1294              		.loc 1 266 22
 1295 00e6 7B68     		ldr	r3, [r7, #4]
 1296 00e8 0633     		adds	r3, r3, #6
 1297 00ea 1B88     		ldrh	r3, [r3]
 1298              		.loc 1 266 16
 1299 00ec 1B0A     		lsrs	r3, r3, #8
 1300 00ee 99B2     		uxth	r1, r3
 1301              		.loc 1 266 12
 1302 00f0 3B19     		adds	r3, r7, r4
 1303 00f2 1B78     		ldrb	r3, [r3]
 1304 00f4 3A19     		adds	r2, r7, r4
 1305 00f6 581C     		adds	r0, r3, #1
 1306 00f8 1070     		strb	r0, [r2]
 1307 00fa 1A00     		movs	r2, r3
 1308              		.loc 1 266 16
 1309 00fc C9B2     		uxtb	r1, r1
 1310 00fe 7B19     		adds	r3, r7, r5
 1311 0100 9954     		strb	r1, [r3, r2]
 267:Core/Src/main.c ****   TxBufU1[i++] = PUPS[4] >> 0;
 1312              		.loc 1 267 22
 1313 0102 7B68     		ldr	r3, [r7, #4]
 1314 0104 0833     		adds	r3, r3, #8
 1315 0106 1988     		ldrh	r1, [r3]
 1316              		.loc 1 267 12
 1317 0108 3B19     		adds	r3, r7, r4
 1318 010a 1B78     		ldrb	r3, [r3]
 1319 010c 3A19     		adds	r2, r7, r4
 1320 010e 581C     		adds	r0, r3, #1
 1321 0110 1070     		strb	r0, [r2]
 1322 0112 1A00     		movs	r2, r3
 1323              		.loc 1 267 16
 1324 0114 C9B2     		uxtb	r1, r1
 1325 0116 7B19     		adds	r3, r7, r5
 1326 0118 9954     		strb	r1, [r3, r2]
 268:Core/Src/main.c ****   TxBufU1[i++] = PUPS[4] >> 8;
 1327              		.loc 1 268 22
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 29


 1328 011a 7B68     		ldr	r3, [r7, #4]
 1329 011c 0833     		adds	r3, r3, #8
 1330 011e 1B88     		ldrh	r3, [r3]
 1331              		.loc 1 268 16
 1332 0120 1B0A     		lsrs	r3, r3, #8
 1333 0122 99B2     		uxth	r1, r3
 1334              		.loc 1 268 12
 1335 0124 3B19     		adds	r3, r7, r4
 1336 0126 1B78     		ldrb	r3, [r3]
 1337 0128 3A19     		adds	r2, r7, r4
 1338 012a 581C     		adds	r0, r3, #1
 1339 012c 1070     		strb	r0, [r2]
 1340 012e 1A00     		movs	r2, r3
 1341              		.loc 1 268 16
 1342 0130 C9B2     		uxtb	r1, r1
 1343 0132 7B19     		adds	r3, r7, r5
 1344 0134 9954     		strb	r1, [r3, r2]
 269:Core/Src/main.c ****   TxBufU1[i++] = 0xFA;
 1345              		.loc 1 269 12
 1346 0136 3B19     		adds	r3, r7, r4
 1347 0138 1B78     		ldrb	r3, [r3]
 1348 013a 3A19     		adds	r2, r7, r4
 1349 013c 591C     		adds	r1, r3, #1
 1350 013e 1170     		strb	r1, [r2]
 1351 0140 1A00     		movs	r2, r3
 1352              		.loc 1 269 16
 1353 0142 7B19     		adds	r3, r7, r5
 1354 0144 FA21     		movs	r1, #250
 1355 0146 9954     		strb	r1, [r3, r2]
 270:Core/Src/main.c ****   TxBufU1[i++] = 0xFD;
 1356              		.loc 1 270 12
 1357 0148 3B19     		adds	r3, r7, r4
 1358 014a 1B78     		ldrb	r3, [r3]
 1359 014c 3A19     		adds	r2, r7, r4
 1360 014e 591C     		adds	r1, r3, #1
 1361 0150 1170     		strb	r1, [r2]
 1362 0152 1A00     		movs	r2, r3
 1363              		.loc 1 270 16
 1364 0154 7B19     		adds	r3, r7, r5
 1365 0156 FD21     		movs	r1, #253
 1366 0158 9954     		strb	r1, [r3, r2]
 271:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 1367              		.loc 1 271 3
 1368 015a 8023     		movs	r3, #128
 1369 015c 5900     		lsls	r1, r3, #1
 1370 015e 9023     		movs	r3, #144
 1371 0160 DB05     		lsls	r3, r3, #23
 1372 0162 0122     		movs	r2, #1
 1373 0164 1800     		movs	r0, r3
 1374 0166 FFF7FEFF 		bl	HAL_GPIO_WritePin
 272:Core/Src/main.c ****   HAL_UART_Transmit_DMA(&huart1, (const uint8_t *)TxBufU1, i); // DMA
 1375              		.loc 1 272 3
 1376 016a 3B19     		adds	r3, r7, r4
 1377 016c 1B78     		ldrb	r3, [r3]
 1378 016e 9AB2     		uxth	r2, r3
 1379 0170 7919     		adds	r1, r7, r5
 1380 0172 044B     		ldr	r3, .L50
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 30


 1381 0174 1800     		movs	r0, r3
 1382 0176 FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 273:Core/Src/main.c **** }
 1383              		.loc 1 273 1
 1384 017a C046     		nop
 1385 017c BD46     		mov	sp, r7
 1386 017e 08B0     		add	sp, sp, #32
 1387              		@ sp needed
 1388 0180 B0BD     		pop	{r4, r5, r7, pc}
 1389              	.L51:
 1390 0182 C046     		.align	2
 1391              	.L50:
 1392 0184 00000000 		.word	huart1
 1393              		.cfi_endproc
 1394              	.LFE47:
 1396              		.section	.text.main,"ax",%progbits
 1397              		.align	1
 1398              		.global	main
 1399              		.syntax unified
 1400              		.code	16
 1401              		.thumb_func
 1403              	main:
 1404              	.LFB48:
 274:Core/Src/main.c **** /* USER CODE END PFP */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 277:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** /* USER CODE END 0 */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c **** /**
 282:Core/Src/main.c ****  * @brief  The application entry point.
 283:Core/Src/main.c ****  * @retval int
 284:Core/Src/main.c ****  */
 285:Core/Src/main.c **** int main(void)
 286:Core/Src/main.c **** {
 1405              		.loc 1 286 1
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 0
 1408              		@ frame_needed = 1, uses_anonymous_args = 0
 1409 0000 80B5     		push	{r7, lr}
 1410              	.LCFI22:
 1411              		.cfi_def_cfa_offset 8
 1412              		.cfi_offset 7, -8
 1413              		.cfi_offset 14, -4
 1414 0002 00AF     		add	r7, sp, #0
 1415              	.LCFI23:
 1416              		.cfi_def_cfa_register 7
 287:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /* USER CODE END 1 */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 294:Core/Src/main.c ****   HAL_Init();
 1417              		.loc 1 294 3
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 31


 1418 0004 FFF7FEFF 		bl	HAL_Init
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE END Init */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* Configure the system clock */
 301:Core/Src/main.c ****   SystemClock_Config();
 1419              		.loc 1 301 3
 1420 0008 FFF7FEFF 		bl	SystemClock_Config
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* USER CODE END SysInit */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* Initialize all configured peripherals */
 308:Core/Src/main.c ****   MX_GPIO_Init();
 1421              		.loc 1 308 3
 1422 000c FFF7FEFF 		bl	MX_GPIO_Init
 309:Core/Src/main.c ****   MX_DMA_Init();
 1423              		.loc 1 309 3
 1424 0010 FFF7FEFF 		bl	MX_DMA_Init
 310:Core/Src/main.c ****   MX_ADC_Init();
 1425              		.loc 1 310 3
 1426 0014 FFF7FEFF 		bl	MX_ADC_Init
 311:Core/Src/main.c ****   MX_USART1_UART_Init();
 1427              		.loc 1 311 3
 1428 0018 FFF7FEFF 		bl	MX_USART1_UART_Init
 312:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 313:Core/Src/main.c ****   startADC();
 1429              		.loc 1 313 3
 1430 001c FFF7FEFF 		bl	startADC
 1431              	.L54:
 314:Core/Src/main.c ****   /* USER CODE END 2 */
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /* Infinite loop */
 317:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 318:Core/Src/main.c ****   while (1)
 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     /* USER CODE END WHILE */
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 323:Core/Src/main.c ****     if (poolcnt > UPTIMEOUT && UPTIMEOUT != -1)
 1432              		.loc 1 323 17
 1433 0020 084B     		ldr	r3, .L55
 1434 0022 1A68     		ldr	r2, [r3]
 1435 0024 084B     		ldr	r3, .L55+4
 1436 0026 1B68     		ldr	r3, [r3]
 1437              		.loc 1 323 8
 1438 0028 9A42     		cmp	r2, r3
 1439 002a F9D9     		bls	.L54
 1440              		.loc 1 323 42 discriminator 1
 1441 002c 064B     		ldr	r3, .L55+4
 1442 002e 1B68     		ldr	r3, [r3]
 1443              		.loc 1 323 29 discriminator 1
 1444 0030 0133     		adds	r3, r3, #1
 1445 0032 F5D0     		beq	.L54
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 32


 324:Core/Src/main.c ****     {
 325:Core/Src/main.c ****       poolcnt = 0;
 1446              		.loc 1 325 15
 1447 0034 034B     		ldr	r3, .L55
 1448 0036 0022     		movs	r2, #0
 1449 0038 1A60     		str	r2, [r3]
 326:Core/Src/main.c ****       AcUpload(AdcValue); // 主动长传传感器数据 4个模拟量 1个角度数据
 1450              		.loc 1 326 7
 1451 003a 044B     		ldr	r3, .L55+8
 1452 003c 1800     		movs	r0, r3
 1453 003e FFF7FEFF 		bl	AcUpload
 323:Core/Src/main.c ****     {
 1454              		.loc 1 323 8
 1455 0042 EDE7     		b	.L54
 1456              	.L56:
 1457              		.align	2
 1458              	.L55:
 1459 0044 00000000 		.word	poolcnt
 1460 0048 00000000 		.word	UPTIMEOUT
 1461 004c 00000000 		.word	AdcValue
 1462              		.cfi_endproc
 1463              	.LFE48:
 1465              		.section	.text.SystemClock_Config,"ax",%progbits
 1466              		.align	1
 1467              		.global	SystemClock_Config
 1468              		.syntax unified
 1469              		.code	16
 1470              		.thumb_func
 1472              	SystemClock_Config:
 1473              	.LFB49:
 327:Core/Src/main.c ****     }
 328:Core/Src/main.c ****   }
 329:Core/Src/main.c ****   /* USER CODE END 3 */
 330:Core/Src/main.c **** }
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** /**
 333:Core/Src/main.c ****  * @brief System Clock Configuration
 334:Core/Src/main.c ****  * @retval None
 335:Core/Src/main.c ****  */
 336:Core/Src/main.c **** void SystemClock_Config(void)
 337:Core/Src/main.c **** {
 1474              		.loc 1 337 1
 1475              		.cfi_startproc
 1476              		@ args = 0, pretend = 0, frame = 80
 1477              		@ frame_needed = 1, uses_anonymous_args = 0
 1478 0000 90B5     		push	{r4, r7, lr}
 1479              	.LCFI24:
 1480              		.cfi_def_cfa_offset 12
 1481              		.cfi_offset 4, -12
 1482              		.cfi_offset 7, -8
 1483              		.cfi_offset 14, -4
 1484 0002 95B0     		sub	sp, sp, #84
 1485              	.LCFI25:
 1486              		.cfi_def_cfa_offset 96
 1487 0004 00AF     		add	r7, sp, #0
 1488              	.LCFI26:
 1489              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 33


 338:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1490              		.loc 1 338 22
 1491 0006 2024     		movs	r4, #32
 1492 0008 3B19     		adds	r3, r7, r4
 1493 000a 1800     		movs	r0, r3
 1494 000c 3023     		movs	r3, #48
 1495 000e 1A00     		movs	r2, r3
 1496 0010 0021     		movs	r1, #0
 1497 0012 FFF7FEFF 		bl	memset
 339:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1498              		.loc 1 339 22
 1499 0016 1023     		movs	r3, #16
 1500 0018 FB18     		adds	r3, r7, r3
 1501 001a 1800     		movs	r0, r3
 1502 001c 1023     		movs	r3, #16
 1503 001e 1A00     		movs	r2, r3
 1504 0020 0021     		movs	r1, #0
 1505 0022 FFF7FEFF 		bl	memset
 340:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1506              		.loc 1 340 28
 1507 0026 3B00     		movs	r3, r7
 1508 0028 1800     		movs	r0, r3
 1509 002a 1023     		movs	r3, #16
 1510 002c 1A00     		movs	r2, r3
 1511 002e 0021     		movs	r1, #0
 1512 0030 FFF7FEFF 		bl	memset
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 343:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 344:Core/Src/main.c ****    */
 345:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI | RCC_OSCILLATORTYPE_HSI14;
 1513              		.loc 1 345 36
 1514 0034 2100     		movs	r1, r4
 1515 0036 7B18     		adds	r3, r7, r1
 1516 0038 1222     		movs	r2, #18
 1517 003a 1A60     		str	r2, [r3]
 346:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1518              		.loc 1 346 30
 1519 003c 7B18     		adds	r3, r7, r1
 1520 003e 0122     		movs	r2, #1
 1521 0040 DA60     		str	r2, [r3, #12]
 347:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 1522              		.loc 1 347 32
 1523 0042 7B18     		adds	r3, r7, r1
 1524 0044 0122     		movs	r2, #1
 1525 0046 5A61     		str	r2, [r3, #20]
 348:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1526              		.loc 1 348 41
 1527 0048 7B18     		adds	r3, r7, r1
 1528 004a 1022     		movs	r2, #16
 1529 004c 1A61     		str	r2, [r3, #16]
 349:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 1530              		.loc 1 349 43
 1531 004e 7B18     		adds	r3, r7, r1
 1532 0050 1022     		movs	r2, #16
 1533 0052 9A61     		str	r2, [r3, #24]
 350:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 34


 1534              		.loc 1 350 34
 1535 0054 7B18     		adds	r3, r7, r1
 1536 0056 0222     		movs	r2, #2
 1537 0058 1A62     		str	r2, [r3, #32]
 351:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1538              		.loc 1 351 35
 1539 005a 7B18     		adds	r3, r7, r1
 1540 005c 0022     		movs	r2, #0
 1541 005e 5A62     		str	r2, [r3, #36]
 352:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 1542              		.loc 1 352 32
 1543 0060 7B18     		adds	r3, r7, r1
 1544 0062 A022     		movs	r2, #160
 1545 0064 9203     		lsls	r2, r2, #14
 1546 0066 9A62     		str	r2, [r3, #40]
 353:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1547              		.loc 1 353 32
 1548 0068 7B18     		adds	r3, r7, r1
 1549 006a 0022     		movs	r2, #0
 1550 006c DA62     		str	r2, [r3, #44]
 354:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1551              		.loc 1 354 7
 1552 006e 7B18     		adds	r3, r7, r1
 1553 0070 1800     		movs	r0, r3
 1554 0072 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1555 0076 031E     		subs	r3, r0, #0
 1556              		.loc 1 354 6
 1557 0078 01D0     		beq	.L58
 355:Core/Src/main.c ****   {
 356:Core/Src/main.c ****     Error_Handler();
 1558              		.loc 1 356 5
 1559 007a FFF7FEFF 		bl	Error_Handler
 1560              	.L58:
 357:Core/Src/main.c ****   }
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 360:Core/Src/main.c ****    */
 361:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 1561              		.loc 1 361 31
 1562 007e 1021     		movs	r1, #16
 1563 0080 7B18     		adds	r3, r7, r1
 1564 0082 0722     		movs	r2, #7
 1565 0084 1A60     		str	r2, [r3]
 362:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1566              		.loc 1 362 34
 1567 0086 7B18     		adds	r3, r7, r1
 1568 0088 0222     		movs	r2, #2
 1569 008a 5A60     		str	r2, [r3, #4]
 363:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1570              		.loc 1 363 35
 1571 008c 7B18     		adds	r3, r7, r1
 1572 008e 0022     		movs	r2, #0
 1573 0090 9A60     		str	r2, [r3, #8]
 364:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1574              		.loc 1 364 36
 1575 0092 7B18     		adds	r3, r7, r1
 1576 0094 0022     		movs	r2, #0
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 35


 1577 0096 DA60     		str	r2, [r3, #12]
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 1578              		.loc 1 366 7
 1579 0098 7B18     		adds	r3, r7, r1
 1580 009a 0121     		movs	r1, #1
 1581 009c 1800     		movs	r0, r3
 1582 009e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1583 00a2 031E     		subs	r3, r0, #0
 1584              		.loc 1 366 6
 1585 00a4 01D0     		beq	.L59
 367:Core/Src/main.c ****   {
 368:Core/Src/main.c ****     Error_Handler();
 1586              		.loc 1 368 5
 1587 00a6 FFF7FEFF 		bl	Error_Handler
 1588              	.L59:
 369:Core/Src/main.c ****   }
 370:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 1589              		.loc 1 370 38
 1590 00aa 3B00     		movs	r3, r7
 1591 00ac 0122     		movs	r2, #1
 1592 00ae 1A60     		str	r2, [r3]
 371:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 1593              		.loc 1 371 38
 1594 00b0 3B00     		movs	r3, r7
 1595 00b2 0022     		movs	r2, #0
 1596 00b4 9A60     		str	r2, [r3, #8]
 372:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1597              		.loc 1 372 7
 1598 00b6 3B00     		movs	r3, r7
 1599 00b8 1800     		movs	r0, r3
 1600 00ba FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1601 00be 031E     		subs	r3, r0, #0
 1602              		.loc 1 372 6
 1603 00c0 01D0     		beq	.L61
 373:Core/Src/main.c ****   {
 374:Core/Src/main.c ****     Error_Handler();
 1604              		.loc 1 374 5
 1605 00c2 FFF7FEFF 		bl	Error_Handler
 1606              	.L61:
 375:Core/Src/main.c ****   }
 376:Core/Src/main.c **** }
 1607              		.loc 1 376 1
 1608 00c6 C046     		nop
 1609 00c8 BD46     		mov	sp, r7
 1610 00ca 15B0     		add	sp, sp, #84
 1611              		@ sp needed
 1612 00cc 90BD     		pop	{r4, r7, pc}
 1613              		.cfi_endproc
 1614              	.LFE49:
 1616              		.section	.text.MX_ADC_Init,"ax",%progbits
 1617              		.align	1
 1618              		.syntax unified
 1619              		.code	16
 1620              		.thumb_func
 1622              	MX_ADC_Init:
 1623              	.LFB50:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 36


 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** /**
 379:Core/Src/main.c ****  * @brief ADC Initialization Function
 380:Core/Src/main.c ****  * @param None
 381:Core/Src/main.c ****  * @retval None
 382:Core/Src/main.c ****  */
 383:Core/Src/main.c **** static void MX_ADC_Init(void)
 384:Core/Src/main.c **** {
 1624              		.loc 1 384 1
 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 16
 1627              		@ frame_needed = 1, uses_anonymous_args = 0
 1628 0000 80B5     		push	{r7, lr}
 1629              	.LCFI27:
 1630              		.cfi_def_cfa_offset 8
 1631              		.cfi_offset 7, -8
 1632              		.cfi_offset 14, -4
 1633 0002 84B0     		sub	sp, sp, #16
 1634              	.LCFI28:
 1635              		.cfi_def_cfa_offset 24
 1636 0004 00AF     		add	r7, sp, #0
 1637              	.LCFI29:
 1638              		.cfi_def_cfa_register 7
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 0 */
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   /* USER CODE END ADC_Init 0 */
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 1639              		.loc 1 390 26
 1640 0006 3B1D     		adds	r3, r7, #4
 1641 0008 1800     		movs	r0, r3
 1642 000a 0C23     		movs	r3, #12
 1643 000c 1A00     		movs	r2, r3
 1644 000e 0021     		movs	r1, #0
 1645 0010 FFF7FEFF 		bl	memset
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 1 */
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* USER CODE END ADC_Init 1 */
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 397:Core/Src/main.c ****    */
 398:Core/Src/main.c ****   hadc.Instance = ADC1;
 1646              		.loc 1 398 17
 1647 0014 394B     		ldr	r3, .L69
 1648 0016 3A4A     		ldr	r2, .L69+4
 1649 0018 1A60     		str	r2, [r3]
 399:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 1650              		.loc 1 399 28
 1651 001a 384B     		ldr	r3, .L69
 1652 001c 0022     		movs	r2, #0
 1653 001e 5A60     		str	r2, [r3, #4]
 400:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 1654              		.loc 1 400 24
 1655 0020 364B     		ldr	r3, .L69
 1656 0022 0022     		movs	r2, #0
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 37


 1657 0024 9A60     		str	r2, [r3, #8]
 401:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1658              		.loc 1 401 23
 1659 0026 354B     		ldr	r3, .L69
 1660 0028 0022     		movs	r2, #0
 1661 002a DA60     		str	r2, [r3, #12]
 402:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 1662              		.loc 1 402 26
 1663 002c 334B     		ldr	r3, .L69
 1664 002e 0122     		movs	r2, #1
 1665 0030 1A61     		str	r2, [r3, #16]
 403:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1666              		.loc 1 403 26
 1667 0032 324B     		ldr	r3, .L69
 1668 0034 0422     		movs	r2, #4
 1669 0036 5A61     		str	r2, [r3, #20]
 404:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 1670              		.loc 1 404 30
 1671 0038 304B     		ldr	r3, .L69
 1672 003a 0022     		movs	r2, #0
 1673 003c 1A76     		strb	r2, [r3, #24]
 405:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 1674              		.loc 1 405 34
 1675 003e 2F4B     		ldr	r3, .L69
 1676 0040 0022     		movs	r2, #0
 1677 0042 5A76     		strb	r2, [r3, #25]
 406:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = ENABLE;
 1678              		.loc 1 406 32
 1679 0044 2D4B     		ldr	r3, .L69
 1680 0046 0122     		movs	r2, #1
 1681 0048 9A76     		strb	r2, [r3, #26]
 407:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 1682              		.loc 1 407 35
 1683 004a 2C4B     		ldr	r3, .L69
 1684 004c 0022     		movs	r2, #0
 1685 004e DA76     		strb	r2, [r3, #27]
 408:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1686              		.loc 1 408 30
 1687 0050 2A4B     		ldr	r3, .L69
 1688 0052 C222     		movs	r2, #194
 1689 0054 FF32     		adds	r2, r2, #255
 1690 0056 DA61     		str	r2, [r3, #28]
 409:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1691              		.loc 1 409 34
 1692 0058 284B     		ldr	r3, .L69
 1693 005a 0022     		movs	r2, #0
 1694 005c 1A62     		str	r2, [r3, #32]
 410:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = ENABLE;
 1695              		.loc 1 410 35
 1696 005e 274B     		ldr	r3, .L69
 1697 0060 2422     		movs	r2, #36
 1698 0062 0121     		movs	r1, #1
 1699 0064 9954     		strb	r1, [r3, r2]
 411:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 1700              		.loc 1 411 21
 1701 0066 254B     		ldr	r3, .L69
 1702 0068 0122     		movs	r2, #1
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 38


 1703 006a 9A62     		str	r2, [r3, #40]
 412:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 1704              		.loc 1 412 7
 1705 006c 234B     		ldr	r3, .L69
 1706 006e 1800     		movs	r0, r3
 1707 0070 FFF7FEFF 		bl	HAL_ADC_Init
 1708 0074 031E     		subs	r3, r0, #0
 1709              		.loc 1 412 6
 1710 0076 01D0     		beq	.L63
 413:Core/Src/main.c ****   {
 414:Core/Src/main.c ****     Error_Handler();
 1711              		.loc 1 414 5
 1712 0078 FFF7FEFF 		bl	Error_Handler
 1713              	.L63:
 415:Core/Src/main.c ****   }
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 418:Core/Src/main.c ****    */
 419:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
 1714              		.loc 1 419 19
 1715 007c 3B1D     		adds	r3, r7, #4
 1716 007e 0322     		movs	r2, #3
 1717 0080 1A60     		str	r2, [r3]
 420:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 1718              		.loc 1 420 16
 1719 0082 3B1D     		adds	r3, r7, #4
 1720 0084 8022     		movs	r2, #128
 1721 0086 5201     		lsls	r2, r2, #5
 1722 0088 5A60     		str	r2, [r3, #4]
 421:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 1723              		.loc 1 421 24
 1724 008a 3B1D     		adds	r3, r7, #4
 1725 008c 0722     		movs	r2, #7
 1726 008e 9A60     		str	r2, [r3, #8]
 422:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 1727              		.loc 1 422 7
 1728 0090 3A1D     		adds	r2, r7, #4
 1729 0092 1A4B     		ldr	r3, .L69
 1730 0094 1100     		movs	r1, r2
 1731 0096 1800     		movs	r0, r3
 1732 0098 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1733 009c 031E     		subs	r3, r0, #0
 1734              		.loc 1 422 6
 1735 009e 01D0     		beq	.L64
 423:Core/Src/main.c ****   {
 424:Core/Src/main.c ****     Error_Handler();
 1736              		.loc 1 424 5
 1737 00a0 FFF7FEFF 		bl	Error_Handler
 1738              	.L64:
 425:Core/Src/main.c ****   }
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 428:Core/Src/main.c ****    */
 429:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_4;
 1739              		.loc 1 429 19
 1740 00a4 3B1D     		adds	r3, r7, #4
 1741 00a6 0422     		movs	r2, #4
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 39


 1742 00a8 1A60     		str	r2, [r3]
 430:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 1743              		.loc 1 430 7
 1744 00aa 3A1D     		adds	r2, r7, #4
 1745 00ac 134B     		ldr	r3, .L69
 1746 00ae 1100     		movs	r1, r2
 1747 00b0 1800     		movs	r0, r3
 1748 00b2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1749 00b6 031E     		subs	r3, r0, #0
 1750              		.loc 1 430 6
 1751 00b8 01D0     		beq	.L65
 431:Core/Src/main.c ****   {
 432:Core/Src/main.c ****     Error_Handler();
 1752              		.loc 1 432 5
 1753 00ba FFF7FEFF 		bl	Error_Handler
 1754              	.L65:
 433:Core/Src/main.c ****   }
 434:Core/Src/main.c **** 
 435:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 436:Core/Src/main.c ****    */
 437:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;
 1755              		.loc 1 437 19
 1756 00be 3B1D     		adds	r3, r7, #4
 1757 00c0 0522     		movs	r2, #5
 1758 00c2 1A60     		str	r2, [r3]
 438:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 1759              		.loc 1 438 7
 1760 00c4 3A1D     		adds	r2, r7, #4
 1761 00c6 0D4B     		ldr	r3, .L69
 1762 00c8 1100     		movs	r1, r2
 1763 00ca 1800     		movs	r0, r3
 1764 00cc FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1765 00d0 031E     		subs	r3, r0, #0
 1766              		.loc 1 438 6
 1767 00d2 01D0     		beq	.L66
 439:Core/Src/main.c ****   {
 440:Core/Src/main.c ****     Error_Handler();
 1768              		.loc 1 440 5
 1769 00d4 FFF7FEFF 		bl	Error_Handler
 1770              	.L66:
 441:Core/Src/main.c ****   }
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 444:Core/Src/main.c ****    */
 445:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_6;
 1771              		.loc 1 445 19
 1772 00d8 3B1D     		adds	r3, r7, #4
 1773 00da 0622     		movs	r2, #6
 1774 00dc 1A60     		str	r2, [r3]
 446:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 1775              		.loc 1 446 7
 1776 00de 3A1D     		adds	r2, r7, #4
 1777 00e0 064B     		ldr	r3, .L69
 1778 00e2 1100     		movs	r1, r2
 1779 00e4 1800     		movs	r0, r3
 1780 00e6 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1781 00ea 031E     		subs	r3, r0, #0
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 40


 1782              		.loc 1 446 6
 1783 00ec 01D0     		beq	.L68
 447:Core/Src/main.c ****   {
 448:Core/Src/main.c ****     Error_Handler();
 1784              		.loc 1 448 5
 1785 00ee FFF7FEFF 		bl	Error_Handler
 1786              	.L68:
 449:Core/Src/main.c ****   }
 450:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 2 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /* USER CODE END ADC_Init 2 */
 453:Core/Src/main.c **** }
 1787              		.loc 1 453 1
 1788 00f2 C046     		nop
 1789 00f4 BD46     		mov	sp, r7
 1790 00f6 04B0     		add	sp, sp, #16
 1791              		@ sp needed
 1792 00f8 80BD     		pop	{r7, pc}
 1793              	.L70:
 1794 00fa C046     		.align	2
 1795              	.L69:
 1796 00fc 00000000 		.word	hadc
 1797 0100 00240140 		.word	1073816576
 1798              		.cfi_endproc
 1799              	.LFE50:
 1801              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1802              		.align	1
 1803              		.syntax unified
 1804              		.code	16
 1805              		.thumb_func
 1807              	MX_USART1_UART_Init:
 1808              	.LFB51:
 454:Core/Src/main.c **** 
 455:Core/Src/main.c **** /**
 456:Core/Src/main.c ****  * @brief USART1 Initialization Function
 457:Core/Src/main.c ****  * @param None
 458:Core/Src/main.c ****  * @retval None
 459:Core/Src/main.c ****  */
 460:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 461:Core/Src/main.c **** {
 1809              		.loc 1 461 1
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 0
 1812              		@ frame_needed = 1, uses_anonymous_args = 0
 1813 0000 80B5     		push	{r7, lr}
 1814              	.LCFI30:
 1815              		.cfi_def_cfa_offset 8
 1816              		.cfi_offset 7, -8
 1817              		.cfi_offset 14, -4
 1818 0002 00AF     		add	r7, sp, #0
 1819              	.LCFI31:
 1820              		.cfi_def_cfa_register 7
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 466:Core/Src/main.c **** 
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 41


 467:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 470:Core/Src/main.c ****   huart1.Instance = USART1;
 1821              		.loc 1 470 19
 1822 0004 144B     		ldr	r3, .L74
 1823 0006 154A     		ldr	r2, .L74+4
 1824 0008 1A60     		str	r2, [r3]
 471:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1825              		.loc 1 471 24
 1826 000a 134B     		ldr	r3, .L74
 1827 000c E122     		movs	r2, #225
 1828 000e 5202     		lsls	r2, r2, #9
 1829 0010 5A60     		str	r2, [r3, #4]
 472:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1830              		.loc 1 472 26
 1831 0012 114B     		ldr	r3, .L74
 1832 0014 0022     		movs	r2, #0
 1833 0016 9A60     		str	r2, [r3, #8]
 473:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1834              		.loc 1 473 24
 1835 0018 0F4B     		ldr	r3, .L74
 1836 001a 0022     		movs	r2, #0
 1837 001c DA60     		str	r2, [r3, #12]
 474:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1838              		.loc 1 474 22
 1839 001e 0E4B     		ldr	r3, .L74
 1840 0020 0022     		movs	r2, #0
 1841 0022 1A61     		str	r2, [r3, #16]
 475:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1842              		.loc 1 475 20
 1843 0024 0C4B     		ldr	r3, .L74
 1844 0026 0C22     		movs	r2, #12
 1845 0028 5A61     		str	r2, [r3, #20]
 476:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1846              		.loc 1 476 25
 1847 002a 0B4B     		ldr	r3, .L74
 1848 002c 0022     		movs	r2, #0
 1849 002e 9A61     		str	r2, [r3, #24]
 477:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1850              		.loc 1 477 28
 1851 0030 094B     		ldr	r3, .L74
 1852 0032 0022     		movs	r2, #0
 1853 0034 DA61     		str	r2, [r3, #28]
 478:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1854              		.loc 1 478 30
 1855 0036 084B     		ldr	r3, .L74
 1856 0038 0022     		movs	r2, #0
 1857 003a 1A62     		str	r2, [r3, #32]
 479:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1858              		.loc 1 479 38
 1859 003c 064B     		ldr	r3, .L74
 1860 003e 0022     		movs	r2, #0
 1861 0040 5A62     		str	r2, [r3, #36]
 480:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1862              		.loc 1 480 7
 1863 0042 054B     		ldr	r3, .L74
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 42


 1864 0044 1800     		movs	r0, r3
 1865 0046 FFF7FEFF 		bl	HAL_UART_Init
 1866 004a 031E     		subs	r3, r0, #0
 1867              		.loc 1 480 6
 1868 004c 01D0     		beq	.L73
 481:Core/Src/main.c ****   {
 482:Core/Src/main.c ****     Error_Handler();
 1869              		.loc 1 482 5
 1870 004e FFF7FEFF 		bl	Error_Handler
 1871              	.L73:
 483:Core/Src/main.c ****   }
 484:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 487:Core/Src/main.c **** }
 1872              		.loc 1 487 1
 1873 0052 C046     		nop
 1874 0054 BD46     		mov	sp, r7
 1875              		@ sp needed
 1876 0056 80BD     		pop	{r7, pc}
 1877              	.L75:
 1878              		.align	2
 1879              	.L74:
 1880 0058 00000000 		.word	huart1
 1881 005c 00380140 		.word	1073821696
 1882              		.cfi_endproc
 1883              	.LFE51:
 1885              		.section	.text.MX_DMA_Init,"ax",%progbits
 1886              		.align	1
 1887              		.syntax unified
 1888              		.code	16
 1889              		.thumb_func
 1891              	MX_DMA_Init:
 1892              	.LFB52:
 488:Core/Src/main.c **** 
 489:Core/Src/main.c **** /**
 490:Core/Src/main.c ****  * Enable DMA controller clock
 491:Core/Src/main.c ****  */
 492:Core/Src/main.c **** static void MX_DMA_Init(void)
 493:Core/Src/main.c **** {
 1893              		.loc 1 493 1
 1894              		.cfi_startproc
 1895              		@ args = 0, pretend = 0, frame = 8
 1896              		@ frame_needed = 1, uses_anonymous_args = 0
 1897 0000 80B5     		push	{r7, lr}
 1898              	.LCFI32:
 1899              		.cfi_def_cfa_offset 8
 1900              		.cfi_offset 7, -8
 1901              		.cfi_offset 14, -4
 1902 0002 82B0     		sub	sp, sp, #8
 1903              	.LCFI33:
 1904              		.cfi_def_cfa_offset 16
 1905 0004 00AF     		add	r7, sp, #0
 1906              	.LCFI34:
 1907              		.cfi_def_cfa_register 7
 1908              	.LBB4:
 494:Core/Src/main.c **** 
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 43


 495:Core/Src/main.c ****   /* DMA controller clock enable */
 496:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 1909              		.loc 1 496 3
 1910 0006 104B     		ldr	r3, .L77
 1911 0008 5A69     		ldr	r2, [r3, #20]
 1912 000a 0F4B     		ldr	r3, .L77
 1913 000c 0121     		movs	r1, #1
 1914 000e 0A43     		orrs	r2, r1
 1915 0010 5A61     		str	r2, [r3, #20]
 1916 0012 0D4B     		ldr	r3, .L77
 1917 0014 5B69     		ldr	r3, [r3, #20]
 1918 0016 0122     		movs	r2, #1
 1919 0018 1340     		ands	r3, r2
 1920 001a 7B60     		str	r3, [r7, #4]
 1921 001c 7B68     		ldr	r3, [r7, #4]
 1922              	.LBE4:
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****   /* DMA interrupt init */
 499:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 500:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 1923              		.loc 1 500 3
 1924 001e 0022     		movs	r2, #0
 1925 0020 0021     		movs	r1, #0
 1926 0022 0920     		movs	r0, #9
 1927 0024 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 501:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 1928              		.loc 1 501 3
 1929 0028 0920     		movs	r0, #9
 1930 002a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 502:Core/Src/main.c ****   /* DMA1_Channel2_3_IRQn interrupt configuration */
 503:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_3_IRQn, 0, 0);
 1931              		.loc 1 503 3
 1932 002e 0022     		movs	r2, #0
 1933 0030 0021     		movs	r1, #0
 1934 0032 0A20     		movs	r0, #10
 1935 0034 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 504:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 1936              		.loc 1 504 3
 1937 0038 0A20     		movs	r0, #10
 1938 003a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 505:Core/Src/main.c **** }
 1939              		.loc 1 505 1
 1940 003e C046     		nop
 1941 0040 BD46     		mov	sp, r7
 1942 0042 02B0     		add	sp, sp, #8
 1943              		@ sp needed
 1944 0044 80BD     		pop	{r7, pc}
 1945              	.L78:
 1946 0046 C046     		.align	2
 1947              	.L77:
 1948 0048 00100240 		.word	1073876992
 1949              		.cfi_endproc
 1950              	.LFE52:
 1952              		.section	.text.MX_GPIO_Init,"ax",%progbits
 1953              		.align	1
 1954              		.syntax unified
 1955              		.code	16
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 44


 1956              		.thumb_func
 1958              	MX_GPIO_Init:
 1959              	.LFB53:
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** /**
 508:Core/Src/main.c ****  * @brief GPIO Initialization Function
 509:Core/Src/main.c ****  * @param None
 510:Core/Src/main.c ****  * @retval None
 511:Core/Src/main.c ****  */
 512:Core/Src/main.c **** static void MX_GPIO_Init(void)
 513:Core/Src/main.c **** {
 1960              		.loc 1 513 1
 1961              		.cfi_startproc
 1962              		@ args = 0, pretend = 0, frame = 32
 1963              		@ frame_needed = 1, uses_anonymous_args = 0
 1964 0000 90B5     		push	{r4, r7, lr}
 1965              	.LCFI35:
 1966              		.cfi_def_cfa_offset 12
 1967              		.cfi_offset 4, -12
 1968              		.cfi_offset 7, -8
 1969              		.cfi_offset 14, -4
 1970 0002 89B0     		sub	sp, sp, #36
 1971              	.LCFI36:
 1972              		.cfi_def_cfa_offset 48
 1973 0004 00AF     		add	r7, sp, #0
 1974              	.LCFI37:
 1975              		.cfi_def_cfa_register 7
 514:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1976              		.loc 1 514 20
 1977 0006 0C24     		movs	r4, #12
 1978 0008 3B19     		adds	r3, r7, r4
 1979 000a 1800     		movs	r0, r3
 1980 000c 1423     		movs	r3, #20
 1981 000e 1A00     		movs	r2, r3
 1982 0010 0021     		movs	r1, #0
 1983 0012 FFF7FEFF 		bl	memset
 1984              	.LBB5:
 515:Core/Src/main.c **** 
 516:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 517:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 1985              		.loc 1 517 3
 1986 0016 394B     		ldr	r3, .L80
 1987 0018 5A69     		ldr	r2, [r3, #20]
 1988 001a 384B     		ldr	r3, .L80
 1989 001c 8021     		movs	r1, #128
 1990 001e C903     		lsls	r1, r1, #15
 1991 0020 0A43     		orrs	r2, r1
 1992 0022 5A61     		str	r2, [r3, #20]
 1993 0024 354B     		ldr	r3, .L80
 1994 0026 5A69     		ldr	r2, [r3, #20]
 1995 0028 8023     		movs	r3, #128
 1996 002a DB03     		lsls	r3, r3, #15
 1997 002c 1340     		ands	r3, r2
 1998 002e BB60     		str	r3, [r7, #8]
 1999 0030 BB68     		ldr	r3, [r7, #8]
 2000              	.LBE5:
 2001              	.LBB6:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 45


 518:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 2002              		.loc 1 518 3
 2003 0032 324B     		ldr	r3, .L80
 2004 0034 5A69     		ldr	r2, [r3, #20]
 2005 0036 314B     		ldr	r3, .L80
 2006 0038 8021     		movs	r1, #128
 2007 003a 8902     		lsls	r1, r1, #10
 2008 003c 0A43     		orrs	r2, r1
 2009 003e 5A61     		str	r2, [r3, #20]
 2010 0040 2E4B     		ldr	r3, .L80
 2011 0042 5A69     		ldr	r2, [r3, #20]
 2012 0044 8023     		movs	r3, #128
 2013 0046 9B02     		lsls	r3, r3, #10
 2014 0048 1340     		ands	r3, r2
 2015 004a 7B60     		str	r3, [r7, #4]
 2016 004c 7B68     		ldr	r3, [r7, #4]
 2017              	.LBE6:
 2018              	.LBB7:
 519:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 2019              		.loc 1 519 3
 2020 004e 2B4B     		ldr	r3, .L80
 2021 0050 5A69     		ldr	r2, [r3, #20]
 2022 0052 2A4B     		ldr	r3, .L80
 2023 0054 8021     		movs	r1, #128
 2024 0056 C902     		lsls	r1, r1, #11
 2025 0058 0A43     		orrs	r2, r1
 2026 005a 5A61     		str	r2, [r3, #20]
 2027 005c 274B     		ldr	r3, .L80
 2028 005e 5A69     		ldr	r2, [r3, #20]
 2029 0060 8023     		movs	r3, #128
 2030 0062 DB02     		lsls	r3, r3, #11
 2031 0064 1340     		ands	r3, r2
 2032 0066 3B60     		str	r3, [r7]
 2033 0068 3B68     		ldr	r3, [r7]
 2034              	.LBE7:
 520:Core/Src/main.c **** 
 521:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 522:Core/Src/main.c ****   HAL_GPIO_WritePin(RS485EN_GPIO_Port, RS485EN_Pin, GPIO_PIN_RESET);
 2035              		.loc 1 522 3
 2036 006a 8023     		movs	r3, #128
 2037 006c 5900     		lsls	r1, r3, #1
 2038 006e 9023     		movs	r3, #144
 2039 0070 DB05     		lsls	r3, r3, #23
 2040 0072 0022     		movs	r2, #0
 2041 0074 1800     		movs	r0, r3
 2042 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 525:Core/Src/main.c ****   HAL_GPIO_WritePin(SLK_OUT_15_GPIO_Port, SLK_OUT_15_Pin, GPIO_PIN_RESET);
 2043              		.loc 1 525 3
 2044 007a 214B     		ldr	r3, .L80+4
 2045 007c 0022     		movs	r2, #0
 2046 007e 1021     		movs	r1, #16
 2047 0080 1800     		movs	r0, r3
 2048 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 526:Core/Src/main.c **** 
 527:Core/Src/main.c ****   /*Configure GPIO pin : RS485EN_Pin */
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 46


 528:Core/Src/main.c ****   GPIO_InitStruct.Pin = RS485EN_Pin;
 2049              		.loc 1 528 23
 2050 0086 3B19     		adds	r3, r7, r4
 2051 0088 8022     		movs	r2, #128
 2052 008a 5200     		lsls	r2, r2, #1
 2053 008c 1A60     		str	r2, [r3]
 529:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2054              		.loc 1 529 24
 2055 008e 3B19     		adds	r3, r7, r4
 2056 0090 0122     		movs	r2, #1
 2057 0092 5A60     		str	r2, [r3, #4]
 530:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2058              		.loc 1 530 24
 2059 0094 3B19     		adds	r3, r7, r4
 2060 0096 0022     		movs	r2, #0
 2061 0098 9A60     		str	r2, [r3, #8]
 531:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2062              		.loc 1 531 25
 2063 009a 3B19     		adds	r3, r7, r4
 2064 009c 0022     		movs	r2, #0
 2065 009e DA60     		str	r2, [r3, #12]
 532:Core/Src/main.c ****   HAL_GPIO_Init(RS485EN_GPIO_Port, &GPIO_InitStruct);
 2066              		.loc 1 532 3
 2067 00a0 3A19     		adds	r2, r7, r4
 2068 00a2 9023     		movs	r3, #144
 2069 00a4 DB05     		lsls	r3, r3, #23
 2070 00a6 1100     		movs	r1, r2
 2071 00a8 1800     		movs	r0, r3
 2072 00aa FFF7FEFF 		bl	HAL_GPIO_Init
 533:Core/Src/main.c **** 
 534:Core/Src/main.c ****   /*Configure GPIO pin : SSD_IN_1_Pin */
 535:Core/Src/main.c ****   GPIO_InitStruct.Pin = SSD_IN_1_Pin;
 2073              		.loc 1 535 23
 2074 00ae 3B19     		adds	r3, r7, r4
 2075 00b0 0822     		movs	r2, #8
 2076 00b2 1A60     		str	r2, [r3]
 536:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2077              		.loc 1 536 24
 2078 00b4 3B19     		adds	r3, r7, r4
 2079 00b6 0022     		movs	r2, #0
 2080 00b8 5A60     		str	r2, [r3, #4]
 537:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 2081              		.loc 1 537 24
 2082 00ba 3B19     		adds	r3, r7, r4
 2083 00bc 0122     		movs	r2, #1
 2084 00be 9A60     		str	r2, [r3, #8]
 538:Core/Src/main.c ****   HAL_GPIO_Init(SSD_IN_1_GPIO_Port, &GPIO_InitStruct);
 2085              		.loc 1 538 3
 2086 00c0 3B19     		adds	r3, r7, r4
 2087 00c2 0F4A     		ldr	r2, .L80+4
 2088 00c4 1900     		movs	r1, r3
 2089 00c6 1000     		movs	r0, r2
 2090 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   /*Configure GPIO pin : SLK_OUT_15_Pin */
 541:Core/Src/main.c ****   GPIO_InitStruct.Pin = SLK_OUT_15_Pin;
 2091              		.loc 1 541 23
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 47


 2092 00cc 2100     		movs	r1, r4
 2093 00ce 7B18     		adds	r3, r7, r1
 2094 00d0 1022     		movs	r2, #16
 2095 00d2 1A60     		str	r2, [r3]
 542:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2096              		.loc 1 542 24
 2097 00d4 7B18     		adds	r3, r7, r1
 2098 00d6 0122     		movs	r2, #1
 2099 00d8 5A60     		str	r2, [r3, #4]
 543:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2100              		.loc 1 543 24
 2101 00da 7B18     		adds	r3, r7, r1
 2102 00dc 0022     		movs	r2, #0
 2103 00de 9A60     		str	r2, [r3, #8]
 544:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2104              		.loc 1 544 25
 2105 00e0 7B18     		adds	r3, r7, r1
 2106 00e2 0022     		movs	r2, #0
 2107 00e4 DA60     		str	r2, [r3, #12]
 545:Core/Src/main.c ****   HAL_GPIO_Init(SLK_OUT_15_GPIO_Port, &GPIO_InitStruct);
 2108              		.loc 1 545 3
 2109 00e6 7B18     		adds	r3, r7, r1
 2110 00e8 054A     		ldr	r2, .L80+4
 2111 00ea 1900     		movs	r1, r3
 2112 00ec 1000     		movs	r0, r2
 2113 00ee FFF7FEFF 		bl	HAL_GPIO_Init
 546:Core/Src/main.c **** }
 2114              		.loc 1 546 1
 2115 00f2 C046     		nop
 2116 00f4 BD46     		mov	sp, r7
 2117 00f6 09B0     		add	sp, sp, #36
 2118              		@ sp needed
 2119 00f8 90BD     		pop	{r4, r7, pc}
 2120              	.L81:
 2121 00fa C046     		.align	2
 2122              	.L80:
 2123 00fc 00100240 		.word	1073876992
 2124 0100 00040048 		.word	1207960576
 2125              		.cfi_endproc
 2126              	.LFE53:
 2128              		.section	.text.Error_Handler,"ax",%progbits
 2129              		.align	1
 2130              		.global	Error_Handler
 2131              		.syntax unified
 2132              		.code	16
 2133              		.thumb_func
 2135              	Error_Handler:
 2136              	.LFB54:
 547:Core/Src/main.c **** 
 548:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 549:Core/Src/main.c **** 
 550:Core/Src/main.c **** /* USER CODE END 4 */
 551:Core/Src/main.c **** 
 552:Core/Src/main.c **** /**
 553:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 554:Core/Src/main.c ****  * @retval None
 555:Core/Src/main.c ****  */
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 48


 556:Core/Src/main.c **** void Error_Handler(void)
 557:Core/Src/main.c **** {
 2137              		.loc 1 557 1
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 0
 2140              		@ frame_needed = 1, uses_anonymous_args = 0
 2141 0000 80B5     		push	{r7, lr}
 2142              	.LCFI38:
 2143              		.cfi_def_cfa_offset 8
 2144              		.cfi_offset 7, -8
 2145              		.cfi_offset 14, -4
 2146 0002 00AF     		add	r7, sp, #0
 2147              	.LCFI39:
 2148              		.cfi_def_cfa_register 7
 2149              	.LBB8:
 2150              	.LBB9:
 2151              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 49


  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 50


  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2152              		.loc 2 142 3
 2153              		.syntax divided
 2154              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2155 0004 72B6     		cpsid i
 2156              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2157              		.loc 2 143 1
 2158              		.thumb
 2159              		.syntax unified
 2160 0006 C046     		nop
 2161              	.L83:
 2162              	.LBE9:
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 51


 2163              	.LBE8:
 558:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 559:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 560:Core/Src/main.c ****   __disable_irq();
 561:Core/Src/main.c ****   while (1)
 2164              		.loc 1 561 9 discriminator 1
 2165 0008 FEE7     		b	.L83
 2166              		.cfi_endproc
 2167              	.LFE54:
 2169              		.text
 2170              	.Letext0:
 2171              		.file 3 "c:\\program files (x86)\\openocdarmgccbuildtools\\gcc-arm-none-eabi-10.3-2021.10-win32\\a
 2172              		.file 4 "c:\\program files (x86)\\openocdarmgccbuildtools\\gcc-arm-none-eabi-10.3-2021.10-win32\\a
 2173              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f031x6.h"
 2174              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 2175              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2176              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 2177              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 2178              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 2179              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 2180              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 2181              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 52


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:22     .bss.hadc:00000000 hadc
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:19     .bss.hadc:00000000 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:29     .bss.hdma_adc:00000000 hdma_adc
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:26     .bss.hdma_adc:00000000 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:36     .bss.huart1:00000000 huart1
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:33     .bss.huart1:00000000 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:43     .bss.hdma_usart1_rx:00000000 hdma_usart1_rx
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:40     .bss.hdma_usart1_rx:00000000 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:50     .bss.hdma_usart1_tx:00000000 hdma_usart1_tx
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:47     .bss.hdma_usart1_tx:00000000 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:57     .data.UPTIMEOUT:00000000 UPTIMEOUT
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:54     .data.UPTIMEOUT:00000000 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:64     .bss.AdDataOrig:00000000 AdDataOrig
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:61     .bss.AdDataOrig:00000000 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:71     .bss.AdcValue:00000000 AdcValue
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:68     .bss.AdcValue:00000000 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:78     .bss.poolcnt:00000000 poolcnt
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:75     .bss.poolcnt:00000000 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:85     .bss.readmavalue:00000000 readmavalue
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:82     .bss.readmavalue:00000000 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:88     .text.delay_ns:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:94     .text.delay_ns:00000000 delay_ns
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:149    .text.delay_us:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:155    .text.delay_us:00000000 delay_us
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:208    .text.delay_ms:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:214    .text.delay_ms:00000000 delay_ms
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:260    .text.readma710:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:266    .text.readma710:00000000 readma710
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:796    .text.readma710:000003b0 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:801    .text.readma710:000003b8 $t
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:891    .text.readma710:00000458 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:896    .text.startADC:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:902    .text.startADC:00000000 startADC
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:931    .text.startADC:00000018 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:937    .text.stopADC:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:943    .text.stopADC:00000000 stopADC
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:969    .text.stopADC:00000014 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:975    .text.HAL_ADC_ConvCpltCallback:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:981    .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1122   .text.HAL_ADC_ConvCpltCallback:000000bc $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1128   .text.AcUpload:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1134   .text.AcUpload:00000000 AcUpload
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1392   .text.AcUpload:00000184 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1397   .text.main:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1403   .text.main:00000000 main
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1472   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1958   .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1891   .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1622   .text.MX_ADC_Init:00000000 MX_ADC_Init
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1807   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1459   .text.main:00000044 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1466   .text.SystemClock_Config:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:2135   .text.Error_Handler:00000000 Error_Handler
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1617   .text.MX_ADC_Init:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1796   .text.MX_ADC_Init:000000fc $d
ARM GAS  C:\Users\mason\AppData\Local\Temp\ccexfdiV.s 			page 53


C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1802   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1880   .text.MX_USART1_UART_Init:00000058 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1886   .text.MX_DMA_Init:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1948   .text.MX_DMA_Init:00000048 $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:1953   .text.MX_GPIO_Init:00000000 $t
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:2123   .text.MX_GPIO_Init:000000fc $d
C:\Users\mason\AppData\Local\Temp\ccexfdiV.s:2129   .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_ReadPin
HAL_ADC_Start_DMA
HAL_ADC_Stop_DMA
__aeabi_uidiv
memset
HAL_UART_Transmit_DMA
HAL_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_Init
